if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2496";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__21342__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__21342 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21342__delegate.call(this, args);
    };
    G__21342.cljs$lang$maxFixedArity = 0;
    G__21342.cljs$lang$applyTo = function(arglist__21343) {
      var args = cljs.core.seq(arglist__21343);
      return G__21342__delegate(args);
    };
    G__21342.cljs$core$IFn$_invoke$arity$variadic = G__21342__delegate;
    return G__21342;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3616__auto__ = ty;
    if (cljs.core.truth_(and__3616__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3616__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4515__auto___21344 = len;
  var i_21345 = 0;
  while (true) {
    if (i_21345 < n__4515__auto___21344) {
      new_arr[i_21345] = arr[i_21345];
      var G__21346 = i_21345 + 1;
      i_21345 = G__21346;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__21347__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__21347 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21347__delegate.call(this, array, i, idxs);
    };
    G__21347.cljs$lang$maxFixedArity = 2;
    G__21347.cljs$lang$applyTo = function(arglist__21348) {
      var array = cljs.core.first(arglist__21348);
      arglist__21348 = cljs.core.next(arglist__21348);
      var i = cljs.core.first(arglist__21348);
      var idxs = cljs.core.rest(arglist__21348);
      return G__21347__delegate(array, i, idxs);
    };
    G__21347.cljs$core$IFn$_invoke$arity$variadic = G__21347__delegate;
    return G__21347;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__21349__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__21349 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21349__delegate.call(this, array, idx, idx2, idxv);
    };
    G__21349.cljs$lang$maxFixedArity = 3;
    G__21349.cljs$lang$applyTo = function(arglist__21350) {
      var array = cljs.core.first(arglist__21350);
      arglist__21350 = cljs.core.next(arglist__21350);
      var idx = cljs.core.first(arglist__21350);
      arglist__21350 = cljs.core.next(arglist__21350);
      var idx2 = cljs.core.first(arglist__21350);
      var idxv = cljs.core.rest(arglist__21350);
      return G__21349__delegate(array, idx, idx2, idxv);
    };
    G__21349.cljs$core$IFn$_invoke$arity$variadic = G__21349__delegate;
    return G__21349;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.call(null, args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__21351) {
    var obj = cljs.core.first(arglist__21351);
    arglist__21351 = cljs.core.next(arglist__21351);
    var s = cljs.core.first(arglist__21351);
    var args = cljs.core.rest(arglist__21351);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj21353 = {};
  return obj21353;
}();
cljs.core.IFn = function() {
  var obj21355 = {};
  return obj21355;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = cljs.core._invoke[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._invoke["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj21357 = {};
  return obj21357;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3616__auto__ = value;
    if (and__3616__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4272__auto__ = value == null ? null : value;
    return function() {
      var or__3628__auto__ = cljs.core._clone[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._clone["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj21359 = {};
  return obj21359;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._count[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._count["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj21361 = {};
  return obj21361;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._empty[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._empty["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj21363 = {};
  return obj21363;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._conj[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._conj["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj21365 = {};
  return obj21365;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3616__auto__ = coll;
      if (and__3616__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4272__auto__ = coll == null ? null : coll;
      return function() {
        var or__3628__auto__ = cljs.core._nth[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._nth["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3616__auto__ = coll;
      if (and__3616__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4272__auto__ = coll == null ? null : coll;
      return function() {
        var or__3628__auto__ = cljs.core._nth[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._nth["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj21367 = {};
  return obj21367;
}();
cljs.core.ISeq = function() {
  var obj21369 = {};
  return obj21369;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._first[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._first["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._rest[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._rest["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj21371 = {};
  return obj21371;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._next[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._next["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj21373 = {};
  return obj21373;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._lookup[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._lookup["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._lookup[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._lookup["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj21375 = {};
  return obj21375;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._assoc[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._assoc["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj21377 = {};
  return obj21377;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._dissoc[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._dissoc["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj21379 = {};
  return obj21379;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._key[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._key["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._val[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._val["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj21381 = {};
  return obj21381;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._disjoin[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._disjoin["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj21383 = {};
  return obj21383;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._peek[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._peek["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._pop[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._pop["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj21385 = {};
  return obj21385;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._assoc_n[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj21387 = {};
  return obj21387;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._deref[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._deref["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj21389 = {};
  return obj21389;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj21391 = {};
  return obj21391;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._meta[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._meta["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj21393 = {};
  return obj21393;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._with_meta[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._with_meta["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj21395 = {};
  return obj21395;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3616__auto__ = coll;
      if (and__3616__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4272__auto__ = coll == null ? null : coll;
      return function() {
        var or__3628__auto__ = cljs.core._reduce[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._reduce["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3616__auto__ = coll;
      if (and__3616__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4272__auto__ = coll == null ? null : coll;
      return function() {
        var or__3628__auto__ = cljs.core._reduce[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._reduce["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj21397 = {};
  return obj21397;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj21399 = {};
  return obj21399;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._equiv[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._equiv["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj21401 = {};
  return obj21401;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._hash[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._hash["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj21403 = {};
  return obj21403;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._seq[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._seq["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj21405 = {};
  return obj21405;
}();
cljs.core.IList = function() {
  var obj21407 = {};
  return obj21407;
}();
cljs.core.IRecord = function() {
  var obj21409 = {};
  return obj21409;
}();
cljs.core.IReversible = function() {
  var obj21411 = {};
  return obj21411;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._rseq[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._rseq["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj21413 = {};
  return obj21413;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._entry_key[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._entry_key["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._comparator[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._comparator["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj21415 = {};
  return obj21415;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3616__auto__ = writer;
    if (and__3616__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4272__auto__ = writer == null ? null : writer;
    return function() {
      var or__3628__auto__ = cljs.core._write[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._write["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3616__auto__ = writer;
    if (and__3616__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4272__auto__ = writer == null ? null : writer;
    return function() {
      var or__3628__auto__ = cljs.core._flush[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._flush["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj21417 = {};
  return obj21417;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._pr_writer[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj21419 = {};
  return obj21419;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3616__auto__ = d;
    if (and__3616__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4272__auto__ = d == null ? null : d;
    return function() {
      var or__3628__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj21421 = {};
  return obj21421;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = cljs.core._notify_watches[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = cljs.core._add_watch[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._add_watch["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = cljs.core._remove_watch[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj21423 = {};
  return obj21423;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._as_transient[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._as_transient["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj21425 = {};
  return obj21425;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj21427 = {};
  return obj21427;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj21429 = {};
  return obj21429;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj21431 = {};
  return obj21431;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj21433 = {};
  return obj21433;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3616__auto__ = tcoll;
    if (and__3616__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4272__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3628__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj21435 = {};
  return obj21435;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._compare[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._compare["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj21437 = {};
  return obj21437;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._drop_first[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._drop_first["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj21439 = {};
  return obj21439;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._chunked_first[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj21441 = {};
  return obj21441;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._chunked_next[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj21443 = {};
  return obj21443;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._name[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._name["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._namespace[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._namespace["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj21445 = {};
  return obj21445;
}();
cljs.core.IReset = function() {
  var obj21447 = {};
  return obj21447;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj21449 = {};
  return obj21449;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3616__auto__ = o;
      if (and__3616__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4272__auto__ = o == null ? null : o;
      return function() {
        var or__3628__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj21451 = {};
  return obj21451;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3616__auto__ = o;
    if (and__3616__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4272__auto__ = o == null ? null : o;
    return function() {
      var or__3628__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj21453 = {};
  return obj21453;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3616__auto__ = coll;
    if (and__3616__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4272__auto__ = coll == null ? null : coll;
    return function() {
      var or__3628__auto__ = cljs.core._iterator[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._iterator["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__21454 = i + 2;
        var G__21455 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__21454;
        h1 = G__21455;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj21457 = {};
  return obj21457;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__21458 = i + 1;
          var G__21459 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__21458;
          hash = G__21459;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj21463 = {};
      return obj21463;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__21465 = o;
    if (G__21465) {
      var bit__4302__auto__ = G__21465.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4302__auto__ || G__21465.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash.call(null, o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3616__auto__) {
        return b.ns;
      } else {
        return and__3616__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4049__auto__ = self__._hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__21467 = null;
  var G__21467__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__21467__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__21467 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21467__2.call(this, self__, coll);
      case 3:
        return G__21467__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21467.cljs$core$IFn$_invoke$arity$2 = G__21467__2;
  G__21467.cljs$core$IFn$_invoke$arity$3 = G__21467__3;
  return G__21467;
}();
cljs.core.Symbol.prototype.apply = function(self__, args21466) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21466)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163840;
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__21469 = x;
  if (G__21469) {
    var bit__4309__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = bit__4309__auto__;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return G__21469.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__21469.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__21469);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__21469);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__21471 = value;
  if (G__21471) {
    var bit__4309__auto__ = G__21471.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4309__auto__ || G__21471.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__21471.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21471);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21471);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21473 = coll;
      if (G__21473) {
        var bit__4302__auto__ = G__21473.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4302__auto__ || G__21473.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21475 = coll;
      if (G__21475) {
        var bit__4302__auto__ = G__21475.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4302__auto__ || G__21475.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__21477 = coll;
      if (G__21477) {
        var bit__4302__auto__ = G__21477.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4302__auto__ || G__21477.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21479 = coll;
      if (G__21479) {
        var bit__4302__auto__ = G__21479.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4302__auto__ || G__21479.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__21480__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__21481 = y;
            var G__21482 = cljs.core.first.call(null, more);
            var G__21483 = cljs.core.next.call(null, more);
            x = G__21481;
            y = G__21482;
            more = G__21483;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21480 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21480__delegate.call(this, x, y, more);
    };
    G__21480.cljs$lang$maxFixedArity = 2;
    G__21480.cljs$lang$applyTo = function(arglist__21484) {
      var x = cljs.core.first(arglist__21484);
      arglist__21484 = cljs.core.next(arglist__21484);
      var y = cljs.core.first(arglist__21484);
      var more = cljs.core.rest(arglist__21484);
      return G__21480__delegate(x, y, more);
    };
    G__21480.cljs$core$IFn$_invoke$arity$variadic = G__21480__delegate;
    return G__21480;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21485 = n + 1;
      var G__21486 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__21487 = cljs.core.next.call(null, coll__$1);
      n = G__21485;
      hash_code = G__21486;
      coll__$1 = G__21487;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21488 = n + 1;
      var G__21489 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__21490 = cljs.core.next.call(null, coll__$1);
      n = G__21488;
      hash_code = G__21489;
      coll__$1 = G__21490;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.reduced.call(null, x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__21491 = nval;
            var G__21492 = n + 1;
            val = G__21491;
            n = G__21492;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21493 = nval;
          var G__21494 = n + 1;
          val__$1 = G__21493;
          n = G__21494;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21495 = nval;
          var G__21496 = n + 1;
          val__$1 = G__21495;
          n = G__21496;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__21497 = nval;
            var G__21498 = n + 1;
            val = G__21497;
            n = G__21498;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21499 = nval;
          var G__21500 = n + 1;
          val__$1 = G__21499;
          n = G__21500;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21501 = nval;
          var G__21502 = n + 1;
          val__$1 = G__21501;
          n = G__21502;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__21504 = x;
  if (G__21504) {
    var bit__4309__auto__ = G__21504.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4309__auto__ || G__21504.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__21504.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__21504);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__21504);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__21506 = x;
  if (G__21506) {
    var bit__4309__auto__ = G__21506.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4309__auto__ || G__21506.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__21506.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__21506);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__21506);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__21507 = sn;
      s = G__21507;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__21508__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__21509 = conj.call(null, coll, x);
          var G__21510 = cljs.core.first.call(null, xs);
          var G__21511 = cljs.core.next.call(null, xs);
          coll = G__21509;
          x = G__21510;
          xs = G__21511;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__21508 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21508__delegate.call(this, coll, x, xs);
    };
    G__21508.cljs$lang$maxFixedArity = 2;
    G__21508.cljs$lang$applyTo = function(arglist__21512) {
      var coll = cljs.core.first(arglist__21512);
      arglist__21512 = cljs.core.next(arglist__21512);
      var x = cljs.core.first(arglist__21512);
      var xs = cljs.core.rest(arglist__21512);
      return G__21508__delegate(coll, x, xs);
    };
    G__21508.cljs$core$IFn$_invoke$arity$variadic = G__21508__delegate;
    return G__21508;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__21513 = cljs.core.next.call(null, s);
      var G__21514 = acc + 1;
      s = G__21513;
      acc = G__21514;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__21516 = coll;
      if (G__21516) {
        var bit__4302__auto__ = G__21516.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4302__auto__ || G__21516.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__21517 = cljs.core.next.call(null, coll);
              var G__21518 = n - 1;
              coll = G__21517;
              n = G__21518;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__21519 = cljs.core.next.call(null, coll);
              var G__21520 = n - 1;
              var G__21521 = not_found;
              coll = G__21519;
              n = G__21520;
              not_found = G__21521;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__21526 = coll;
          if (G__21526) {
            var bit__4302__auto__ = G__21526.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4302__auto__ || G__21526.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__21527 = coll;
                  if (G__21527) {
                    var bit__4309__auto__ = G__21527.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4309__auto__ || G__21527.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__21527.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21527);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21527);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__21528 = coll;
          if (G__21528) {
            var bit__4302__auto__ = G__21528.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4302__auto__ || G__21528.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__21529 = coll;
                  if (G__21529) {
                    var bit__4309__auto__ = G__21529.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4309__auto__ || G__21529.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__21529.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21529);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21529);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq.call(null, xs)) {
      var G__21530 = n__$1 - 1;
      var G__21531 = cljs.core.rest.call(null, xs);
      n__$1 = G__21530;
      xs = G__21531;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__21534 = o;
        if (G__21534) {
          var bit__4302__auto__ = G__21534.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4302__auto__ || G__21534.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__21535 = o;
        if (G__21535) {
          var bit__4302__auto__ = G__21535.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4302__auto__ || G__21535.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__21536__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__21537 = ret;
          var G__21538 = cljs.core.first.call(null, kvs);
          var G__21539 = cljs.core.second.call(null, kvs);
          var G__21540 = cljs.core.nnext.call(null, kvs);
          coll = G__21537;
          k = G__21538;
          v = G__21539;
          kvs = G__21540;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__21536 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21536__delegate.call(this, coll, k, v, kvs);
    };
    G__21536.cljs$lang$maxFixedArity = 3;
    G__21536.cljs$lang$applyTo = function(arglist__21541) {
      var coll = cljs.core.first(arglist__21541);
      arglist__21541 = cljs.core.next(arglist__21541);
      var k = cljs.core.first(arglist__21541);
      arglist__21541 = cljs.core.next(arglist__21541);
      var v = cljs.core.first(arglist__21541);
      var kvs = cljs.core.rest(arglist__21541);
      return G__21536__delegate(coll, k, v, kvs);
    };
    G__21536.cljs$core$IFn$_invoke$arity$variadic = G__21536__delegate;
    return G__21536;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__21542__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__21543 = ret;
            var G__21544 = cljs.core.first.call(null, ks);
            var G__21545 = cljs.core.next.call(null, ks);
            coll = G__21543;
            k = G__21544;
            ks = G__21545;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__21542 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21542__delegate.call(this, coll, k, ks);
    };
    G__21542.cljs$lang$maxFixedArity = 2;
    G__21542.cljs$lang$applyTo = function(arglist__21546) {
      var coll = cljs.core.first(arglist__21546);
      arglist__21546 = cljs.core.next(arglist__21546);
      var k = cljs.core.first(arglist__21546);
      var ks = cljs.core.rest(arglist__21546);
      return G__21542__delegate(coll, k, ks);
    };
    G__21542.cljs$core$IFn$_invoke$arity$variadic = G__21542__delegate;
    return G__21542;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3628__auto__ = goog.isFunction(f);
  if (or__3628__auto__) {
    return or__3628__auto__;
  } else {
    var G__21550 = f;
    if (G__21550) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto____$1 = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto____$1)) {
          return or__3628__auto____$1;
        } else {
          return G__21550.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__21550.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__21550);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__21550);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__21552 = null;
  var G__21552__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__21552__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__21552__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__21552__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__21552__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__21552__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__21552__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__21552__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__21552__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__21552__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21552__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21552__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21552__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21552__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21552__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21552__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21552__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21552__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21552__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21552__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21552__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21552__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__21552 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21552__1.call(this, self__);
      case 2:
        return G__21552__2.call(this, self__, a);
      case 3:
        return G__21552__3.call(this, self__, a, b);
      case 4:
        return G__21552__4.call(this, self__, a, b, c);
      case 5:
        return G__21552__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21552__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21552__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21552__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21552__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21552__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21552__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21552__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21552__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21552__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21552__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21552__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21552__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21552__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21552__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21552__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21552__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21552__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21552.cljs$core$IFn$_invoke$arity$1 = G__21552__1;
  G__21552.cljs$core$IFn$_invoke$arity$2 = G__21552__2;
  G__21552.cljs$core$IFn$_invoke$arity$3 = G__21552__3;
  G__21552.cljs$core$IFn$_invoke$arity$4 = G__21552__4;
  G__21552.cljs$core$IFn$_invoke$arity$5 = G__21552__5;
  G__21552.cljs$core$IFn$_invoke$arity$6 = G__21552__6;
  G__21552.cljs$core$IFn$_invoke$arity$7 = G__21552__7;
  G__21552.cljs$core$IFn$_invoke$arity$8 = G__21552__8;
  G__21552.cljs$core$IFn$_invoke$arity$9 = G__21552__9;
  G__21552.cljs$core$IFn$_invoke$arity$10 = G__21552__10;
  G__21552.cljs$core$IFn$_invoke$arity$11 = G__21552__11;
  G__21552.cljs$core$IFn$_invoke$arity$12 = G__21552__12;
  G__21552.cljs$core$IFn$_invoke$arity$13 = G__21552__13;
  G__21552.cljs$core$IFn$_invoke$arity$14 = G__21552__14;
  G__21552.cljs$core$IFn$_invoke$arity$15 = G__21552__15;
  G__21552.cljs$core$IFn$_invoke$arity$16 = G__21552__16;
  G__21552.cljs$core$IFn$_invoke$arity$17 = G__21552__17;
  G__21552.cljs$core$IFn$_invoke$arity$18 = G__21552__18;
  G__21552.cljs$core$IFn$_invoke$arity$19 = G__21552__19;
  G__21552.cljs$core$IFn$_invoke$arity$20 = G__21552__20;
  G__21552.cljs$core$IFn$_invoke$arity$21 = G__21552__21;
  G__21552.cljs$core$IFn$_invoke$arity$22 = G__21552__22;
  return G__21552;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args21551) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21551)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__21556 = o;
    if (G__21556) {
      var bit__4309__auto__ = G__21556.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4309__auto__ || G__21556.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__21556.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21556);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21556);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3616__auto__ = !(o == null);
    if (and__3616__auto__) {
      var G__21560 = o;
      if (G__21560) {
        var bit__4309__auto__ = G__21560.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4309__auto__ || G__21560.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__21560.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21560);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21560);
      }
    } else {
      return and__3616__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__21561__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__21562 = ret;
            var G__21563 = cljs.core.first.call(null, ks);
            var G__21564 = cljs.core.next.call(null, ks);
            coll = G__21562;
            k = G__21563;
            ks = G__21564;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__21561 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21561__delegate.call(this, coll, k, ks);
    };
    G__21561.cljs$lang$maxFixedArity = 2;
    G__21561.cljs$lang$applyTo = function(arglist__21565) {
      var coll = cljs.core.first(arglist__21565);
      arglist__21565 = cljs.core.next(arglist__21565);
      var k = cljs.core.first(arglist__21565);
      var ks = cljs.core.rest(arglist__21565);
      return G__21561__delegate(coll, k, ks);
    };
    G__21561.cljs$core$IFn$_invoke$arity$variadic = G__21561__delegate;
    return G__21561;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21567 = x;
    if (G__21567) {
      var bit__4309__auto__ = G__21567.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4309__auto__ || G__21567.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__21567.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__21567);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__21567);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21569 = x;
    if (G__21569) {
      var bit__4309__auto__ = G__21569.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4309__auto__ || G__21569.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__21569.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__21569);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__21569);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__21571 = x;
  if (G__21571) {
    var bit__4309__auto__ = G__21571.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4309__auto__ || G__21571.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__21571.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__21571);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__21571);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__21573 = x;
  if (G__21573) {
    var bit__4309__auto__ = G__21573.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4309__auto__ || G__21573.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__21573.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__21573);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__21573);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__21575 = x;
  if (G__21575) {
    var bit__4309__auto__ = G__21575.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4309__auto__ || G__21575.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__21575.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__21575);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__21575);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__21577 = x;
  if (G__21577) {
    var bit__4309__auto__ = G__21577.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4309__auto__ || G__21577.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__21577.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__21577);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__21577);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21579 = x;
    if (G__21579) {
      var bit__4309__auto__ = G__21579.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4309__auto__ || G__21579.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__21579.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__21579);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__21579);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__21581 = x;
  if (G__21581) {
    var bit__4309__auto__ = G__21581.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4309__auto__ || G__21581.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__21581.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__21581);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__21581);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__21583 = x;
  if (G__21583) {
    var bit__4302__auto__ = G__21583.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4302__auto__ || G__21583.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj21587 = {};
    return obj21587;
  };
  var js_obj__1 = function() {
    var G__21588__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__21588 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21588__delegate.call(this, keyvals);
    };
    G__21588.cljs$lang$maxFixedArity = 0;
    G__21588.cljs$lang$applyTo = function(arglist__21589) {
      var keyvals = cljs.core.seq(arglist__21589);
      return G__21588__delegate(keyvals);
    };
    G__21588.cljs$core$IFn$_invoke$arity$variadic = G__21588__delegate;
    return G__21588;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21590 = i__$1 + 1;
      var G__21591 = j__$1 + 1;
      var G__21592 = len__$1 - 1;
      i__$1 = G__21590;
      j__$1 = G__21591;
      len__$1 = G__21592;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21593 = i__$1 - 1;
      var G__21594 = j__$1 - 1;
      var G__21595 = len__$1 - 1;
      i__$1 = G__21593;
      j__$1 = G__21594;
      len__$1 = G__21595;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj21597 = {};
  return obj21597;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__21599 = s;
    if (G__21599) {
      var bit__4309__auto__ = G__21599.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4309__auto__ || G__21599.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__21599.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21599);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21599);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__21601 = s;
  if (G__21601) {
    var bit__4309__auto__ = G__21601.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4309__auto__ || G__21601.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__21601.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__21601);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__21601);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3628__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3628__auto__) {
    return or__3628__auto__;
  } else {
    var G__21605 = f;
    if (G__21605) {
      var bit__4309__auto__ = G__21605.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4309__auto__ || G__21605.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__21605.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__21605);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__21605);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__21606__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__21607 = cljs.core.conj.call(null, s, x__$1);
              var G__21608 = etc;
              s = G__21607;
              xs = G__21608;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__21606 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21606__delegate.call(this, x, y, more);
    };
    G__21606.cljs$lang$maxFixedArity = 2;
    G__21606.cljs$lang$applyTo = function(arglist__21609) {
      var x = cljs.core.first(arglist__21609);
      arglist__21609 = cljs.core.next(arglist__21609);
      var y = cljs.core.first(arglist__21609);
      var more = cljs.core.rest(arglist__21609);
      return G__21606__delegate(x, y, more);
    };
    G__21606.cljs$core$IFn$_invoke$arity$variadic = G__21606__delegate;
    return G__21606;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3628__auto__ = cljs.core.seq.call(null, coll);
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__21611 = x;
            if (G__21611) {
              var bit__4302__auto__ = G__21611.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4302__auto__ || G__21611.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__21612 = xs;
        var G__21613 = ys;
        var G__21614 = len;
        var G__21615 = n + 1;
        xs = G__21612;
        ys = G__21613;
        len = G__21614;
        n = G__21615;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21616 = nval;
          var G__21617 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__21616;
          coll__$1 = G__21617;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__21620 = coll;
      if (G__21620) {
        var bit__4302__auto__ = G__21620.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4302__auto__ || G__21620.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__21621 = coll;
      if (G__21621) {
        var bit__4302__auto__ = G__21621.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4302__auto__ || G__21621.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__21622 = null;
      var G__21622__0 = function() {
        return f.call(null);
      };
      var G__21622__1 = function(x) {
        return cf.call(null, x);
      };
      var G__21622__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__21622 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__21622__0.call(this);
          case 1:
            return G__21622__1.call(this, x);
          case 2:
            return G__21622__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21622.cljs$core$IFn$_invoke$arity$0 = G__21622__0;
      G__21622.cljs$core$IFn$_invoke$arity$1 = G__21622__1;
      G__21622.cljs$core$IFn$_invoke$arity$2 = G__21622__2;
      return G__21622;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__21623__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__21623 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21623__delegate.call(this, x, y, more);
    };
    G__21623.cljs$lang$maxFixedArity = 2;
    G__21623.cljs$lang$applyTo = function(arglist__21624) {
      var x = cljs.core.first(arglist__21624);
      arglist__21624 = cljs.core.next(arglist__21624);
      var y = cljs.core.first(arglist__21624);
      var more = cljs.core.rest(arglist__21624);
      return G__21623__delegate(x, y, more);
    };
    G__21623.cljs$core$IFn$_invoke$arity$variadic = G__21623__delegate;
    return G__21623;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__21625__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__21625 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21625__delegate.call(this, x, y, more);
    };
    G__21625.cljs$lang$maxFixedArity = 2;
    G__21625.cljs$lang$applyTo = function(arglist__21626) {
      var x = cljs.core.first(arglist__21626);
      arglist__21626 = cljs.core.next(arglist__21626);
      var y = cljs.core.first(arglist__21626);
      var more = cljs.core.rest(arglist__21626);
      return G__21625__delegate(x, y, more);
    };
    G__21625.cljs$core$IFn$_invoke$arity$variadic = G__21625__delegate;
    return G__21625;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__21627__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__21627 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21627__delegate.call(this, x, y, more);
    };
    G__21627.cljs$lang$maxFixedArity = 2;
    G__21627.cljs$lang$applyTo = function(arglist__21628) {
      var x = cljs.core.first(arglist__21628);
      arglist__21628 = cljs.core.next(arglist__21628);
      var y = cljs.core.first(arglist__21628);
      var more = cljs.core.rest(arglist__21628);
      return G__21627__delegate(x, y, more);
    };
    G__21627.cljs$core$IFn$_invoke$arity$variadic = G__21627__delegate;
    return G__21627;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__21629__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__21629 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21629__delegate.call(this, x, y, more);
    };
    G__21629.cljs$lang$maxFixedArity = 2;
    G__21629.cljs$lang$applyTo = function(arglist__21630) {
      var x = cljs.core.first(arglist__21630);
      arglist__21630 = cljs.core.next(arglist__21630);
      var y = cljs.core.first(arglist__21630);
      var more = cljs.core.rest(arglist__21630);
      return G__21629__delegate(x, y, more);
    };
    G__21629.cljs$core$IFn$_invoke$arity$variadic = G__21629__delegate;
    return G__21629;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__21631__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__21632 = y;
            var G__21633 = cljs.core.first.call(null, more);
            var G__21634 = cljs.core.next.call(null, more);
            x = G__21632;
            y = G__21633;
            more = G__21634;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21631 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21631__delegate.call(this, x, y, more);
    };
    G__21631.cljs$lang$maxFixedArity = 2;
    G__21631.cljs$lang$applyTo = function(arglist__21635) {
      var x = cljs.core.first(arglist__21635);
      arglist__21635 = cljs.core.next(arglist__21635);
      var y = cljs.core.first(arglist__21635);
      var more = cljs.core.rest(arglist__21635);
      return G__21631__delegate(x, y, more);
    };
    G__21631.cljs$core$IFn$_invoke$arity$variadic = G__21631__delegate;
    return G__21631;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__21636__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__21637 = y;
            var G__21638 = cljs.core.first.call(null, more);
            var G__21639 = cljs.core.next.call(null, more);
            x = G__21637;
            y = G__21638;
            more = G__21639;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21636 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21636__delegate.call(this, x, y, more);
    };
    G__21636.cljs$lang$maxFixedArity = 2;
    G__21636.cljs$lang$applyTo = function(arglist__21640) {
      var x = cljs.core.first(arglist__21640);
      arglist__21640 = cljs.core.next(arglist__21640);
      var y = cljs.core.first(arglist__21640);
      var more = cljs.core.rest(arglist__21640);
      return G__21636__delegate(x, y, more);
    };
    G__21636.cljs$core$IFn$_invoke$arity$variadic = G__21636__delegate;
    return G__21636;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__21641__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__21642 = y;
            var G__21643 = cljs.core.first.call(null, more);
            var G__21644 = cljs.core.next.call(null, more);
            x = G__21642;
            y = G__21643;
            more = G__21644;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21641 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21641__delegate.call(this, x, y, more);
    };
    G__21641.cljs$lang$maxFixedArity = 2;
    G__21641.cljs$lang$applyTo = function(arglist__21645) {
      var x = cljs.core.first(arglist__21645);
      arglist__21645 = cljs.core.next(arglist__21645);
      var y = cljs.core.first(arglist__21645);
      var more = cljs.core.rest(arglist__21645);
      return G__21641__delegate(x, y, more);
    };
    G__21641.cljs$core$IFn$_invoke$arity$variadic = G__21641__delegate;
    return G__21641;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__21646__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__21647 = y;
            var G__21648 = cljs.core.first.call(null, more);
            var G__21649 = cljs.core.next.call(null, more);
            x = G__21647;
            y = G__21648;
            more = G__21649;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21646 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21646__delegate.call(this, x, y, more);
    };
    G__21646.cljs$lang$maxFixedArity = 2;
    G__21646.cljs$lang$applyTo = function(arglist__21650) {
      var x = cljs.core.first(arglist__21650);
      arglist__21650 = cljs.core.next(arglist__21650);
      var y = cljs.core.first(arglist__21650);
      var more = cljs.core.rest(arglist__21650);
      return G__21646__delegate(x, y, more);
    };
    G__21646.cljs$core$IFn$_invoke$arity$variadic = G__21646__delegate;
    return G__21646;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3945__auto__ = x;
    var y__3946__auto__ = y;
    return x__3945__auto__ > y__3946__auto__ ? x__3945__auto__ : y__3946__auto__;
  };
  var max__3 = function() {
    var G__21651__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3945__auto__ = x;
        var y__3946__auto__ = y;
        return x__3945__auto__ > y__3946__auto__ ? x__3945__auto__ : y__3946__auto__;
      }(), more);
    };
    var G__21651 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21651__delegate.call(this, x, y, more);
    };
    G__21651.cljs$lang$maxFixedArity = 2;
    G__21651.cljs$lang$applyTo = function(arglist__21652) {
      var x = cljs.core.first(arglist__21652);
      arglist__21652 = cljs.core.next(arglist__21652);
      var y = cljs.core.first(arglist__21652);
      var more = cljs.core.rest(arglist__21652);
      return G__21651__delegate(x, y, more);
    };
    G__21651.cljs$core$IFn$_invoke$arity$variadic = G__21651__delegate;
    return G__21651;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3952__auto__ = x;
    var y__3953__auto__ = y;
    return x__3952__auto__ < y__3953__auto__ ? x__3952__auto__ : y__3953__auto__;
  };
  var min__3 = function() {
    var G__21653__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3952__auto__ = x;
        var y__3953__auto__ = y;
        return x__3952__auto__ < y__3953__auto__ ? x__3952__auto__ : y__3953__auto__;
      }(), more);
    };
    var G__21653 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21653__delegate.call(this, x, y, more);
    };
    G__21653.cljs$lang$maxFixedArity = 2;
    G__21653.cljs$lang$applyTo = function(arglist__21654) {
      var x = cljs.core.first(arglist__21654);
      arglist__21654 = cljs.core.next(arglist__21654);
      var y = cljs.core.first(arglist__21654);
      var more = cljs.core.rest(arglist__21654);
      return G__21653__delegate(x, y, more);
    };
    G__21653.cljs$core$IFn$_invoke$arity$variadic = G__21653__delegate;
    return G__21653;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__21655__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__21655 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21655__delegate.call(this, x, y, more);
    };
    G__21655.cljs$lang$maxFixedArity = 2;
    G__21655.cljs$lang$applyTo = function(arglist__21656) {
      var x = cljs.core.first(arglist__21656);
      arglist__21656 = cljs.core.next(arglist__21656);
      var y = cljs.core.first(arglist__21656);
      var more = cljs.core.rest(arglist__21656);
      return G__21655__delegate(x, y, more);
    };
    G__21655.cljs$core$IFn$_invoke$arity$variadic = G__21655__delegate;
    return G__21655;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__21657__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__21657 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21657__delegate.call(this, x, y, more);
    };
    G__21657.cljs$lang$maxFixedArity = 2;
    G__21657.cljs$lang$applyTo = function(arglist__21658) {
      var x = cljs.core.first(arglist__21658);
      arglist__21658 = cljs.core.next(arglist__21658);
      var y = cljs.core.first(arglist__21658);
      var more = cljs.core.rest(arglist__21658);
      return G__21657__delegate(x, y, more);
    };
    G__21657.cljs$core$IFn$_invoke$arity$variadic = G__21657__delegate;
    return G__21657;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__21659__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__21659 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21659__delegate.call(this, x, y, more);
    };
    G__21659.cljs$lang$maxFixedArity = 2;
    G__21659.cljs$lang$applyTo = function(arglist__21660) {
      var x = cljs.core.first(arglist__21660);
      arglist__21660 = cljs.core.next(arglist__21660);
      var y = cljs.core.first(arglist__21660);
      var more = cljs.core.rest(arglist__21660);
      return G__21659__delegate(x, y, more);
    };
    G__21659.cljs$core$IFn$_invoke$arity$variadic = G__21659__delegate;
    return G__21659;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__21661__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__21661 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21661__delegate.call(this, x, y, more);
    };
    G__21661.cljs$lang$maxFixedArity = 2;
    G__21661.cljs$lang$applyTo = function(arglist__21662) {
      var x = cljs.core.first(arglist__21662);
      arglist__21662 = cljs.core.next(arglist__21662);
      var y = cljs.core.first(arglist__21662);
      var more = cljs.core.rest(arglist__21662);
      return G__21661__delegate(x, y, more);
    };
    G__21661.cljs$core$IFn$_invoke$arity$variadic = G__21661__delegate;
    return G__21661;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__21663__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__21663 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21663__delegate.call(this, x, y, more);
    };
    G__21663.cljs$lang$maxFixedArity = 2;
    G__21663.cljs$lang$applyTo = function(arglist__21664) {
      var x = cljs.core.first(arglist__21664);
      arglist__21664 = cljs.core.next(arglist__21664);
      var y = cljs.core.first(arglist__21664);
      var more = cljs.core.rest(arglist__21664);
      return G__21663__delegate(x, y, more);
    };
    G__21663.cljs$core$IFn$_invoke$arity$variadic = G__21663__delegate;
    return G__21663;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__21665__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__21665 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21665__delegate.call(this, x, y, more);
    };
    G__21665.cljs$lang$maxFixedArity = 2;
    G__21665.cljs$lang$applyTo = function(arglist__21666) {
      var x = cljs.core.first(arglist__21666);
      arglist__21666 = cljs.core.next(arglist__21666);
      var y = cljs.core.first(arglist__21666);
      var more = cljs.core.rest(arglist__21666);
      return G__21665__delegate(x, y, more);
    };
    G__21665.cljs$core$IFn$_invoke$arity$variadic = G__21665__delegate;
    return G__21665;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__21667__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__21667 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21667__delegate.call(this, x, y, more);
    };
    G__21667.cljs$lang$maxFixedArity = 2;
    G__21667.cljs$lang$applyTo = function(arglist__21668) {
      var x = cljs.core.first(arglist__21668);
      arglist__21668 = cljs.core.next(arglist__21668);
      var y = cljs.core.first(arglist__21668);
      var more = cljs.core.rest(arglist__21668);
      return G__21667__delegate(x, y, more);
    };
    G__21667.cljs$core$IFn$_invoke$arity$variadic = G__21667__delegate;
    return G__21667;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__21669__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__21670 = y;
            var G__21671 = cljs.core.first.call(null, more);
            var G__21672 = cljs.core.next.call(null, more);
            x = G__21670;
            y = G__21671;
            more = G__21672;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21669 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21669__delegate.call(this, x, y, more);
    };
    G__21669.cljs$lang$maxFixedArity = 2;
    G__21669.cljs$lang$applyTo = function(arglist__21673) {
      var x = cljs.core.first(arglist__21673);
      arglist__21673 = cljs.core.next(arglist__21673);
      var y = cljs.core.first(arglist__21673);
      var more = cljs.core.rest(arglist__21673);
      return G__21669__delegate(x, y, more);
    };
    G__21669.cljs$core$IFn$_invoke$arity$variadic = G__21669__delegate;
    return G__21669;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__21674 = n__$1 - 1;
      var G__21675 = cljs.core.next.call(null, xs);
      n__$1 = G__21674;
      xs = G__21675;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return goog.string.buildString(x);
    }
  };
  var str__2 = function() {
    var G__21676__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__21677 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__21678 = cljs.core.next.call(null, more);
          sb = G__21677;
          more = G__21678;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__21676 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21676__delegate.call(this, x, ys);
    };
    G__21676.cljs$lang$maxFixedArity = 1;
    G__21676.cljs$lang$applyTo = function(arglist__21679) {
      var x = cljs.core.first(arglist__21679);
      var ys = cljs.core.rest(arglist__21679);
      return G__21676__delegate(x, ys);
    };
    G__21676.cljs$core$IFn$_invoke$arity$variadic = G__21676__delegate;
    return G__21676;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__21680 = cljs.core.next.call(null, xs);
            var G__21681 = cljs.core.next.call(null, ys);
            xs = G__21680;
            ys = G__21681;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__21682 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__21683 = cljs.core.next.call(null, s);
        res = G__21682;
        s = G__21683;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__21684 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__21685 = cljs.core.next.call(null, s);
      h = G__21684;
      s = G__21685;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__21686 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__21687 = cljs.core.next.call(null, s__$1);
      h = G__21686;
      s__$1 = G__21687;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__21694_21700 = cljs.core.seq.call(null, fn_map);
  var chunk__21695_21701 = null;
  var count__21696_21702 = 0;
  var i__21697_21703 = 0;
  while (true) {
    if (i__21697_21703 < count__21696_21702) {
      var vec__21698_21704 = cljs.core._nth.call(null, chunk__21695_21701, i__21697_21703);
      var key_name_21705 = cljs.core.nth.call(null, vec__21698_21704, 0, null);
      var f_21706 = cljs.core.nth.call(null, vec__21698_21704, 1, null);
      var str_name_21707 = cljs.core.name.call(null, key_name_21705);
      obj[str_name_21707] = f_21706;
      var G__21708 = seq__21694_21700;
      var G__21709 = chunk__21695_21701;
      var G__21710 = count__21696_21702;
      var G__21711 = i__21697_21703 + 1;
      seq__21694_21700 = G__21708;
      chunk__21695_21701 = G__21709;
      count__21696_21702 = G__21710;
      i__21697_21703 = G__21711;
      continue;
    } else {
      var temp__4126__auto___21712 = cljs.core.seq.call(null, seq__21694_21700);
      if (temp__4126__auto___21712) {
        var seq__21694_21713__$1 = temp__4126__auto___21712;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21694_21713__$1)) {
          var c__4415__auto___21714 = cljs.core.chunk_first.call(null, seq__21694_21713__$1);
          var G__21715 = cljs.core.chunk_rest.call(null, seq__21694_21713__$1);
          var G__21716 = c__4415__auto___21714;
          var G__21717 = cljs.core.count.call(null, c__4415__auto___21714);
          var G__21718 = 0;
          seq__21694_21700 = G__21715;
          chunk__21695_21701 = G__21716;
          count__21696_21702 = G__21717;
          i__21697_21703 = G__21718;
          continue;
        } else {
          var vec__21699_21719 = cljs.core.first.call(null, seq__21694_21713__$1);
          var key_name_21720 = cljs.core.nth.call(null, vec__21699_21719, 0, null);
          var f_21721 = cljs.core.nth.call(null, vec__21699_21719, 1, null);
          var str_name_21722 = cljs.core.name.call(null, key_name_21720);
          obj[str_name_21722] = f_21721;
          var G__21723 = cljs.core.next.call(null, seq__21694_21713__$1);
          var G__21724 = null;
          var G__21725 = 0;
          var G__21726 = 0;
          seq__21694_21700 = G__21723;
          chunk__21695_21701 = G__21724;
          count__21696_21702 = G__21725;
          i__21697_21703 = G__21726;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__21728 = coll;
  if (G__21728) {
    var bit__4309__auto__ = G__21728.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4309__auto__ || G__21728.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__21728.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__21728);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__21728);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__21729 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__21729;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__21730 = i - 1;
        var G__21731 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__21730;
        r = G__21731;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__21732) {
    var xs = cljs.core.seq(arglist__21732);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3628__auto__ = coll == null;
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      var G__21736 = coll;
      if (G__21736) {
        var bit__4302__auto__ = G__21736.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4302__auto__ || G__21736.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__21738 = x;
  if (G__21738) {
    var bit__4309__auto__ = G__21738.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4309__auto__ || G__21738.cljs$core$IList$) {
      return true;
    } else {
      if (!G__21738.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__21738);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__21738);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3616__auto__) {
        return b.ns;
      } else {
        return and__3616__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4049__auto__ = self__._hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__21740 = null;
  var G__21740__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__21740__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__21740 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21740__2.call(this, self__, coll);
      case 3:
        return G__21740__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21740.cljs$core$IFn$_invoke$arity$2 = G__21740__2;
  G__21740.cljs$core$IFn$_invoke$arity$3 = G__21740__3;
  return G__21740;
}();
cljs.core.Keyword.prototype.apply = function(self__, args21739) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21739)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__21742 = x;
    if (G__21742) {
      var bit__4302__auto__ = G__21742.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4302__auto__ || G__21742.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__21743 = ls.sval();
        ls = G__21743;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__21745 = s;
    if (G__21745) {
      var bit__4302__auto__ = G__21745.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4302__auto__ || G__21745.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__21746 = cljs.core.next.call(null, s__$1);
      s__$1 = G__21746;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_21747 = 0;
  var xs_21748 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_21748) {
      ret[i_21747] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_21748));
      var G__21749 = i_21747 + 1;
      var G__21750 = cljs.core.next.call(null, xs_21748);
      i_21747 = G__21749;
      xs_21748 = G__21750;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21751 = i + 1;
          var G__21752 = cljs.core.next.call(null, s__$1);
          i = G__21751;
          s__$1 = G__21752;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4515__auto___21753 = size;
      var i_21754 = 0;
      while (true) {
        if (i_21754 < n__4515__auto___21753) {
          a[i_21754] = init_val_or_seq;
          var G__21755 = i_21754 + 1;
          i_21754 = G__21755;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21756 = i + 1;
          var G__21757 = cljs.core.next.call(null, s__$1);
          i = G__21756;
          s__$1 = G__21757;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4515__auto___21758 = size;
      var i_21759 = 0;
      while (true) {
        if (i_21759 < n__4515__auto___21758) {
          a[i_21759] = init_val_or_seq;
          var G__21760 = i_21759 + 1;
          i_21759 = G__21760;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21761 = i + 1;
          var G__21762 = cljs.core.next.call(null, s__$1);
          i = G__21761;
          s__$1 = G__21762;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4515__auto___21763 = size;
      var i_21764 = 0;
      while (true) {
        if (i_21764 < n__4515__auto___21763) {
          a[i_21764] = init_val_or_seq;
          var G__21765 = i_21764 + 1;
          i_21764 = G__21765;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21766 = i + 1;
          var G__21767 = cljs.core.next.call(null, s__$1);
          i = G__21766;
          s__$1 = G__21767;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4515__auto___21768 = size;
      var i_21769 = 0;
      while (true) {
        if (i_21769 < n__4515__auto___21768) {
          a[i_21769] = init_val_or_seq;
          var G__21770 = i_21769 + 1;
          i_21769 = G__21770;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__21771 = cljs.core.next.call(null, s__$1);
        var G__21772 = i - 1;
        var G__21773 = sum + 1;
        s__$1 = G__21771;
        i = G__21772;
        sum = G__21773;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__21774__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__21774 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21774__delegate.call(this, x, y, zs);
    };
    G__21774.cljs$lang$maxFixedArity = 2;
    G__21774.cljs$lang$applyTo = function(arglist__21775) {
      var x = cljs.core.first(arglist__21775);
      arglist__21775 = cljs.core.next(arglist__21775);
      var y = cljs.core.first(arglist__21775);
      var zs = cljs.core.rest(arglist__21775);
      return G__21774__delegate(x, y, zs);
    };
    G__21774.cljs$core$IFn$_invoke$arity$variadic = G__21774__delegate;
    return G__21774;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__21776__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__21776 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21776__delegate.call(this, a, b, c, d, more);
    };
    G__21776.cljs$lang$maxFixedArity = 4;
    G__21776.cljs$lang$applyTo = function(arglist__21777) {
      var a = cljs.core.first(arglist__21777);
      arglist__21777 = cljs.core.next(arglist__21777);
      var b = cljs.core.first(arglist__21777);
      arglist__21777 = cljs.core.next(arglist__21777);
      var c = cljs.core.first(arglist__21777);
      arglist__21777 = cljs.core.next(arglist__21777);
      var d = cljs.core.first(arglist__21777);
      var more = cljs.core.rest(arglist__21777);
      return G__21776__delegate(a, b, c, d, more);
    };
    G__21776.cljs$core$IFn$_invoke$arity$variadic = G__21776__delegate;
    return G__21776;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__21778__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__21779 = ntcoll;
          var G__21780 = cljs.core.first.call(null, vals);
          var G__21781 = cljs.core.next.call(null, vals);
          tcoll = G__21779;
          val = G__21780;
          vals = G__21781;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21778 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21778__delegate.call(this, tcoll, val, vals);
    };
    G__21778.cljs$lang$maxFixedArity = 2;
    G__21778.cljs$lang$applyTo = function(arglist__21782) {
      var tcoll = cljs.core.first(arglist__21782);
      arglist__21782 = cljs.core.next(arglist__21782);
      var val = cljs.core.first(arglist__21782);
      var vals = cljs.core.rest(arglist__21782);
      return G__21778__delegate(tcoll, val, vals);
    };
    G__21778.cljs$core$IFn$_invoke$arity$variadic = G__21778__delegate;
    return G__21778;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__21783__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__21784 = ntcoll;
          var G__21785 = cljs.core.first.call(null, kvs);
          var G__21786 = cljs.core.second.call(null, kvs);
          var G__21787 = cljs.core.nnext.call(null, kvs);
          tcoll = G__21784;
          key = G__21785;
          val = G__21786;
          kvs = G__21787;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21783 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21783__delegate.call(this, tcoll, key, val, kvs);
    };
    G__21783.cljs$lang$maxFixedArity = 3;
    G__21783.cljs$lang$applyTo = function(arglist__21788) {
      var tcoll = cljs.core.first(arglist__21788);
      arglist__21788 = cljs.core.next(arglist__21788);
      var key = cljs.core.first(arglist__21788);
      arglist__21788 = cljs.core.next(arglist__21788);
      var val = cljs.core.first(arglist__21788);
      var kvs = cljs.core.rest(arglist__21788);
      return G__21783__delegate(tcoll, key, val, kvs);
    };
    G__21783.cljs$core$IFn$_invoke$arity$variadic = G__21783__delegate;
    return G__21783;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__21789__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__21790 = ntcoll;
          var G__21791 = cljs.core.first.call(null, ks);
          var G__21792 = cljs.core.next.call(null, ks);
          tcoll = G__21790;
          key = G__21791;
          ks = G__21792;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21789 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21789__delegate.call(this, tcoll, key, ks);
    };
    G__21789.cljs$lang$maxFixedArity = 2;
    G__21789.cljs$lang$applyTo = function(arglist__21793) {
      var tcoll = cljs.core.first(arglist__21793);
      arglist__21793 = cljs.core.next(arglist__21793);
      var key = cljs.core.first(arglist__21793);
      var ks = cljs.core.rest(arglist__21793);
      return G__21789__delegate(tcoll, key, ks);
    };
    G__21789.cljs$core$IFn$_invoke$arity$variadic = G__21789__delegate;
    return G__21789;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__21794__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__21795 = ntcoll;
          var G__21796 = cljs.core.first.call(null, vals);
          var G__21797 = cljs.core.next.call(null, vals);
          tcoll = G__21795;
          val = G__21796;
          vals = G__21797;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21794 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21794__delegate.call(this, tcoll, val, vals);
    };
    G__21794.cljs$lang$maxFixedArity = 2;
    G__21794.cljs$lang$applyTo = function(arglist__21798) {
      var tcoll = cljs.core.first(arglist__21798);
      arglist__21798 = cljs.core.next(arglist__21798);
      var val = cljs.core.first(arglist__21798);
      var vals = cljs.core.rest(arglist__21798);
      return G__21794__delegate(tcoll, val, vals);
    };
    G__21794.cljs$core$IFn$_invoke$arity$variadic = G__21794__delegate;
    return G__21794;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4559 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4559);
      } else {
        return f.call(null, a4559);
      }
    } else {
      var b4560 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4559, b4560);
        } else {
          return f.call(null, a4559, b4560);
        }
      } else {
        var c4561 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4559, b4560, c4561);
          } else {
            return f.call(null, a4559, b4560, c4561);
          }
        } else {
          var d4562 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4559, b4560, c4561, d4562);
            } else {
              return f.call(null, a4559, b4560, c4561, d4562);
            }
          } else {
            var e4563 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4559, b4560, c4561, d4562, e4563);
              } else {
                return f.call(null, a4559, b4560, c4561, d4562, e4563);
              }
            } else {
              var f4564 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4559, b4560, c4561, d4562, e4563, f4564);
                } else {
                  return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564);
                }
              } else {
                var g4565 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4559, b4560, c4561, d4562, e4563, f4564, g4565);
                  } else {
                    return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565);
                  }
                } else {
                  var h4566 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566);
                    } else {
                      return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566);
                    }
                  } else {
                    var i4567 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567);
                      } else {
                        return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567);
                      }
                    } else {
                      var j4568 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568);
                        } else {
                          return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568);
                        }
                      } else {
                        var k4569 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569);
                          } else {
                            return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569);
                          }
                        } else {
                          var l4570 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570);
                            } else {
                              return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570);
                            }
                          } else {
                            var m4571 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571);
                              } else {
                                return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571);
                              }
                            } else {
                              var n4572 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572);
                                } else {
                                  return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572);
                                }
                              } else {
                                var o4573 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573);
                                  } else {
                                    return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573);
                                  }
                                } else {
                                  var p4574 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574);
                                    } else {
                                      return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574);
                                    }
                                  } else {
                                    var q4575 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575);
                                      } else {
                                        return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575);
                                      }
                                    } else {
                                      var r4576 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576);
                                        } else {
                                          return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576);
                                        }
                                      } else {
                                        var s4577 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576, s4577);
                                          } else {
                                            return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576, s4577);
                                          }
                                        } else {
                                          var t4578 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576, s4577, t4578);
                                            } else {
                                              return f.call(null, a4559, b4560, c4561, d4562, e4563, f4564, g4565, h4566, i4567, j4568, k4569, l4570, m4571, n4572, o4573, p4574, q4575, r4576, s4577, t4578);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__21799__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__21799 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__21799__delegate.call(this, f, a, b, c, d, args);
    };
    G__21799.cljs$lang$maxFixedArity = 5;
    G__21799.cljs$lang$applyTo = function(arglist__21800) {
      var f = cljs.core.first(arglist__21800);
      arglist__21800 = cljs.core.next(arglist__21800);
      var a = cljs.core.first(arglist__21800);
      arglist__21800 = cljs.core.next(arglist__21800);
      var b = cljs.core.first(arglist__21800);
      arglist__21800 = cljs.core.next(arglist__21800);
      var c = cljs.core.first(arglist__21800);
      arglist__21800 = cljs.core.next(arglist__21800);
      var d = cljs.core.first(arglist__21800);
      var args = cljs.core.rest(arglist__21800);
      return G__21799__delegate(f, a, b, c, d, args);
    };
    G__21799.cljs$core$IFn$_invoke$arity$variadic = G__21799__delegate;
    return G__21799;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__21801__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__21801 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__21801__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__21801.cljs$lang$maxFixedArity = 6;
    G__21801.cljs$lang$applyTo = function(arglist__21802) {
      var obj = cljs.core.first(arglist__21802);
      arglist__21802 = cljs.core.next(arglist__21802);
      var f = cljs.core.first(arglist__21802);
      arglist__21802 = cljs.core.next(arglist__21802);
      var a = cljs.core.first(arglist__21802);
      arglist__21802 = cljs.core.next(arglist__21802);
      var b = cljs.core.first(arglist__21802);
      arglist__21802 = cljs.core.next(arglist__21802);
      var c = cljs.core.first(arglist__21802);
      arglist__21802 = cljs.core.next(arglist__21802);
      var d = cljs.core.first(arglist__21802);
      var args = cljs.core.rest(arglist__21802);
      return G__21801__delegate(obj, f, a, b, c, d, args);
    };
    G__21801.cljs$core$IFn$_invoke$arity$variadic = G__21801__delegate;
    return G__21801;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__21803__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__21803 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21803__delegate.call(this, x, y, more);
    };
    G__21803.cljs$lang$maxFixedArity = 2;
    G__21803.cljs$lang$applyTo = function(arglist__21804) {
      var x = cljs.core.first(arglist__21804);
      arglist__21804 = cljs.core.next(arglist__21804);
      var y = cljs.core.first(arglist__21804);
      var more = cljs.core.rest(arglist__21804);
      return G__21803__delegate(x, y, more);
    };
    G__21803.cljs$core$IFn$_invoke$arity$variadic = G__21803__delegate;
    return G__21803;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t21808 !== "undefined") {
  } else {
    cljs.core.t21808 = function(nil_iter, meta21809) {
      this.nil_iter = nil_iter;
      this.meta21809 = meta21809;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t21808.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t21808.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t21808.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t21808.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21810) {
      var self__ = this;
      var _21810__$1 = this;
      return self__.meta21809;
    };
    cljs.core.t21808.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21810, meta21809__$1) {
      var self__ = this;
      var _21810__$1 = this;
      return new cljs.core.t21808(self__.nil_iter, meta21809__$1);
    };
    cljs.core.t21808.cljs$lang$type = true;
    cljs.core.t21808.cljs$lang$ctorStr = "cljs.core/t21808";
    cljs.core.t21808.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/t21808");
    };
    cljs.core.__GT_t21808 = function __GT_t21808(nil_iter__$1, meta21809) {
      return new cljs.core.t21808(nil_iter__$1, meta21809);
    };
  }
  return new cljs.core.t21808(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3007, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3003, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = !(lt.stepper == null);
      if (and__3616__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3616__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__21811 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__21811;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4515__auto___21812 = self__.iters.length;
  var i_21813 = 0;
  while (true) {
    if (i_21813 < n__4515__auto___21812) {
      self__.nexts[i_21813] = self__.iters[i_21813].next();
      var G__21814 = i_21813 + 1;
      i_21813 = G__21814;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = !(lt.stepper == null);
      if (and__3616__auto__) {
        return this$.hasNext();
      } else {
        return and__3616__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__21815_21819 = cljs.core.seq.call(null, colls);
  var chunk__21816_21820 = null;
  var count__21817_21821 = 0;
  var i__21818_21822 = 0;
  while (true) {
    if (i__21818_21822 < count__21817_21821) {
      var coll_21823 = cljs.core._nth.call(null, chunk__21816_21820, i__21818_21822);
      iters.push(cljs.core.iter.call(null, coll_21823));
      var G__21824 = seq__21815_21819;
      var G__21825 = chunk__21816_21820;
      var G__21826 = count__21817_21821;
      var G__21827 = i__21818_21822 + 1;
      seq__21815_21819 = G__21824;
      chunk__21816_21820 = G__21825;
      count__21817_21821 = G__21826;
      i__21818_21822 = G__21827;
      continue;
    } else {
      var temp__4126__auto___21828 = cljs.core.seq.call(null, seq__21815_21819);
      if (temp__4126__auto___21828) {
        var seq__21815_21829__$1 = temp__4126__auto___21828;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21815_21829__$1)) {
          var c__4415__auto___21830 = cljs.core.chunk_first.call(null, seq__21815_21829__$1);
          var G__21831 = cljs.core.chunk_rest.call(null, seq__21815_21829__$1);
          var G__21832 = c__4415__auto___21830;
          var G__21833 = cljs.core.count.call(null, c__4415__auto___21830);
          var G__21834 = 0;
          seq__21815_21819 = G__21831;
          chunk__21816_21820 = G__21832;
          count__21817_21821 = G__21833;
          i__21818_21822 = G__21834;
          continue;
        } else {
          var coll_21835 = cljs.core.first.call(null, seq__21815_21829__$1);
          iters.push(cljs.core.iter.call(null, coll_21835));
          var G__21836 = cljs.core.next.call(null, seq__21815_21829__$1);
          var G__21837 = null;
          var G__21838 = 0;
          var G__21839 = 0;
          seq__21815_21819 = G__21836;
          chunk__21816_21820 = G__21837;
          count__21817_21821 = G__21838;
          i__21818_21822 = G__21839;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3628__auto__ = cljs.core.seq.call(null, coll);
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__21840__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__21840 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21840__delegate.call(this, xform, coll, colls);
    };
    G__21840.cljs$lang$maxFixedArity = 2;
    G__21840.cljs$lang$applyTo = function(arglist__21841) {
      var xform = cljs.core.first(arglist__21841);
      arglist__21841 = cljs.core.next(arglist__21841);
      var coll = cljs.core.first(arglist__21841);
      var colls = cljs.core.rest(arglist__21841);
      return G__21840__delegate(xform, coll, colls);
    };
    G__21840.cljs$core$IFn$_invoke$arity$variadic = G__21840__delegate;
    return G__21840;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__21842 = pred;
        var G__21843 = cljs.core.next.call(null, coll);
        pred = G__21842;
        coll = G__21843;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3628__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        var G__21844 = pred;
        var G__21845 = cljs.core.next.call(null, coll);
        pred = G__21844;
        coll = G__21845;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__21846 = null;
    var G__21846__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__21846__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__21846__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__21846__3 = function() {
      var G__21847__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__21847 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__21847__delegate.call(this, x, y, zs);
      };
      G__21847.cljs$lang$maxFixedArity = 2;
      G__21847.cljs$lang$applyTo = function(arglist__21848) {
        var x = cljs.core.first(arglist__21848);
        arglist__21848 = cljs.core.next(arglist__21848);
        var y = cljs.core.first(arglist__21848);
        var zs = cljs.core.rest(arglist__21848);
        return G__21847__delegate(x, y, zs);
      };
      G__21847.cljs$core$IFn$_invoke$arity$variadic = G__21847__delegate;
      return G__21847;
    }();
    G__21846 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__21846__0.call(this);
        case 1:
          return G__21846__1.call(this, x);
        case 2:
          return G__21846__2.call(this, x, y);
        default:
          return G__21846__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21846.cljs$lang$maxFixedArity = 2;
    G__21846.cljs$lang$applyTo = G__21846__3.cljs$lang$applyTo;
    G__21846.cljs$core$IFn$_invoke$arity$0 = G__21846__0;
    G__21846.cljs$core$IFn$_invoke$arity$1 = G__21846__1;
    G__21846.cljs$core$IFn$_invoke$arity$2 = G__21846__2;
    G__21846.cljs$core$IFn$_invoke$arity$variadic = G__21846__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__21846;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__21849__delegate = function(args) {
      return x;
    };
    var G__21849 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21849__delegate.call(this, args);
    };
    G__21849.cljs$lang$maxFixedArity = 0;
    G__21849.cljs$lang$applyTo = function(arglist__21850) {
      var args = cljs.core.seq(arglist__21850);
      return G__21849__delegate(args);
    };
    G__21849.cljs$core$IFn$_invoke$arity$variadic = G__21849__delegate;
    return G__21849;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__21851 = null;
      var G__21851__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__21851__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__21851__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__21851__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__21851__4 = function() {
        var G__21852__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__21852 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21852__delegate.call(this, x, y, z, args);
        };
        G__21852.cljs$lang$maxFixedArity = 3;
        G__21852.cljs$lang$applyTo = function(arglist__21853) {
          var x = cljs.core.first(arglist__21853);
          arglist__21853 = cljs.core.next(arglist__21853);
          var y = cljs.core.first(arglist__21853);
          arglist__21853 = cljs.core.next(arglist__21853);
          var z = cljs.core.first(arglist__21853);
          var args = cljs.core.rest(arglist__21853);
          return G__21852__delegate(x, y, z, args);
        };
        G__21852.cljs$core$IFn$_invoke$arity$variadic = G__21852__delegate;
        return G__21852;
      }();
      G__21851 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21851__0.call(this);
          case 1:
            return G__21851__1.call(this, x);
          case 2:
            return G__21851__2.call(this, x, y);
          case 3:
            return G__21851__3.call(this, x, y, z);
          default:
            return G__21851__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21851.cljs$lang$maxFixedArity = 3;
      G__21851.cljs$lang$applyTo = G__21851__4.cljs$lang$applyTo;
      G__21851.cljs$core$IFn$_invoke$arity$0 = G__21851__0;
      G__21851.cljs$core$IFn$_invoke$arity$1 = G__21851__1;
      G__21851.cljs$core$IFn$_invoke$arity$2 = G__21851__2;
      G__21851.cljs$core$IFn$_invoke$arity$3 = G__21851__3;
      G__21851.cljs$core$IFn$_invoke$arity$variadic = G__21851__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21851;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__21854 = null;
      var G__21854__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__21854__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__21854__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__21854__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__21854__4 = function() {
        var G__21855__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__21855 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21855__delegate.call(this, x, y, z, args);
        };
        G__21855.cljs$lang$maxFixedArity = 3;
        G__21855.cljs$lang$applyTo = function(arglist__21856) {
          var x = cljs.core.first(arglist__21856);
          arglist__21856 = cljs.core.next(arglist__21856);
          var y = cljs.core.first(arglist__21856);
          arglist__21856 = cljs.core.next(arglist__21856);
          var z = cljs.core.first(arglist__21856);
          var args = cljs.core.rest(arglist__21856);
          return G__21855__delegate(x, y, z, args);
        };
        G__21855.cljs$core$IFn$_invoke$arity$variadic = G__21855__delegate;
        return G__21855;
      }();
      G__21854 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21854__0.call(this);
          case 1:
            return G__21854__1.call(this, x);
          case 2:
            return G__21854__2.call(this, x, y);
          case 3:
            return G__21854__3.call(this, x, y, z);
          default:
            return G__21854__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21854.cljs$lang$maxFixedArity = 3;
      G__21854.cljs$lang$applyTo = G__21854__4.cljs$lang$applyTo;
      G__21854.cljs$core$IFn$_invoke$arity$0 = G__21854__0;
      G__21854.cljs$core$IFn$_invoke$arity$1 = G__21854__1;
      G__21854.cljs$core$IFn$_invoke$arity$2 = G__21854__2;
      G__21854.cljs$core$IFn$_invoke$arity$3 = G__21854__3;
      G__21854.cljs$core$IFn$_invoke$arity$variadic = G__21854__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21854;
    }();
  };
  var comp__4 = function() {
    var G__21857__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__21858__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__21859 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__21860 = cljs.core.next.call(null, fs__$2);
                ret = G__21859;
                fs__$2 = G__21860;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__21858 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__21858__delegate.call(this, args);
          };
          G__21858.cljs$lang$maxFixedArity = 0;
          G__21858.cljs$lang$applyTo = function(arglist__21861) {
            var args = cljs.core.seq(arglist__21861);
            return G__21858__delegate(args);
          };
          G__21858.cljs$core$IFn$_invoke$arity$variadic = G__21858__delegate;
          return G__21858;
        }();
      }(fs__$1);
    };
    var G__21857 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21857__delegate.call(this, f1, f2, f3, fs);
    };
    G__21857.cljs$lang$maxFixedArity = 3;
    G__21857.cljs$lang$applyTo = function(arglist__21862) {
      var f1 = cljs.core.first(arglist__21862);
      arglist__21862 = cljs.core.next(arglist__21862);
      var f2 = cljs.core.first(arglist__21862);
      arglist__21862 = cljs.core.next(arglist__21862);
      var f3 = cljs.core.first(arglist__21862);
      var fs = cljs.core.rest(arglist__21862);
      return G__21857__delegate(f1, f2, f3, fs);
    };
    G__21857.cljs$core$IFn$_invoke$arity$variadic = G__21857__delegate;
    return G__21857;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__21863 = null;
      var G__21863__0 = function() {
        return f.call(null, arg1);
      };
      var G__21863__1 = function(x) {
        return f.call(null, arg1, x);
      };
      var G__21863__2 = function(x, y) {
        return f.call(null, arg1, x, y);
      };
      var G__21863__3 = function(x, y, z) {
        return f.call(null, arg1, x, y, z);
      };
      var G__21863__4 = function() {
        var G__21864__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, x, y, z, args);
        };
        var G__21864 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21864__delegate.call(this, x, y, z, args);
        };
        G__21864.cljs$lang$maxFixedArity = 3;
        G__21864.cljs$lang$applyTo = function(arglist__21865) {
          var x = cljs.core.first(arglist__21865);
          arglist__21865 = cljs.core.next(arglist__21865);
          var y = cljs.core.first(arglist__21865);
          arglist__21865 = cljs.core.next(arglist__21865);
          var z = cljs.core.first(arglist__21865);
          var args = cljs.core.rest(arglist__21865);
          return G__21864__delegate(x, y, z, args);
        };
        G__21864.cljs$core$IFn$_invoke$arity$variadic = G__21864__delegate;
        return G__21864;
      }();
      G__21863 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21863__0.call(this);
          case 1:
            return G__21863__1.call(this, x);
          case 2:
            return G__21863__2.call(this, x, y);
          case 3:
            return G__21863__3.call(this, x, y, z);
          default:
            return G__21863__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21863.cljs$lang$maxFixedArity = 3;
      G__21863.cljs$lang$applyTo = G__21863__4.cljs$lang$applyTo;
      G__21863.cljs$core$IFn$_invoke$arity$0 = G__21863__0;
      G__21863.cljs$core$IFn$_invoke$arity$1 = G__21863__1;
      G__21863.cljs$core$IFn$_invoke$arity$2 = G__21863__2;
      G__21863.cljs$core$IFn$_invoke$arity$3 = G__21863__3;
      G__21863.cljs$core$IFn$_invoke$arity$variadic = G__21863__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21863;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__21866 = null;
      var G__21866__0 = function() {
        return f.call(null, arg1, arg2);
      };
      var G__21866__1 = function(x) {
        return f.call(null, arg1, arg2, x);
      };
      var G__21866__2 = function(x, y) {
        return f.call(null, arg1, arg2, x, y);
      };
      var G__21866__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, x, y, z);
      };
      var G__21866__4 = function() {
        var G__21867__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, x, y, z, args);
        };
        var G__21867 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21867__delegate.call(this, x, y, z, args);
        };
        G__21867.cljs$lang$maxFixedArity = 3;
        G__21867.cljs$lang$applyTo = function(arglist__21868) {
          var x = cljs.core.first(arglist__21868);
          arglist__21868 = cljs.core.next(arglist__21868);
          var y = cljs.core.first(arglist__21868);
          arglist__21868 = cljs.core.next(arglist__21868);
          var z = cljs.core.first(arglist__21868);
          var args = cljs.core.rest(arglist__21868);
          return G__21867__delegate(x, y, z, args);
        };
        G__21867.cljs$core$IFn$_invoke$arity$variadic = G__21867__delegate;
        return G__21867;
      }();
      G__21866 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21866__0.call(this);
          case 1:
            return G__21866__1.call(this, x);
          case 2:
            return G__21866__2.call(this, x, y);
          case 3:
            return G__21866__3.call(this, x, y, z);
          default:
            return G__21866__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21866.cljs$lang$maxFixedArity = 3;
      G__21866.cljs$lang$applyTo = G__21866__4.cljs$lang$applyTo;
      G__21866.cljs$core$IFn$_invoke$arity$0 = G__21866__0;
      G__21866.cljs$core$IFn$_invoke$arity$1 = G__21866__1;
      G__21866.cljs$core$IFn$_invoke$arity$2 = G__21866__2;
      G__21866.cljs$core$IFn$_invoke$arity$3 = G__21866__3;
      G__21866.cljs$core$IFn$_invoke$arity$variadic = G__21866__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21866;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__21869 = null;
      var G__21869__0 = function() {
        return f.call(null, arg1, arg2, arg3);
      };
      var G__21869__1 = function(x) {
        return f.call(null, arg1, arg2, arg3, x);
      };
      var G__21869__2 = function(x, y) {
        return f.call(null, arg1, arg2, arg3, x, y);
      };
      var G__21869__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, arg3, x, y, z);
      };
      var G__21869__4 = function() {
        var G__21870__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, x, y, z, args);
        };
        var G__21870 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21870__delegate.call(this, x, y, z, args);
        };
        G__21870.cljs$lang$maxFixedArity = 3;
        G__21870.cljs$lang$applyTo = function(arglist__21871) {
          var x = cljs.core.first(arglist__21871);
          arglist__21871 = cljs.core.next(arglist__21871);
          var y = cljs.core.first(arglist__21871);
          arglist__21871 = cljs.core.next(arglist__21871);
          var z = cljs.core.first(arglist__21871);
          var args = cljs.core.rest(arglist__21871);
          return G__21870__delegate(x, y, z, args);
        };
        G__21870.cljs$core$IFn$_invoke$arity$variadic = G__21870__delegate;
        return G__21870;
      }();
      G__21869 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21869__0.call(this);
          case 1:
            return G__21869__1.call(this, x);
          case 2:
            return G__21869__2.call(this, x, y);
          case 3:
            return G__21869__3.call(this, x, y, z);
          default:
            return G__21869__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21869.cljs$lang$maxFixedArity = 3;
      G__21869.cljs$lang$applyTo = G__21869__4.cljs$lang$applyTo;
      G__21869.cljs$core$IFn$_invoke$arity$0 = G__21869__0;
      G__21869.cljs$core$IFn$_invoke$arity$1 = G__21869__1;
      G__21869.cljs$core$IFn$_invoke$arity$2 = G__21869__2;
      G__21869.cljs$core$IFn$_invoke$arity$3 = G__21869__3;
      G__21869.cljs$core$IFn$_invoke$arity$variadic = G__21869__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21869;
    }();
  };
  var partial__5 = function() {
    var G__21872__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__21873__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__21873 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__21873__delegate.call(this, args);
        };
        G__21873.cljs$lang$maxFixedArity = 0;
        G__21873.cljs$lang$applyTo = function(arglist__21874) {
          var args = cljs.core.seq(arglist__21874);
          return G__21873__delegate(args);
        };
        G__21873.cljs$core$IFn$_invoke$arity$variadic = G__21873__delegate;
        return G__21873;
      }();
    };
    var G__21872 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21872__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__21872.cljs$lang$maxFixedArity = 4;
    G__21872.cljs$lang$applyTo = function(arglist__21875) {
      var f = cljs.core.first(arglist__21875);
      arglist__21875 = cljs.core.next(arglist__21875);
      var arg1 = cljs.core.first(arglist__21875);
      arglist__21875 = cljs.core.next(arglist__21875);
      var arg2 = cljs.core.first(arglist__21875);
      arglist__21875 = cljs.core.next(arglist__21875);
      var arg3 = cljs.core.first(arglist__21875);
      var more = cljs.core.rest(arglist__21875);
      return G__21872__delegate(f, arg1, arg2, arg3, more);
    };
    G__21872.cljs$core$IFn$_invoke$arity$variadic = G__21872__delegate;
    return G__21872;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__21876 = null;
      var G__21876__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__21876__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__21876__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__21876__4 = function() {
        var G__21877__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__21877 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21877__delegate.call(this, a, b, c, ds);
        };
        G__21877.cljs$lang$maxFixedArity = 3;
        G__21877.cljs$lang$applyTo = function(arglist__21878) {
          var a = cljs.core.first(arglist__21878);
          arglist__21878 = cljs.core.next(arglist__21878);
          var b = cljs.core.first(arglist__21878);
          arglist__21878 = cljs.core.next(arglist__21878);
          var c = cljs.core.first(arglist__21878);
          var ds = cljs.core.rest(arglist__21878);
          return G__21877__delegate(a, b, c, ds);
        };
        G__21877.cljs$core$IFn$_invoke$arity$variadic = G__21877__delegate;
        return G__21877;
      }();
      G__21876 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__21876__1.call(this, a);
          case 2:
            return G__21876__2.call(this, a, b);
          case 3:
            return G__21876__3.call(this, a, b, c);
          default:
            return G__21876__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21876.cljs$lang$maxFixedArity = 3;
      G__21876.cljs$lang$applyTo = G__21876__4.cljs$lang$applyTo;
      G__21876.cljs$core$IFn$_invoke$arity$1 = G__21876__1;
      G__21876.cljs$core$IFn$_invoke$arity$2 = G__21876__2;
      G__21876.cljs$core$IFn$_invoke$arity$3 = G__21876__3;
      G__21876.cljs$core$IFn$_invoke$arity$variadic = G__21876__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21876;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__21879 = null;
      var G__21879__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__21879__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__21879__4 = function() {
        var G__21880__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__21880 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21880__delegate.call(this, a, b, c, ds);
        };
        G__21880.cljs$lang$maxFixedArity = 3;
        G__21880.cljs$lang$applyTo = function(arglist__21881) {
          var a = cljs.core.first(arglist__21881);
          arglist__21881 = cljs.core.next(arglist__21881);
          var b = cljs.core.first(arglist__21881);
          arglist__21881 = cljs.core.next(arglist__21881);
          var c = cljs.core.first(arglist__21881);
          var ds = cljs.core.rest(arglist__21881);
          return G__21880__delegate(a, b, c, ds);
        };
        G__21880.cljs$core$IFn$_invoke$arity$variadic = G__21880__delegate;
        return G__21880;
      }();
      G__21879 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__21879__2.call(this, a, b);
          case 3:
            return G__21879__3.call(this, a, b, c);
          default:
            return G__21879__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21879.cljs$lang$maxFixedArity = 3;
      G__21879.cljs$lang$applyTo = G__21879__4.cljs$lang$applyTo;
      G__21879.cljs$core$IFn$_invoke$arity$2 = G__21879__2;
      G__21879.cljs$core$IFn$_invoke$arity$3 = G__21879__3;
      G__21879.cljs$core$IFn$_invoke$arity$variadic = G__21879__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21879;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__21882 = null;
      var G__21882__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__21882__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__21882__4 = function() {
        var G__21883__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__21883 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21883__delegate.call(this, a, b, c, ds);
        };
        G__21883.cljs$lang$maxFixedArity = 3;
        G__21883.cljs$lang$applyTo = function(arglist__21884) {
          var a = cljs.core.first(arglist__21884);
          arglist__21884 = cljs.core.next(arglist__21884);
          var b = cljs.core.first(arglist__21884);
          arglist__21884 = cljs.core.next(arglist__21884);
          var c = cljs.core.first(arglist__21884);
          var ds = cljs.core.rest(arglist__21884);
          return G__21883__delegate(a, b, c, ds);
        };
        G__21883.cljs$core$IFn$_invoke$arity$variadic = G__21883__delegate;
        return G__21883;
      }();
      G__21882 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__21882__2.call(this, a, b);
          case 3:
            return G__21882__3.call(this, a, b, c);
          default:
            return G__21882__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21882.cljs$lang$maxFixedArity = 3;
      G__21882.cljs$lang$applyTo = G__21882__4.cljs$lang$applyTo;
      G__21882.cljs$core$IFn$_invoke$arity$2 = G__21882__2;
      G__21882.cljs$core$IFn$_invoke$arity$3 = G__21882__3;
      G__21882.cljs$core$IFn$_invoke$arity$variadic = G__21882__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21882;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4515__auto___21885 = size;
          var i_21886 = 0;
          while (true) {
            if (i_21886 < n__4515__auto___21885) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_21886, cljs.core._nth.call(null, c, i_21886)));
              var G__21887 = i_21886 + 1;
              i_21886 = G__21887;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__21888 = null;
        var G__21888__0 = function() {
          return rf.call(null);
        };
        var G__21888__1 = function(result) {
          return rf.call(null, result);
        };
        var G__21888__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__21888 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21888__0.call(this);
            case 1:
              return G__21888__1.call(this, result);
            case 2:
              return G__21888__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21888.cljs$core$IFn$_invoke$arity$0 = G__21888__0;
        G__21888.cljs$core$IFn$_invoke$arity$1 = G__21888__1;
        G__21888.cljs$core$IFn$_invoke$arity$2 = G__21888__2;
        return G__21888;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4515__auto___21889 = size;
          var i_21890 = 0;
          while (true) {
            if (i_21890 < n__4515__auto___21889) {
              var x_21891 = f.call(null, cljs.core._nth.call(null, c, i_21890));
              if (x_21891 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_21891);
              }
              var G__21892 = i_21890 + 1;
              i_21890 = G__21892;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__21893 = cljs.core.seq.call(null, self__.watches);
  var chunk__21894 = null;
  var count__21895 = 0;
  var i__21896 = 0;
  while (true) {
    if (i__21896 < count__21895) {
      var vec__21897 = cljs.core._nth.call(null, chunk__21894, i__21896);
      var key = cljs.core.nth.call(null, vec__21897, 0, null);
      var f = cljs.core.nth.call(null, vec__21897, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__21899 = seq__21893;
      var G__21900 = chunk__21894;
      var G__21901 = count__21895;
      var G__21902 = i__21896 + 1;
      seq__21893 = G__21899;
      chunk__21894 = G__21900;
      count__21895 = G__21901;
      i__21896 = G__21902;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__21893);
      if (temp__4126__auto__) {
        var seq__21893__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21893__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__21893__$1);
          var G__21903 = cljs.core.chunk_rest.call(null, seq__21893__$1);
          var G__21904 = c__4415__auto__;
          var G__21905 = cljs.core.count.call(null, c__4415__auto__);
          var G__21906 = 0;
          seq__21893 = G__21903;
          chunk__21894 = G__21904;
          count__21895 = G__21905;
          i__21896 = G__21906;
          continue;
        } else {
          var vec__21898 = cljs.core.first.call(null, seq__21893__$1);
          var key = cljs.core.nth.call(null, vec__21898, 0, null);
          var f = cljs.core.nth.call(null, vec__21898, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__21907 = cljs.core.next.call(null, seq__21893__$1);
          var G__21908 = null;
          var G__21909 = 0;
          var G__21910 = 0;
          seq__21893 = G__21907;
          chunk__21894 = G__21908;
          count__21895 = G__21909;
          i__21896 = G__21910;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__21914__delegate = function(x, p__21911) {
      var map__21913 = p__21911;
      var map__21913__$1 = cljs.core.seq_QMARK_.call(null, map__21913) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21913) : map__21913;
      var validator = cljs.core.get.call(null, map__21913__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__21913__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__21914 = function(x, var_args) {
      var p__21911 = null;
      if (arguments.length > 1) {
        p__21911 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21914__delegate.call(this, x, p__21911);
    };
    G__21914.cljs$lang$maxFixedArity = 1;
    G__21914.cljs$lang$applyTo = function(arglist__21915) {
      var x = cljs.core.first(arglist__21915);
      var p__21911 = cljs.core.rest(arglist__21915);
      return G__21914__delegate(x, p__21911);
    };
    G__21914.cljs$core$IFn$_invoke$arity$variadic = G__21914__delegate;
    return G__21914;
  }();
  atom = function(x, var_args) {
    var p__21911 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__21916__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__21916 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21916__delegate.call(this, a, f, x, y, more);
    };
    G__21916.cljs$lang$maxFixedArity = 4;
    G__21916.cljs$lang$applyTo = function(arglist__21917) {
      var a = cljs.core.first(arglist__21917);
      arglist__21917 = cljs.core.next(arglist__21917);
      var f = cljs.core.first(arglist__21917);
      arglist__21917 = cljs.core.next(arglist__21917);
      var x = cljs.core.first(arglist__21917);
      arglist__21917 = cljs.core.next(arglist__21917);
      var y = cljs.core.first(arglist__21917);
      var more = cljs.core.rest(arglist__21917);
      return G__21916__delegate(a, f, x, y, more);
    };
    G__21916.cljs$core$IFn$_invoke$arity$variadic = G__21916__delegate;
    return G__21916;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_.call(null, vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__21918 = null;
          var G__21918__0 = function() {
            return rf.call(null);
          };
          var G__21918__1 = function(result) {
            return rf.call(null, result);
          };
          var G__21918__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__21918 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21918__0.call(this);
              case 1:
                return G__21918__1.call(this, result);
              case 2:
                return G__21918__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21918.cljs$core$IFn$_invoke$arity$0 = G__21918__0;
          G__21918.cljs$core$IFn$_invoke$arity$1 = G__21918__1;
          G__21918.cljs$core$IFn$_invoke$arity$2 = G__21918__2;
          return G__21918;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4515__auto___21919 = size;
            var i_21920 = 0;
            while (true) {
              if (i_21920 < n__4515__auto___21919) {
                var x_21921 = f.call(null, idx + i_21920, cljs.core._nth.call(null, c, i_21920));
                if (x_21921 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_21921);
                }
                var G__21922 = i_21920 + 1;
                i_21920 = G__21922;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            return p.call(null, y);
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__21929__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__21929 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21929__delegate.call(this, x, y, z, args);
        };
        G__21929.cljs$lang$maxFixedArity = 3;
        G__21929.cljs$lang$applyTo = function(arglist__21930) {
          var x = cljs.core.first(arglist__21930);
          arglist__21930 = cljs.core.next(arglist__21930);
          var y = cljs.core.first(arglist__21930);
          arglist__21930 = cljs.core.next(arglist__21930);
          var z = cljs.core.first(arglist__21930);
          var args = cljs.core.rest(arglist__21930);
          return G__21929__delegate(x, y, z, args);
        };
        G__21929.cljs$core$IFn$_invoke$arity$variadic = G__21929__delegate;
        return G__21929;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              var and__3616__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3616__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3616__auto____$2;
              }
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              var and__3616__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3616__auto____$2)) {
                var and__3616__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3616__auto____$3)) {
                  var and__3616__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3616__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3616__auto____$4;
                  }
                } else {
                  return and__3616__auto____$3;
                }
              } else {
                return and__3616__auto____$2;
              }
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__21931__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__21923_SHARP_) {
            var and__3616__auto__ = p1.call(null, p1__21923_SHARP_);
            if (cljs.core.truth_(and__3616__auto__)) {
              return p2.call(null, p1__21923_SHARP_);
            } else {
              return and__3616__auto__;
            }
          }, args));
        };
        var G__21931 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21931__delegate.call(this, x, y, z, args);
        };
        G__21931.cljs$lang$maxFixedArity = 3;
        G__21931.cljs$lang$applyTo = function(arglist__21932) {
          var x = cljs.core.first(arglist__21932);
          arglist__21932 = cljs.core.next(arglist__21932);
          var y = cljs.core.first(arglist__21932);
          arglist__21932 = cljs.core.next(arglist__21932);
          var z = cljs.core.first(arglist__21932);
          var args = cljs.core.rest(arglist__21932);
          return G__21931__delegate(x, y, z, args);
        };
        G__21931.cljs$core$IFn$_invoke$arity$variadic = G__21931__delegate;
        return G__21931;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              var and__3616__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3616__auto____$2)) {
                var and__3616__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3616__auto____$3)) {
                  var and__3616__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3616__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3616__auto____$4;
                  }
                } else {
                  return and__3616__auto____$3;
                }
              } else {
                return and__3616__auto____$2;
              }
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3616__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3616__auto__)) {
            var and__3616__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3616__auto____$1)) {
              var and__3616__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3616__auto____$2)) {
                var and__3616__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3616__auto____$3)) {
                  var and__3616__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3616__auto____$4)) {
                    var and__3616__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3616__auto____$5)) {
                      var and__3616__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3616__auto____$6)) {
                        var and__3616__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3616__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3616__auto____$7;
                        }
                      } else {
                        return and__3616__auto____$6;
                      }
                    } else {
                      return and__3616__auto____$5;
                    }
                  } else {
                    return and__3616__auto____$4;
                  }
                } else {
                  return and__3616__auto____$3;
                }
              } else {
                return and__3616__auto____$2;
              }
            } else {
              return and__3616__auto____$1;
            }
          } else {
            return and__3616__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__21933__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__21924_SHARP_) {
            var and__3616__auto__ = p1.call(null, p1__21924_SHARP_);
            if (cljs.core.truth_(and__3616__auto__)) {
              var and__3616__auto____$1 = p2.call(null, p1__21924_SHARP_);
              if (cljs.core.truth_(and__3616__auto____$1)) {
                return p3.call(null, p1__21924_SHARP_);
              } else {
                return and__3616__auto____$1;
              }
            } else {
              return and__3616__auto__;
            }
          }, args));
        };
        var G__21933 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21933__delegate.call(this, x, y, z, args);
        };
        G__21933.cljs$lang$maxFixedArity = 3;
        G__21933.cljs$lang$applyTo = function(arglist__21934) {
          var x = cljs.core.first(arglist__21934);
          arglist__21934 = cljs.core.next(arglist__21934);
          var y = cljs.core.first(arglist__21934);
          arglist__21934 = cljs.core.next(arglist__21934);
          var z = cljs.core.first(arglist__21934);
          var args = cljs.core.rest(arglist__21934);
          return G__21933__delegate(x, y, z, args);
        };
        G__21933.cljs$core$IFn$_invoke$arity$variadic = G__21933__delegate;
        return G__21933;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__21935__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__21925_SHARP_) {
                return p1__21925_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__21926_SHARP_) {
                var and__3616__auto__ = p1__21926_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3616__auto__)) {
                  return p1__21926_SHARP_.call(null, y);
                } else {
                  return and__3616__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__21927_SHARP_) {
                var and__3616__auto__ = p1__21927_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3616__auto__)) {
                  var and__3616__auto____$1 = p1__21927_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3616__auto____$1)) {
                    return p1__21927_SHARP_.call(null, z);
                  } else {
                    return and__3616__auto____$1;
                  }
                } else {
                  return and__3616__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__21936__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__21928_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__21928_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__21936 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__21936__delegate.call(this, x, y, z, args);
            };
            G__21936.cljs$lang$maxFixedArity = 3;
            G__21936.cljs$lang$applyTo = function(arglist__21937) {
              var x = cljs.core.first(arglist__21937);
              arglist__21937 = cljs.core.next(arglist__21937);
              var y = cljs.core.first(arglist__21937);
              arglist__21937 = cljs.core.next(arglist__21937);
              var z = cljs.core.first(arglist__21937);
              var args = cljs.core.rest(arglist__21937);
              return G__21936__delegate(x, y, z, args);
            };
            G__21936.cljs$core$IFn$_invoke$arity$variadic = G__21936__delegate;
            return G__21936;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__21935 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21935__delegate.call(this, p1, p2, p3, ps);
    };
    G__21935.cljs$lang$maxFixedArity = 3;
    G__21935.cljs$lang$applyTo = function(arglist__21938) {
      var p1 = cljs.core.first(arglist__21938);
      arglist__21938 = cljs.core.next(arglist__21938);
      var p2 = cljs.core.first(arglist__21938);
      arglist__21938 = cljs.core.next(arglist__21938);
      var p3 = cljs.core.first(arglist__21938);
      var ps = cljs.core.rest(arglist__21938);
      return G__21935__delegate(p1, p2, p3, ps);
    };
    G__21935.cljs$core$IFn$_invoke$arity$variadic = G__21935__delegate;
    return G__21935;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3628__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3628__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__21945__delegate = function(x, y, z, args) {
          var or__3628__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__21945 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21945__delegate.call(this, x, y, z, args);
        };
        G__21945.cljs$lang$maxFixedArity = 3;
        G__21945.cljs$lang$applyTo = function(arglist__21946) {
          var x = cljs.core.first(arglist__21946);
          arglist__21946 = cljs.core.next(arglist__21946);
          var y = cljs.core.first(arglist__21946);
          arglist__21946 = cljs.core.next(arglist__21946);
          var z = cljs.core.first(arglist__21946);
          var args = cljs.core.rest(arglist__21946);
          return G__21945__delegate(x, y, z, args);
        };
        G__21945.cljs$core$IFn$_invoke$arity$variadic = G__21945__delegate;
        return G__21945;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            var or__3628__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3628__auto____$2)) {
              return or__3628__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            var or__3628__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3628__auto____$2)) {
              return or__3628__auto____$2;
            } else {
              var or__3628__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3628__auto____$3)) {
                return or__3628__auto____$3;
              } else {
                var or__3628__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3628__auto____$4)) {
                  return or__3628__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__21947__delegate = function(x, y, z, args) {
          var or__3628__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3628__auto__) {
              return function(p1__21939_SHARP_) {
                var or__3628__auto____$1 = p1.call(null, p1__21939_SHARP_);
                if (cljs.core.truth_(or__3628__auto____$1)) {
                  return or__3628__auto____$1;
                } else {
                  return p2.call(null, p1__21939_SHARP_);
                }
              };
            }(or__3628__auto__), args);
          }
        };
        var G__21947 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21947__delegate.call(this, x, y, z, args);
        };
        G__21947.cljs$lang$maxFixedArity = 3;
        G__21947.cljs$lang$applyTo = function(arglist__21948) {
          var x = cljs.core.first(arglist__21948);
          arglist__21948 = cljs.core.next(arglist__21948);
          var y = cljs.core.first(arglist__21948);
          arglist__21948 = cljs.core.next(arglist__21948);
          var z = cljs.core.first(arglist__21948);
          var args = cljs.core.rest(arglist__21948);
          return G__21947__delegate(x, y, z, args);
        };
        G__21947.cljs$core$IFn$_invoke$arity$variadic = G__21947__delegate;
        return G__21947;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            var or__3628__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3628__auto____$2)) {
              return or__3628__auto____$2;
            } else {
              var or__3628__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3628__auto____$3)) {
                return or__3628__auto____$3;
              } else {
                var or__3628__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3628__auto____$4)) {
                  return or__3628__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3628__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            var or__3628__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3628__auto____$2)) {
              return or__3628__auto____$2;
            } else {
              var or__3628__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3628__auto____$3)) {
                return or__3628__auto____$3;
              } else {
                var or__3628__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3628__auto____$4)) {
                  return or__3628__auto____$4;
                } else {
                  var or__3628__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3628__auto____$5)) {
                    return or__3628__auto____$5;
                  } else {
                    var or__3628__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3628__auto____$6)) {
                      return or__3628__auto____$6;
                    } else {
                      var or__3628__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3628__auto____$7)) {
                        return or__3628__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__21949__delegate = function(x, y, z, args) {
          var or__3628__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3628__auto__) {
              return function(p1__21940_SHARP_) {
                var or__3628__auto____$1 = p1.call(null, p1__21940_SHARP_);
                if (cljs.core.truth_(or__3628__auto____$1)) {
                  return or__3628__auto____$1;
                } else {
                  var or__3628__auto____$2 = p2.call(null, p1__21940_SHARP_);
                  if (cljs.core.truth_(or__3628__auto____$2)) {
                    return or__3628__auto____$2;
                  } else {
                    return p3.call(null, p1__21940_SHARP_);
                  }
                }
              };
            }(or__3628__auto__), args);
          }
        };
        var G__21949 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21949__delegate.call(this, x, y, z, args);
        };
        G__21949.cljs$lang$maxFixedArity = 3;
        G__21949.cljs$lang$applyTo = function(arglist__21950) {
          var x = cljs.core.first(arglist__21950);
          arglist__21950 = cljs.core.next(arglist__21950);
          var y = cljs.core.first(arglist__21950);
          arglist__21950 = cljs.core.next(arglist__21950);
          var z = cljs.core.first(arglist__21950);
          var args = cljs.core.rest(arglist__21950);
          return G__21949__delegate(x, y, z, args);
        };
        G__21949.cljs$core$IFn$_invoke$arity$variadic = G__21949__delegate;
        return G__21949;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__21951__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__21941_SHARP_) {
                return p1__21941_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__21942_SHARP_) {
                var or__3628__auto__ = p1__21942_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3628__auto__)) {
                  return or__3628__auto__;
                } else {
                  return p1__21942_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__21943_SHARP_) {
                var or__3628__auto__ = p1__21943_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3628__auto__)) {
                  return or__3628__auto__;
                } else {
                  var or__3628__auto____$1 = p1__21943_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3628__auto____$1)) {
                    return or__3628__auto____$1;
                  } else {
                    return p1__21943_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__21952__delegate = function(x, y, z, args) {
              var or__3628__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3628__auto__)) {
                return or__3628__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3628__auto__, ps__$1) {
                  return function(p1__21944_SHARP_) {
                    return cljs.core.some.call(null, p1__21944_SHARP_, args);
                  };
                }(or__3628__auto__, ps__$1), ps__$1);
              }
            };
            var G__21952 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__21952__delegate.call(this, x, y, z, args);
            };
            G__21952.cljs$lang$maxFixedArity = 3;
            G__21952.cljs$lang$applyTo = function(arglist__21953) {
              var x = cljs.core.first(arglist__21953);
              arglist__21953 = cljs.core.next(arglist__21953);
              var y = cljs.core.first(arglist__21953);
              arglist__21953 = cljs.core.next(arglist__21953);
              var z = cljs.core.first(arglist__21953);
              var args = cljs.core.rest(arglist__21953);
              return G__21952__delegate(x, y, z, args);
            };
            G__21952.cljs$core$IFn$_invoke$arity$variadic = G__21952__delegate;
            return G__21952;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__21951 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21951__delegate.call(this, p1, p2, p3, ps);
    };
    G__21951.cljs$lang$maxFixedArity = 3;
    G__21951.cljs$lang$applyTo = function(arglist__21954) {
      var p1 = cljs.core.first(arglist__21954);
      arglist__21954 = cljs.core.next(arglist__21954);
      var p2 = cljs.core.first(arglist__21954);
      arglist__21954 = cljs.core.next(arglist__21954);
      var p3 = cljs.core.first(arglist__21954);
      var ps = cljs.core.rest(arglist__21954);
      return G__21951__delegate(p1, p2, p3, ps);
    };
    G__21951.cljs$core$IFn$_invoke$arity$variadic = G__21951__delegate;
    return G__21951;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__21956 = null;
        var G__21956__0 = function() {
          return rf.call(null);
        };
        var G__21956__1 = function(result) {
          return rf.call(null, result);
        };
        var G__21956__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__21956__3 = function() {
          var G__21957__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__21957 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__21957__delegate.call(this, result, input, inputs);
          };
          G__21957.cljs$lang$maxFixedArity = 2;
          G__21957.cljs$lang$applyTo = function(arglist__21958) {
            var result = cljs.core.first(arglist__21958);
            arglist__21958 = cljs.core.next(arglist__21958);
            var input = cljs.core.first(arglist__21958);
            var inputs = cljs.core.rest(arglist__21958);
            return G__21957__delegate(result, input, inputs);
          };
          G__21957.cljs$core$IFn$_invoke$arity$variadic = G__21957__delegate;
          return G__21957;
        }();
        G__21956 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__21956__0.call(this);
            case 1:
              return G__21956__1.call(this, result);
            case 2:
              return G__21956__2.call(this, result, input);
            default:
              return G__21956__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21956.cljs$lang$maxFixedArity = 2;
        G__21956.cljs$lang$applyTo = G__21956__3.cljs$lang$applyTo;
        G__21956.cljs$core$IFn$_invoke$arity$0 = G__21956__0;
        G__21956.cljs$core$IFn$_invoke$arity$1 = G__21956__1;
        G__21956.cljs$core$IFn$_invoke$arity$2 = G__21956__2;
        G__21956.cljs$core$IFn$_invoke$arity$variadic = G__21956__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__21956;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4515__auto___21959 = size;
          var i_21960 = 0;
          while (true) {
            if (i_21960 < n__4515__auto___21959) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_21960)));
              var G__21961 = i_21960 + 1;
              i_21960 = G__21961;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__21962__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__21955_SHARP_) {
          return cljs.core.apply.call(null, f, p1__21955_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__21962 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21962__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21962.cljs$lang$maxFixedArity = 4;
    G__21962.cljs$lang$applyTo = function(arglist__21963) {
      var f = cljs.core.first(arglist__21963);
      arglist__21963 = cljs.core.next(arglist__21963);
      var c1 = cljs.core.first(arglist__21963);
      arglist__21963 = cljs.core.next(arglist__21963);
      var c2 = cljs.core.first(arglist__21963);
      arglist__21963 = cljs.core.next(arglist__21963);
      var c3 = cljs.core.first(arglist__21963);
      var colls = cljs.core.rest(arglist__21963);
      return G__21962__delegate(f, c1, c2, c3, colls);
    };
    G__21962.cljs$core$IFn$_invoke$arity$variadic = G__21962__delegate;
    return G__21962;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__21964 = null;
          var G__21964__0 = function() {
            return rf.call(null);
          };
          var G__21964__1 = function(result) {
            return rf.call(null, result);
          };
          var G__21964__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__21964 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21964__0.call(this);
              case 1:
                return G__21964__1.call(this, result);
              case 2:
                return G__21964__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21964.cljs$core$IFn$_invoke$arity$0 = G__21964__0;
          G__21964.cljs$core$IFn$_invoke$arity$1 = G__21964__1;
          G__21964.cljs$core$IFn$_invoke$arity$2 = G__21964__2;
          return G__21964;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__21965 = null;
          var G__21965__0 = function() {
            return rf.call(null);
          };
          var G__21965__1 = function(result) {
            return rf.call(null, result);
          };
          var G__21965__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__21965 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21965__0.call(this);
              case 1:
                return G__21965__1.call(this, result);
              case 2:
                return G__21965__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21965.cljs$core$IFn$_invoke$arity$0 = G__21965__0;
          G__21965.cljs$core$IFn$_invoke$arity$1 = G__21965__1;
          G__21965.cljs$core$IFn$_invoke$arity$2 = G__21965__2;
          return G__21965;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__21966 = n__$1 - 1;
          var G__21967 = cljs.core.rest.call(null, s);
          n__$1 = G__21966;
          coll__$1 = G__21967;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__21968 = cljs.core.next.call(null, s);
      var G__21969 = cljs.core.next.call(null, lead);
      s = G__21968;
      lead = G__21969;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_.call(null, true);
      return function(da) {
        return function() {
          var G__21970 = null;
          var G__21970__0 = function() {
            return rf.call(null);
          };
          var G__21970__1 = function(result) {
            return rf.call(null, result);
          };
          var G__21970__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3616__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3616__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3616__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__21970 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21970__0.call(this);
              case 1:
                return G__21970__1.call(this, result);
              case 2:
                return G__21970__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21970.cljs$core$IFn$_invoke$arity$0 = G__21970__0;
          G__21970.cljs$core$IFn$_invoke$arity$1 = G__21970__1;
          G__21970.cljs$core$IFn$_invoke$arity$2 = G__21970__2;
          return G__21970;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3616__auto__ = s;
          if (and__3616__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3616__auto__;
          }
        }())) {
          var G__21971 = pred__$1;
          var G__21972 = cljs.core.rest.call(null, s);
          pred__$1 = G__21971;
          coll__$1 = G__21972;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__21973__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__21973 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21973__delegate.call(this, c1, c2, colls);
    };
    G__21973.cljs$lang$maxFixedArity = 2;
    G__21973.cljs$lang$applyTo = function(arglist__21974) {
      var c1 = cljs.core.first(arglist__21974);
      arglist__21974 = cljs.core.next(arglist__21974);
      var c2 = cljs.core.first(arglist__21974);
      var colls = cljs.core.rest(arglist__21974);
      return G__21973__delegate(c1, c2, colls);
    };
    G__21973.cljs$core$IFn$_invoke$arity$variadic = G__21973__delegate;
    return G__21973;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__21975__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__21975 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21975__delegate.call(this, f, colls);
    };
    G__21975.cljs$lang$maxFixedArity = 1;
    G__21975.cljs$lang$applyTo = function(arglist__21976) {
      var f = cljs.core.first(arglist__21976);
      var colls = cljs.core.rest(arglist__21976);
      return G__21975__delegate(f, colls);
    };
    G__21975.cljs$core$IFn$_invoke$arity$variadic = G__21975__delegate;
    return G__21975;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__21977 = null;
        var G__21977__0 = function() {
          return rf.call(null);
        };
        var G__21977__1 = function(result) {
          return rf.call(null, result);
        };
        var G__21977__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__21977 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21977__0.call(this);
            case 1:
              return G__21977__1.call(this, result);
            case 2:
              return G__21977__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21977.cljs$core$IFn$_invoke$arity$0 = G__21977__0;
        G__21977.cljs$core$IFn$_invoke$arity$1 = G__21977__1;
        G__21977.cljs$core$IFn$_invoke$arity$2 = G__21977__2;
        return G__21977;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4515__auto___21978 = size;
          var i_21979 = 0;
          while (true) {
            if (i_21979 < n__4515__auto___21978) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_21979)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_21979));
              } else {
              }
              var G__21980 = i_21979 + 1;
              i_21979 = G__21980;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__21981_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__21981_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__21984 = to;
        if (G__21984) {
          var bit__4302__auto__ = G__21984.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4302__auto__ || G__21984.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__21985 = to;
      if (G__21985) {
        var bit__4302__auto__ = G__21985.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4302__auto__ || G__21985.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__21986__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__21986 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21986__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21986.cljs$lang$maxFixedArity = 4;
    G__21986.cljs$lang$applyTo = function(arglist__21987) {
      var f = cljs.core.first(arglist__21987);
      arglist__21987 = cljs.core.next(arglist__21987);
      var c1 = cljs.core.first(arglist__21987);
      arglist__21987 = cljs.core.next(arglist__21987);
      var c2 = cljs.core.first(arglist__21987);
      arglist__21987 = cljs.core.next(arglist__21987);
      var c3 = cljs.core.first(arglist__21987);
      var colls = cljs.core.rest(arglist__21987);
      return G__21986__delegate(f, c1, c2, c3, colls);
    };
    G__21986.cljs$core$IFn$_invoke$arity$variadic = G__21986__delegate;
    return G__21986;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__21989 = m__$1;
          if (G__21989) {
            var bit__4309__auto__ = G__21989.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4309__auto__ || G__21989.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__21989.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__21989);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__21989);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__21990 = sentinel;
            var G__21991 = m__$2;
            var G__21992 = cljs.core.next.call(null, ks__$1);
            sentinel = G__21990;
            m__$1 = G__21991;
            ks__$1 = G__21992;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__21993, v) {
  var vec__21995 = p__21993;
  var k = cljs.core.nth.call(null, vec__21995, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__21995, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__21996, f) {
    var vec__22006 = p__21996;
    var k = cljs.core.nth.call(null, vec__22006, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__22006, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__21997, f, a) {
    var vec__22007 = p__21997;
    var k = cljs.core.nth.call(null, vec__22007, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__22007, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__21998, f, a, b) {
    var vec__22008 = p__21998;
    var k = cljs.core.nth.call(null, vec__22008, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__22008, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__21999, f, a, b, c) {
    var vec__22009 = p__21999;
    var k = cljs.core.nth.call(null, vec__22009, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__22009, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__22011__delegate = function(m, p__22000, f, a, b, c, args) {
      var vec__22010 = p__22000;
      var k = cljs.core.nth.call(null, vec__22010, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__22010, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__22011 = function(m, p__22000, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__22011__delegate.call(this, m, p__22000, f, a, b, c, args);
    };
    G__22011.cljs$lang$maxFixedArity = 6;
    G__22011.cljs$lang$applyTo = function(arglist__22012) {
      var m = cljs.core.first(arglist__22012);
      arglist__22012 = cljs.core.next(arglist__22012);
      var p__22000 = cljs.core.first(arglist__22012);
      arglist__22012 = cljs.core.next(arglist__22012);
      var f = cljs.core.first(arglist__22012);
      arglist__22012 = cljs.core.next(arglist__22012);
      var a = cljs.core.first(arglist__22012);
      arglist__22012 = cljs.core.next(arglist__22012);
      var b = cljs.core.first(arglist__22012);
      arglist__22012 = cljs.core.next(arglist__22012);
      var c = cljs.core.first(arglist__22012);
      var args = cljs.core.rest(arglist__22012);
      return G__22011__delegate(m, p__22000, f, a, b, c, args);
    };
    G__22011.cljs$core$IFn$_invoke$arity$variadic = G__22011__delegate;
    return G__22011;
  }();
  update_in = function(m, p__22000, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__22000, f);
      case 4:
        return update_in__4.call(this, m, p__22000, f, a);
      case 5:
        return update_in__5.call(this, m, p__22000, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__22000, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__22000, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x));
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y));
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y, z));
  };
  var update__7 = function() {
    var G__22013__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x, y, z, more));
    };
    var G__22013 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__22013__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__22013.cljs$lang$maxFixedArity = 6;
    G__22013.cljs$lang$applyTo = function(arglist__22014) {
      var m = cljs.core.first(arglist__22014);
      arglist__22014 = cljs.core.next(arglist__22014);
      var k = cljs.core.first(arglist__22014);
      arglist__22014 = cljs.core.next(arglist__22014);
      var f = cljs.core.first(arglist__22014);
      arglist__22014 = cljs.core.next(arglist__22014);
      var x = cljs.core.first(arglist__22014);
      arglist__22014 = cljs.core.next(arglist__22014);
      var y = cljs.core.first(arglist__22014);
      arglist__22014 = cljs.core.next(arglist__22014);
      var z = cljs.core.first(arglist__22014);
      var more = cljs.core.rest(arglist__22014);
      return G__22013__delegate(m, k, f, x, y, z, more);
    };
    G__22013.cljs$core$IFn$_invoke$arity$variadic = G__22013__delegate;
    return G__22013;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__22015 = ll - 5;
      var G__22016 = r;
      ll = G__22015;
      ret = G__22016;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__22017 = cljs.core.pv_aget.call(null, node, 0);
      var G__22018 = level - 5;
      node = G__22017;
      level = G__22018;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__22019 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__22020 = level - 5;
        node = G__22019;
        level = G__22020;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__22022 = j + 1;
              var G__22023 = init__$3;
              j = G__22022;
              init__$2 = G__22023;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__22024 = i + len;
        var G__22025 = init__$2;
        i = G__22024;
        init__$1 = G__22025;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__22026 = j + 1;
              var G__22027 = init__$3;
              j = G__22026;
              init__$2 = G__22027;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__22028 = i + len;
        var G__22029 = init__$2;
        i = G__22028;
        init__$1 = G__22029;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4515__auto___22030 = len;
    var i_22031 = 0;
    while (true) {
      if (i_22031 < n__4515__auto___22030) {
        new_tail[i_22031] = self__.tail[i_22031];
        var G__22032 = i_22031 + 1;
        i_22031 = G__22032;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__22033 = null;
  var G__22033__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__22033__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__22033 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22033__2.call(this, self__, k);
      case 3:
        return G__22033__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22033.cljs$core$IFn$_invoke$arity$2 = G__22033__2;
  G__22033.cljs$core$IFn$_invoke$arity$3 = G__22033__3;
  return G__22033;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args22021) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22021)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__22034 = i + 1;
        var G__22035 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__22034;
        out = G__22035;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__22036) {
    var args = cljs.core.seq(arglist__22036);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3945__auto__ = self__.end;
    var y__3946__auto__ = v_pos + 1;
    return x__3945__auto__ > y__3946__auto__ ? x__3945__auto__ : y__3946__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__22038 = null;
  var G__22038__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__22038__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__22038 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22038__2.call(this, self__, k);
      case 3:
        return G__22038__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22038.cljs$core$IFn$_invoke$arity$2 = G__22038__2;
  G__22038.cljs$core$IFn$_invoke$arity$3 = G__22038__3;
  return G__22038;
}();
cljs.core.Subvec.prototype.apply = function(self__, args22037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22037)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__22039 = meta;
      var G__22040 = v.v;
      var G__22041 = v.start + start;
      var G__22042 = v.start + end;
      var G__22043 = __hash;
      meta = G__22039;
      v = G__22040;
      start = G__22041;
      end = G__22042;
      __hash = G__22043;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj22047 = {};
    return obj22047;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__22048 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__22049 = level - 5;
        node = G__22048;
        level = G__22049;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__22051 = null;
  var G__22051__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22051__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22051 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22051__2.call(this, self__, k);
      case 3:
        return G__22051__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22051.cljs$core$IFn$_invoke$arity$2 = G__22051__2;
  G__22051.cljs$core$IFn$_invoke$arity$3 = G__22051__3;
  return G__22051;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args22050) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22050)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = self__.front;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3628__auto__ = self__.rear;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__22052 = i + incr;
        i = G__22052;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__22053 = i + 1;
      var G__22054 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__22053;
      out = G__22054;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj22058 = {};
    return obj22058;
  }();
  var l = ks.length;
  var i_22059 = 0;
  while (true) {
    if (i_22059 < l) {
      var k_22060 = ks[i_22059];
      new_obj[k_22060] = obj[k_22060];
      var G__22061 = i_22059 + 1;
      i_22059 = G__22061;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__22064 = cljs.core.rest.call(null, keys__$1);
        var G__22065 = init__$2;
        keys__$1 = G__22064;
        init__$1 = G__22065;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__22062_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22062_SHARP_, self__.strobj[p1__22062_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__22066 = null;
  var G__22066__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22066__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22066 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22066__2.call(this, self__, k);
      case 3:
        return G__22066__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22066.cljs$core$IFn$_invoke$arity$2 = G__22066__2;
  G__22066.cljs$core$IFn$_invoke$arity$3 = G__22066__3;
  return G__22066;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args22063) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22063)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj22068 = {};
  return obj22068;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__22069 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__22069, 0, null);
    var v = cljs.core.nth.call(null, vec__22069, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__22070 = i + 2;
        i = G__22070;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__22071 = i + 2;
        i = G__22071;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__22072 = i + 2;
        i = G__22072;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__22073 = i + 2;
        i = G__22073;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__22074 = i + 2;
        i = G__22074;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_22075 = 0;
  while (true) {
    if (i_22075 < l) {
      narr[i_22075] = arr[i_22075];
      var G__22076 = i_22075 + 1;
      i_22075 = G__22076;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22078 = cljs.core.seq.call(null, coll);
  var chunk__22079 = null;
  var count__22080 = 0;
  var i__22081 = 0;
  while (true) {
    if (i__22081 < count__22080) {
      var vec__22082 = cljs.core._nth.call(null, chunk__22079, i__22081);
      var k = cljs.core.nth.call(null, vec__22082, 0, null);
      var v = cljs.core.nth.call(null, vec__22082, 1, null);
      f.call(null, v, k);
      var G__22088 = seq__22078;
      var G__22089 = chunk__22079;
      var G__22090 = count__22080;
      var G__22091 = i__22081 + 1;
      seq__22078 = G__22088;
      chunk__22079 = G__22089;
      count__22080 = G__22090;
      i__22081 = G__22091;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22078);
      if (temp__4126__auto__) {
        var seq__22078__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22078__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22078__$1);
          var G__22092 = cljs.core.chunk_rest.call(null, seq__22078__$1);
          var G__22093 = c__4415__auto__;
          var G__22094 = cljs.core.count.call(null, c__4415__auto__);
          var G__22095 = 0;
          seq__22078 = G__22092;
          chunk__22079 = G__22093;
          count__22080 = G__22094;
          i__22081 = G__22095;
          continue;
        } else {
          var vec__22083 = cljs.core.first.call(null, seq__22078__$1);
          var k = cljs.core.nth.call(null, vec__22083, 0, null);
          var v = cljs.core.nth.call(null, vec__22083, 1, null);
          f.call(null, v, k);
          var G__22096 = cljs.core.next.call(null, seq__22078__$1);
          var G__22097 = null;
          var G__22098 = 0;
          var G__22099 = 0;
          seq__22078 = G__22096;
          chunk__22079 = G__22097;
          count__22080 = G__22098;
          i__22081 = G__22099;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__22100 = i + 2;
        var G__22101 = init__$2;
        i = G__22100;
        init__$1 = G__22101;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__22084 = other;
    if (G__22084) {
      var bit__4302__auto__ = G__22084.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4302__auto__ || G__22084.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__22102 = i + 2;
              i = G__22102;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj22086 = {};
    return obj22086;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__22103 = s + 2;
            var G__22104 = d;
            s = G__22103;
            d = G__22104;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__22105 = s + 2;
            var G__22106 = d + 2;
            s = G__22105;
            d = G__22106;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__22087 = cljs.core.aclone.call(null, self__.arr);
        G__22087[idx + 1] = v;
        return G__22087;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__22107 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__22108 = cljs.core.next.call(null, es);
          ret = G__22107;
          es = G__22108;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__22109 = null;
  var G__22109__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22109__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22109 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22109__2.call(this, self__, k);
      case 3:
        return G__22109__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22109.cljs$core$IFn$_invoke$arity$2 = G__22109__2;
  G__22109.cljs$core$IFn$_invoke$arity$3 = G__22109__3;
  return G__22109;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args22077) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22077)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__22110 = i + 2;
        var G__22111 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__22110;
        ret = G__22111;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__22112_22114 = self__.arr;
      G__22112_22114.pop();
      G__22112_22114.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__22113 = o;
      if (G__22113) {
        var bit__4309__auto__ = G__22113.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4309__auto__ || G__22113.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__22113.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__22113);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__22113);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__22115 = cljs.core.next.call(null, es);
          var G__22116 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__22115;
          tcoll__$2 = G__22116;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__22117 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__22118 = i + 2;
      out = G__22117;
      i = G__22118;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__22121 = cljs.core.aclone.call(null, arr);
    G__22121[i] = a;
    return G__22121;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__22122 = cljs.core.aclone.call(null, arr);
    G__22122[i] = a;
    G__22122[j] = b;
    return G__22122;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__22123 = i + 2;
        var G__22124 = init__$2;
        i = G__22123;
        init__$1 = G__22124;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_22125 = 0;
        var j_22126 = 0;
        while (true) {
          if (i_22125 < 32) {
            if ((self__.bitmap >>> i_22125 & 1) === 0) {
              var G__22127 = i_22125 + 1;
              var G__22128 = j_22126;
              i_22125 = G__22127;
              j_22126 = G__22128;
              continue;
            } else {
              nodes[i_22125] = !(self__.arr[j_22126] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_22126]), self__.arr[j_22126], self__.arr[j_22126 + 1], added_leaf_QMARK_) : self__.arr[j_22126 + 1];
              var G__22129 = i_22125 + 1;
              var G__22130 = j_22126 + 2;
              i_22125 = G__22129;
              j_22126 = G__22130;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_22131 = 0;
      var j_22132 = 0;
      while (true) {
        if (i_22131 < 32) {
          if ((self__.bitmap >>> i_22131 & 1) === 0) {
            var G__22133 = i_22131 + 1;
            var G__22134 = j_22132;
            i_22131 = G__22133;
            j_22132 = G__22134;
            continue;
          } else {
            nodes[i_22131] = !(self__.arr[j_22132] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_22132]), self__.arr[j_22132], self__.arr[j_22132 + 1], added_leaf_QMARK_) : self__.arr[j_22132 + 1];
            var G__22135 = i_22131 + 1;
            var G__22136 = j_22132 + 2;
            i_22131 = G__22135;
            j_22132 = G__22136;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__22137 = i + 1;
        var G__22138 = j + 2;
        var G__22139 = bitmap | 1 << i;
        i = G__22137;
        j = G__22138;
        bitmap = G__22139;
        continue;
      } else {
        var G__22140 = i + 1;
        var G__22141 = j;
        var G__22142 = bitmap;
        i = G__22140;
        j = G__22141;
        bitmap = G__22142;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__22143 = i + 1;
          var G__22144 = init__$2;
          i = G__22143;
          init__$1 = G__22144;
          continue;
        }
      } else {
        var G__22145 = i + 1;
        var G__22146 = init__$1;
        i = G__22145;
        init__$1 = G__22146;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__22147 = i + 2;
        i = G__22147;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__22148 = j + 2;
                j = G__22148;
                continue;
              }
            } else {
              var G__22149 = j + 2;
              j = G__22149;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__22150 = j + 1;
              j = G__22150;
              continue;
            }
          } else {
            var G__22151 = j + 1;
            j = G__22151;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22153 = cljs.core.seq.call(null, coll);
  var chunk__22154 = null;
  var count__22155 = 0;
  var i__22156 = 0;
  while (true) {
    if (i__22156 < count__22155) {
      var vec__22157 = cljs.core._nth.call(null, chunk__22154, i__22156);
      var k = cljs.core.nth.call(null, vec__22157, 0, null);
      var v = cljs.core.nth.call(null, vec__22157, 1, null);
      f.call(null, v, k);
      var G__22161 = seq__22153;
      var G__22162 = chunk__22154;
      var G__22163 = count__22155;
      var G__22164 = i__22156 + 1;
      seq__22153 = G__22161;
      chunk__22154 = G__22162;
      count__22155 = G__22163;
      i__22156 = G__22164;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22153);
      if (temp__4126__auto__) {
        var seq__22153__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22153__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22153__$1);
          var G__22165 = cljs.core.chunk_rest.call(null, seq__22153__$1);
          var G__22166 = c__4415__auto__;
          var G__22167 = cljs.core.count.call(null, c__4415__auto__);
          var G__22168 = 0;
          seq__22153 = G__22165;
          chunk__22154 = G__22166;
          count__22155 = G__22167;
          i__22156 = G__22168;
          continue;
        } else {
          var vec__22158 = cljs.core.first.call(null, seq__22153__$1);
          var k = cljs.core.nth.call(null, vec__22158, 0, null);
          var v = cljs.core.nth.call(null, vec__22158, 1, null);
          f.call(null, v, k);
          var G__22169 = cljs.core.next.call(null, seq__22153__$1);
          var G__22170 = null;
          var G__22171 = 0;
          var G__22172 = 0;
          seq__22153 = G__22169;
          chunk__22154 = G__22170;
          count__22155 = G__22171;
          i__22156 = G__22172;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj22160 = {};
    return obj22160;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__22173 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__22174 = cljs.core.next.call(null, es);
          ret = G__22173;
          es = G__22174;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__22175 = null;
  var G__22175__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22175__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22175 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22175__2.call(this, self__, k);
      case 3:
        return G__22175__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22175.cljs$core$IFn$_invoke$arity$2 = G__22175__2;
  G__22175.cljs$core$IFn$_invoke$arity$3 = G__22175__3;
  return G__22175;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args22152) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22152)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22176 = i + 1;
      var G__22177 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__22176;
      out = G__22177;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__22178 = o;
      if (G__22178) {
        var bit__4309__auto__ = G__22178.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4309__auto__ || G__22178.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__22178.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__22178);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__22178);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__22179 = cljs.core.next.call(null, es);
          var G__22180 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__22179;
          tcoll__$1 = G__22180;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__22181 = ascending_QMARK_ ? t.left : t.right;
      var G__22182 = cljs.core.conj.call(null, stack__$1, t);
      t = G__22181;
      stack__$1 = G__22182;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__22184 = null;
  var G__22184__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__22184__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__22184 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22184__2.call(this, self__, k);
      case 3:
        return G__22184__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22184.cljs$core$IFn$_invoke$arity$2 = G__22184__2;
  G__22184.cljs$core$IFn$_invoke$arity$3 = G__22184__3;
  return G__22184;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args22183) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22183)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__22186 = null;
  var G__22186__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__22186__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__22186 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22186__2.call(this, self__, k);
      case 3:
        return G__22186__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22186.cljs$core$IFn$_invoke$arity$2 = G__22186__2;
  G__22186.cljs$core$IFn$_invoke$arity$3 = G__22186__3;
  return G__22186;
}();
cljs.core.RedNode.prototype.apply = function(self__, args22185) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22185)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22188 = cljs.core.seq.call(null, coll);
  var chunk__22189 = null;
  var count__22190 = 0;
  var i__22191 = 0;
  while (true) {
    if (i__22191 < count__22190) {
      var vec__22192 = cljs.core._nth.call(null, chunk__22189, i__22191);
      var k = cljs.core.nth.call(null, vec__22192, 0, null);
      var v = cljs.core.nth.call(null, vec__22192, 1, null);
      f.call(null, v, k);
      var G__22194 = seq__22188;
      var G__22195 = chunk__22189;
      var G__22196 = count__22190;
      var G__22197 = i__22191 + 1;
      seq__22188 = G__22194;
      chunk__22189 = G__22195;
      count__22190 = G__22196;
      i__22191 = G__22197;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22188);
      if (temp__4126__auto__) {
        var seq__22188__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22188__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22188__$1);
          var G__22198 = cljs.core.chunk_rest.call(null, seq__22188__$1);
          var G__22199 = c__4415__auto__;
          var G__22200 = cljs.core.count.call(null, c__4415__auto__);
          var G__22201 = 0;
          seq__22188 = G__22198;
          chunk__22189 = G__22199;
          count__22190 = G__22200;
          i__22191 = G__22201;
          continue;
        } else {
          var vec__22193 = cljs.core.first.call(null, seq__22188__$1);
          var k = cljs.core.nth.call(null, vec__22193, 0, null);
          var v = cljs.core.nth.call(null, vec__22193, 1, null);
          f.call(null, v, k);
          var G__22202 = cljs.core.next.call(null, seq__22188__$1);
          var G__22203 = null;
          var G__22204 = 0;
          var G__22205 = 0;
          seq__22188 = G__22202;
          chunk__22189 = G__22203;
          count__22190 = G__22204;
          i__22191 = G__22205;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__22206 = t.left;
          t = G__22206;
          continue;
        } else {
          var G__22207 = t.right;
          t = G__22207;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__22208 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__22209 = cljs.core.next.call(null, es);
          ret = G__22208;
          es = G__22209;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__22210 = null;
  var G__22210__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22210__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22210 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22210__2.call(this, self__, k);
      case 3:
        return G__22210__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22210.cljs$core$IFn$_invoke$arity$2 = G__22210__2;
  G__22210.cljs$core$IFn$_invoke$arity$3 = G__22210__3;
  return G__22210;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args22187) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22187)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__22211 = cljs.core.conj.call(null, stack, t);
              var G__22212 = t.left;
              stack = G__22211;
              t = G__22212;
              continue;
            } else {
              var G__22213 = stack;
              var G__22214 = t.right;
              stack = G__22213;
              t = G__22214;
              continue;
            }
          } else {
            if (c > 0) {
              var G__22215 = cljs.core.conj.call(null, stack, t);
              var G__22216 = t.right;
              stack = G__22215;
              t = G__22216;
              continue;
            } else {
              var G__22217 = stack;
              var G__22218 = t.left;
              stack = G__22217;
              t = G__22218;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__22219 = cljs.core.nnext.call(null, in$);
        var G__22220 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__22219;
        out = G__22220;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__22221) {
    var keyvals = cljs.core.seq(arglist__22221);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.call(null, cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__22222) {
    var keyvals = cljs.core.seq(arglist__22222);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj22226 = {};
      return obj22226;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__22227 = cljs.core.nnext.call(null, kvs);
        kvs = G__22227;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__22228) {
    var keyvals = cljs.core.seq(arglist__22228);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__22229 = cljs.core.nnext.call(null, in$);
        var G__22230 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__22229;
        out = G__22230;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__22231) {
    var keyvals = cljs.core.seq(arglist__22231);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__22232 = cljs.core.nnext.call(null, in$);
        var G__22233 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__22232;
        out = G__22233;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__22234) {
    var comparator = cljs.core.first(arglist__22234);
    var keyvals = cljs.core.rest(arglist__22234);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__22235 = self__.mseq;
    if (G__22235) {
      var bit__4309__auto__ = G__22235.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4309__auto__ || G__22235.cljs$core$INext$) {
        return true;
      } else {
        if (!G__22235.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22235);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22235);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__22236 = self__.mseq;
    if (G__22236) {
      var bit__4309__auto__ = G__22236.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4309__auto__ || G__22236.cljs$core$INext$) {
        return true;
      } else {
        if (!G__22236.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22236);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22236);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__22237 = self__.mseq;
    if (G__22237) {
      var bit__4309__auto__ = G__22237.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4309__auto__ || G__22237.cljs$core$INext$) {
        return true;
      } else {
        if (!G__22237.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22237);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22237);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__22238 = self__.mseq;
    if (G__22238) {
      var bit__4309__auto__ = G__22238.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4309__auto__ || G__22238.cljs$core$INext$) {
        return true;
      } else {
        if (!G__22238.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22238);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__22238);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__22239_SHARP_, p2__22240_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3628__auto__ = p1__22239_SHARP_;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__22240_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__22241) {
    var maps = cljs.core.seq(arglist__22241);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3628__auto__ = m1;
            if (cljs.core.truth_(or__3628__auto__)) {
              return or__3628__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__22242) {
    var f = cljs.core.first(arglist__22242);
    var maps = cljs.core.rest(arglist__22242);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__22243 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__22244 = cljs.core.next.call(null, keys);
      ret = G__22243;
      keys = G__22244;
      continue;
    } else {
      return cljs.core.with_meta.call(null, ret, cljs.core.meta.call(null, map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22247 = cljs.core.seq.call(null, coll);
  var chunk__22248 = null;
  var count__22249 = 0;
  var i__22250 = 0;
  while (true) {
    if (i__22250 < count__22249) {
      var vec__22251 = cljs.core._nth.call(null, chunk__22248, i__22250);
      var k = cljs.core.nth.call(null, vec__22251, 0, null);
      var v = cljs.core.nth.call(null, vec__22251, 1, null);
      f.call(null, v, k);
      var G__22253 = seq__22247;
      var G__22254 = chunk__22248;
      var G__22255 = count__22249;
      var G__22256 = i__22250 + 1;
      seq__22247 = G__22253;
      chunk__22248 = G__22254;
      count__22249 = G__22255;
      i__22250 = G__22256;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22247);
      if (temp__4126__auto__) {
        var seq__22247__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22247__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22247__$1);
          var G__22257 = cljs.core.chunk_rest.call(null, seq__22247__$1);
          var G__22258 = c__4415__auto__;
          var G__22259 = cljs.core.count.call(null, c__4415__auto__);
          var G__22260 = 0;
          seq__22247 = G__22257;
          chunk__22248 = G__22258;
          count__22249 = G__22259;
          i__22250 = G__22260;
          continue;
        } else {
          var vec__22252 = cljs.core.first.call(null, seq__22247__$1);
          var k = cljs.core.nth.call(null, vec__22252, 0, null);
          var v = cljs.core.nth.call(null, vec__22252, 1, null);
          f.call(null, v, k);
          var G__22261 = cljs.core.next.call(null, seq__22247__$1);
          var G__22262 = null;
          var G__22263 = 0;
          var G__22264 = 0;
          seq__22247 = G__22261;
          chunk__22248 = G__22262;
          count__22249 = G__22263;
          i__22250 = G__22264;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__22245_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__22245_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__22265 = null;
  var G__22265__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22265__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22265 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22265__2.call(this, self__, k);
      case 3:
        return G__22265__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22265.cljs$core$IFn$_invoke$arity$2 = G__22265__2;
  G__22265.cljs$core$IFn$_invoke$arity$3 = G__22265__3;
  return G__22265;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args22246) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22246)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__22266 = i + 1;
        var G__22267 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__22266;
        out = G__22267;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__22268 = i + 1;
        var G__22269 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__22268;
        out = G__22269;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__22271 = null;
  var G__22271__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__22271__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__22271 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22271__2.call(this, self__, k);
      case 3:
        return G__22271__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22271.cljs$core$IFn$_invoke$arity$2 = G__22271__2;
  G__22271.cljs$core$IFn$_invoke$arity$3 = G__22271__3;
  return G__22271;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args22270) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22270)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22274 = cljs.core.seq.call(null, coll);
  var chunk__22275 = null;
  var count__22276 = 0;
  var i__22277 = 0;
  while (true) {
    if (i__22277 < count__22276) {
      var vec__22278 = cljs.core._nth.call(null, chunk__22275, i__22277);
      var k = cljs.core.nth.call(null, vec__22278, 0, null);
      var v = cljs.core.nth.call(null, vec__22278, 1, null);
      f.call(null, v, k);
      var G__22280 = seq__22274;
      var G__22281 = chunk__22275;
      var G__22282 = count__22276;
      var G__22283 = i__22277 + 1;
      seq__22274 = G__22280;
      chunk__22275 = G__22281;
      count__22276 = G__22282;
      i__22277 = G__22283;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22274);
      if (temp__4126__auto__) {
        var seq__22274__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22274__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22274__$1);
          var G__22284 = cljs.core.chunk_rest.call(null, seq__22274__$1);
          var G__22285 = c__4415__auto__;
          var G__22286 = cljs.core.count.call(null, c__4415__auto__);
          var G__22287 = 0;
          seq__22274 = G__22284;
          chunk__22275 = G__22285;
          count__22276 = G__22286;
          i__22277 = G__22287;
          continue;
        } else {
          var vec__22279 = cljs.core.first.call(null, seq__22274__$1);
          var k = cljs.core.nth.call(null, vec__22279, 0, null);
          var v = cljs.core.nth.call(null, vec__22279, 1, null);
          f.call(null, v, k);
          var G__22288 = cljs.core.next.call(null, seq__22274__$1);
          var G__22289 = null;
          var G__22290 = 0;
          var G__22291 = 0;
          seq__22274 = G__22288;
          chunk__22275 = G__22289;
          count__22276 = G__22290;
          i__22277 = G__22291;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__22272_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__22272_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__22292 = null;
  var G__22292__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__22292__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__22292 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22292__2.call(this, self__, k);
      case 3:
        return G__22292__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22292.cljs$core$IFn$_invoke$arity$2 = G__22292__2;
  G__22292.cljs$core$IFn$_invoke$arity$3 = G__22292__3;
  return G__22292;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args22273) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22273)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4509__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4509__auto__.length) {
        var G__22293 = i + 1;
        var G__22294 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__22293;
        res = G__22294;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__22295 = cljs.core._next.call(null, in$__$1);
          var G__22296 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__22295;
          out = G__22296;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__22297__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__22297 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__22297__delegate.call(this, keys);
    };
    G__22297.cljs$lang$maxFixedArity = 0;
    G__22297.cljs$lang$applyTo = function(arglist__22298) {
      var keys = cljs.core.seq(arglist__22298);
      return G__22297__delegate(keys);
    };
    G__22297.cljs$core$IFn$_invoke$arity$variadic = G__22297__delegate;
    return G__22297;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__22299) {
    var keys = cljs.core.seq(arglist__22299);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__22300) {
    var comparator = cljs.core.first(arglist__22300);
    var keys = cljs.core.rest(arglist__22300);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__22301_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__22301_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__22301_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__22302_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__22302_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__22302_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__22309, seen__$1) {
        while (true) {
          var vec__22310 = p__22309;
          var f = cljs.core.nth.call(null, vec__22310, 0, null);
          var xs__$1 = vec__22310;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__22311 = cljs.core.rest.call(null, s);
              var G__22312 = seen__$1;
              p__22309 = G__22311;
              seen__$1 = G__22312;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__22313 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__22314 = cljs.core.next.call(null, s__$1);
      ret = G__22313;
      s__$1 = G__22314;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__22316 = x;
    if (G__22316) {
      var bit__4302__auto__ = G__22316.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4302__auto__ || G__22316.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__22317 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__22318 = cljs.core.next.call(null, ks);
      var G__22319 = cljs.core.next.call(null, vs);
      map = G__22317;
      ks = G__22318;
      vs = G__22319;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__22322__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__22320_SHARP_, p2__22321_SHARP_) {
        return max_key.call(null, k, p1__22320_SHARP_, p2__22321_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__22322 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22322__delegate.call(this, k, x, y, more);
    };
    G__22322.cljs$lang$maxFixedArity = 3;
    G__22322.cljs$lang$applyTo = function(arglist__22323) {
      var k = cljs.core.first(arglist__22323);
      arglist__22323 = cljs.core.next(arglist__22323);
      var x = cljs.core.first(arglist__22323);
      arglist__22323 = cljs.core.next(arglist__22323);
      var y = cljs.core.first(arglist__22323);
      var more = cljs.core.rest(arglist__22323);
      return G__22322__delegate(k, x, y, more);
    };
    G__22322.cljs$core$IFn$_invoke$arity$variadic = G__22322__delegate;
    return G__22322;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__22326__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__22324_SHARP_, p2__22325_SHARP_) {
        return min_key.call(null, k, p1__22324_SHARP_, p2__22325_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__22326 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22326__delegate.call(this, k, x, y, more);
    };
    G__22326.cljs$lang$maxFixedArity = 3;
    G__22326.cljs$lang$applyTo = function(arglist__22327) {
      var k = cljs.core.first(arglist__22327);
      arglist__22327 = cljs.core.next(arglist__22327);
      var x = cljs.core.first(arglist__22327);
      arglist__22327 = cljs.core.next(arglist__22327);
      var y = cljs.core.first(arglist__22327);
      var more = cljs.core.rest(arglist__22327);
      return G__22326__delegate(k, x, y, more);
    };
    G__22326.cljs$core$IFn$_invoke$arity$variadic = G__22326__delegate;
    return G__22326;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__22328 = null;
          var G__22328__0 = function() {
            return rf.call(null);
          };
          var G__22328__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__22328__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__22328 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22328__0.call(this);
              case 1:
                return G__22328__1.call(this, result);
              case 2:
                return G__22328__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22328.cljs$core$IFn$_invoke$arity$0 = G__22328__0;
          G__22328.cljs$core$IFn$_invoke$arity$1 = G__22328__1;
          G__22328.cljs$core$IFn$_invoke$arity$2 = G__22328__2;
          return G__22328;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__22329 = null;
        var G__22329__0 = function() {
          return rf.call(null);
        };
        var G__22329__1 = function(result) {
          return rf.call(null, result);
        };
        var G__22329__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__22329 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22329__0.call(this);
            case 1:
              return G__22329__1.call(this, result);
            case 2:
              return G__22329__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22329.cljs$core$IFn$_invoke$arity$0 = G__22329__0;
        G__22329.cljs$core$IFn$_invoke$arity$1 = G__22329__1;
        G__22329.cljs$core$IFn$_invoke$arity$2 = G__22329__2;
        return G__22329;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__22332 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__22332, 0, null);
        var s = vec__22332;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__22333 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__22333, 0, null);
      var s = vec__22333;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__22336 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__22336, 0, null);
        var s = vec__22336;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__22337 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__22337, 0, null);
      var s = vec__22337;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__22338 = i + self__.step;
        var G__22339 = ret__$1;
        i = G__22338;
        ret = G__22339;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__22340 = null;
          var G__22340__0 = function() {
            return rf.call(null);
          };
          var G__22340__1 = function(result) {
            return rf.call(null, result);
          };
          var G__22340__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__22340 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22340__0.call(this);
              case 1:
                return G__22340__1.call(this, result);
              case 2:
                return G__22340__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22340.cljs$core$IFn$_invoke$arity$0 = G__22340__0;
          G__22340.cljs$core$IFn$_invoke$arity$1 = G__22340__1;
          G__22340.cljs$core$IFn$_invoke$arity$2 = G__22340__2;
          return G__22340;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__22342 = null;
          var G__22342__0 = function() {
            return rf.call(null);
          };
          var G__22342__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__22342__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.vreset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__22342 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22342__0.call(this);
              case 1:
                return G__22342__1.call(this, result);
              case 2:
                return G__22342__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22342.cljs$core$IFn$_invoke$arity$0 = G__22342__0;
          G__22342.cljs$core$IFn$_invoke$arity$1 = G__22342__1;
          G__22342.cljs$core$IFn$_invoke$arity$2 = G__22342__2;
          return G__22342;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__22341_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__22341_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__22353 = null;
      var G__22353__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__22353__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__22353__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__22353__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__22353__4 = function() {
        var G__22354__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__22354 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__22354__delegate.call(this, x, y, z, args);
        };
        G__22354.cljs$lang$maxFixedArity = 3;
        G__22354.cljs$lang$applyTo = function(arglist__22355) {
          var x = cljs.core.first(arglist__22355);
          arglist__22355 = cljs.core.next(arglist__22355);
          var y = cljs.core.first(arglist__22355);
          arglist__22355 = cljs.core.next(arglist__22355);
          var z = cljs.core.first(arglist__22355);
          var args = cljs.core.rest(arglist__22355);
          return G__22354__delegate(x, y, z, args);
        };
        G__22354.cljs$core$IFn$_invoke$arity$variadic = G__22354__delegate;
        return G__22354;
      }();
      G__22353 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22353__0.call(this);
          case 1:
            return G__22353__1.call(this, x);
          case 2:
            return G__22353__2.call(this, x, y);
          case 3:
            return G__22353__3.call(this, x, y, z);
          default:
            return G__22353__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22353.cljs$lang$maxFixedArity = 3;
      G__22353.cljs$lang$applyTo = G__22353__4.cljs$lang$applyTo;
      G__22353.cljs$core$IFn$_invoke$arity$0 = G__22353__0;
      G__22353.cljs$core$IFn$_invoke$arity$1 = G__22353__1;
      G__22353.cljs$core$IFn$_invoke$arity$2 = G__22353__2;
      G__22353.cljs$core$IFn$_invoke$arity$3 = G__22353__3;
      G__22353.cljs$core$IFn$_invoke$arity$variadic = G__22353__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22353;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__22356 = null;
      var G__22356__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__22356__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__22356__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__22356__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__22356__4 = function() {
        var G__22357__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__22357 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__22357__delegate.call(this, x, y, z, args);
        };
        G__22357.cljs$lang$maxFixedArity = 3;
        G__22357.cljs$lang$applyTo = function(arglist__22358) {
          var x = cljs.core.first(arglist__22358);
          arglist__22358 = cljs.core.next(arglist__22358);
          var y = cljs.core.first(arglist__22358);
          arglist__22358 = cljs.core.next(arglist__22358);
          var z = cljs.core.first(arglist__22358);
          var args = cljs.core.rest(arglist__22358);
          return G__22357__delegate(x, y, z, args);
        };
        G__22357.cljs$core$IFn$_invoke$arity$variadic = G__22357__delegate;
        return G__22357;
      }();
      G__22356 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22356__0.call(this);
          case 1:
            return G__22356__1.call(this, x);
          case 2:
            return G__22356__2.call(this, x, y);
          case 3:
            return G__22356__3.call(this, x, y, z);
          default:
            return G__22356__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22356.cljs$lang$maxFixedArity = 3;
      G__22356.cljs$lang$applyTo = G__22356__4.cljs$lang$applyTo;
      G__22356.cljs$core$IFn$_invoke$arity$0 = G__22356__0;
      G__22356.cljs$core$IFn$_invoke$arity$1 = G__22356__1;
      G__22356.cljs$core$IFn$_invoke$arity$2 = G__22356__2;
      G__22356.cljs$core$IFn$_invoke$arity$3 = G__22356__3;
      G__22356.cljs$core$IFn$_invoke$arity$variadic = G__22356__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22356;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__22359 = null;
      var G__22359__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__22359__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__22359__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__22359__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__22359__4 = function() {
        var G__22360__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__22360 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__22360__delegate.call(this, x, y, z, args);
        };
        G__22360.cljs$lang$maxFixedArity = 3;
        G__22360.cljs$lang$applyTo = function(arglist__22361) {
          var x = cljs.core.first(arglist__22361);
          arglist__22361 = cljs.core.next(arglist__22361);
          var y = cljs.core.first(arglist__22361);
          arglist__22361 = cljs.core.next(arglist__22361);
          var z = cljs.core.first(arglist__22361);
          var args = cljs.core.rest(arglist__22361);
          return G__22360__delegate(x, y, z, args);
        };
        G__22360.cljs$core$IFn$_invoke$arity$variadic = G__22360__delegate;
        return G__22360;
      }();
      G__22359 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__22359__0.call(this);
          case 1:
            return G__22359__1.call(this, x);
          case 2:
            return G__22359__2.call(this, x, y);
          case 3:
            return G__22359__3.call(this, x, y, z);
          default:
            return G__22359__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22359.cljs$lang$maxFixedArity = 3;
      G__22359.cljs$lang$applyTo = G__22359__4.cljs$lang$applyTo;
      G__22359.cljs$core$IFn$_invoke$arity$0 = G__22359__0;
      G__22359.cljs$core$IFn$_invoke$arity$1 = G__22359__1;
      G__22359.cljs$core$IFn$_invoke$arity$2 = G__22359__2;
      G__22359.cljs$core$IFn$_invoke$arity$3 = G__22359__3;
      G__22359.cljs$core$IFn$_invoke$arity$variadic = G__22359__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__22359;
    }();
  };
  var juxt__4 = function() {
    var G__22362__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__22363 = null;
          var G__22363__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__22343_SHARP_, p2__22344_SHARP_) {
                return cljs.core.conj.call(null, p1__22343_SHARP_, p2__22344_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22363__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__22345_SHARP_, p2__22346_SHARP_) {
                return cljs.core.conj.call(null, p1__22345_SHARP_, p2__22346_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22363__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__22347_SHARP_, p2__22348_SHARP_) {
                return cljs.core.conj.call(null, p1__22347_SHARP_, p2__22348_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22363__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__22349_SHARP_, p2__22350_SHARP_) {
                return cljs.core.conj.call(null, p1__22349_SHARP_, p2__22350_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__22363__4 = function() {
            var G__22364__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__22351_SHARP_, p2__22352_SHARP_) {
                  return cljs.core.conj.call(null, p1__22351_SHARP_, cljs.core.apply.call(null, p2__22352_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__22364 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__22364__delegate.call(this, x, y, z, args);
            };
            G__22364.cljs$lang$maxFixedArity = 3;
            G__22364.cljs$lang$applyTo = function(arglist__22365) {
              var x = cljs.core.first(arglist__22365);
              arglist__22365 = cljs.core.next(arglist__22365);
              var y = cljs.core.first(arglist__22365);
              arglist__22365 = cljs.core.next(arglist__22365);
              var z = cljs.core.first(arglist__22365);
              var args = cljs.core.rest(arglist__22365);
              return G__22364__delegate(x, y, z, args);
            };
            G__22364.cljs$core$IFn$_invoke$arity$variadic = G__22364__delegate;
            return G__22364;
          }();
          G__22363 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__22363__0.call(this);
              case 1:
                return G__22363__1.call(this, x);
              case 2:
                return G__22363__2.call(this, x, y);
              case 3:
                return G__22363__3.call(this, x, y, z);
              default:
                return G__22363__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22363.cljs$lang$maxFixedArity = 3;
          G__22363.cljs$lang$applyTo = G__22363__4.cljs$lang$applyTo;
          G__22363.cljs$core$IFn$_invoke$arity$0 = G__22363__0;
          G__22363.cljs$core$IFn$_invoke$arity$1 = G__22363__1;
          G__22363.cljs$core$IFn$_invoke$arity$2 = G__22363__2;
          G__22363.cljs$core$IFn$_invoke$arity$3 = G__22363__3;
          G__22363.cljs$core$IFn$_invoke$arity$variadic = G__22363__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__22363;
        }();
      }(fs__$1);
    };
    var G__22362 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22362__delegate.call(this, f, g, h, fs);
    };
    G__22362.cljs$lang$maxFixedArity = 3;
    G__22362.cljs$lang$applyTo = function(arglist__22366) {
      var f = cljs.core.first(arglist__22366);
      arglist__22366 = cljs.core.next(arglist__22366);
      var g = cljs.core.first(arglist__22366);
      arglist__22366 = cljs.core.next(arglist__22366);
      var h = cljs.core.first(arglist__22366);
      var fs = cljs.core.rest(arglist__22366);
      return G__22362__delegate(f, g, h, fs);
    };
    G__22362.cljs$core$IFn$_invoke$arity$variadic = G__22362__delegate;
    return G__22362;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__22367 = cljs.core.next.call(null, coll);
        coll = G__22367;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__22368 = n - 1;
        var G__22369 = cljs.core.next.call(null, coll);
        n = G__22368;
        coll = G__22369;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__22371 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__22371, 0, null);
    var flags = cljs.core.nth.call(null, vec__22371, 1, null);
    var pattern = cljs.core.nth.call(null, vec__22371, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_22373 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_22374__$1 = cljs.core.next.call(null, coll);
      var n_22375 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_22374__$1 && (n_22375 == null || !(n_22375 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_22374__$1), writer, opts);
          var G__22376 = cljs.core.next.call(null, coll_22374__$1);
          var G__22377 = n_22375 - 1;
          coll_22374__$1 = G__22376;
          n_22375 = G__22377;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_22374__$1) && n_22375 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22373;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__22382 = cljs.core.seq.call(null, ss);
    var chunk__22383 = null;
    var count__22384 = 0;
    var i__22385 = 0;
    while (true) {
      if (i__22385 < count__22384) {
        var s = cljs.core._nth.call(null, chunk__22383, i__22385);
        cljs.core._write.call(null, writer, s);
        var G__22386 = seq__22382;
        var G__22387 = chunk__22383;
        var G__22388 = count__22384;
        var G__22389 = i__22385 + 1;
        seq__22382 = G__22386;
        chunk__22383 = G__22387;
        count__22384 = G__22388;
        i__22385 = G__22389;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__22382);
        if (temp__4126__auto__) {
          var seq__22382__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22382__$1)) {
            var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22382__$1);
            var G__22390 = cljs.core.chunk_rest.call(null, seq__22382__$1);
            var G__22391 = c__4415__auto__;
            var G__22392 = cljs.core.count.call(null, c__4415__auto__);
            var G__22393 = 0;
            seq__22382 = G__22390;
            chunk__22383 = G__22391;
            count__22384 = G__22392;
            i__22385 = G__22393;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__22382__$1);
            cljs.core._write.call(null, writer, s);
            var G__22394 = cljs.core.next.call(null, seq__22382__$1);
            var G__22395 = null;
            var G__22396 = 0;
            var G__22397 = 0;
            seq__22382 = G__22394;
            chunk__22383 = G__22395;
            count__22384 = G__22396;
            i__22385 = G__22397;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__22398) {
    var writer = cljs.core.first(arglist__22398);
    var ss = cljs.core.rest(arglist__22398);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj22400 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj22400;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3616__auto__)) {
          var and__3616__auto____$1 = function() {
            var G__22406 = obj;
            if (G__22406) {
              var bit__4309__auto__ = G__22406.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4309__auto__ || G__22406.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__22406.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__22406);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__22406);
            }
          }();
          if (and__3616__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3616__auto____$1;
          }
        } else {
          return and__3616__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__22407 = obj;
            if (G__22407) {
              var bit__4302__auto__ = G__22407.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4302__auto__ || G__22407.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__22409 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__22409;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__22408 = obj;
                            if (G__22408) {
                              var bit__4309__auto__ = G__22408.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4309__auto__ || G__22408.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__22408.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__22408);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__22408);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__22414 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__22415 = null;
  var count__22416 = 0;
  var i__22417 = 0;
  while (true) {
    if (i__22417 < count__22416) {
      var obj = cljs.core._nth.call(null, chunk__22415, i__22417);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__22418 = seq__22414;
      var G__22419 = chunk__22415;
      var G__22420 = count__22416;
      var G__22421 = i__22417 + 1;
      seq__22414 = G__22418;
      chunk__22415 = G__22419;
      count__22416 = G__22420;
      i__22417 = G__22421;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22414);
      if (temp__4126__auto__) {
        var seq__22414__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22414__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__22414__$1);
          var G__22422 = cljs.core.chunk_rest.call(null, seq__22414__$1);
          var G__22423 = c__4415__auto__;
          var G__22424 = cljs.core.count.call(null, c__4415__auto__);
          var G__22425 = 0;
          seq__22414 = G__22422;
          chunk__22415 = G__22423;
          count__22416 = G__22424;
          i__22417 = G__22425;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__22414__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__22426 = cljs.core.next.call(null, seq__22414__$1);
          var G__22427 = null;
          var G__22428 = 0;
          var G__22429 = 0;
          seq__22414 = G__22426;
          chunk__22415 = G__22427;
          count__22416 = G__22428;
          i__22417 = G__22429;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__22430) {
    var objs = cljs.core.seq(arglist__22430);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__22431) {
    var objs = cljs.core.seq(arglist__22431);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__22432) {
    var objs = cljs.core.seq(arglist__22432);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__22433) {
    var objs = cljs.core.seq(arglist__22433);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__22434) {
    var objs = cljs.core.seq(arglist__22434);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__22435) {
    var objs = cljs.core.seq(arglist__22435);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__22436) {
    var objs = cljs.core.seq(arglist__22436);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__22437) {
    var objs = cljs.core.seq(arglist__22437);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cVolatile: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#'");
  return cljs.core.pr_writer.call(null, a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__22438) {
    var iref = cljs.core.first(arglist__22438);
    arglist__22438 = cljs.core.next(arglist__22438);
    var f = cljs.core.first(arglist__22438);
    var args = cljs.core.rest(arglist__22438);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__22439_SHARP_, p2__22440_SHARP_) {
    var ret = rf.call(null, p1__22439_SHARP_, p2__22440_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__22441 = null;
      var G__22441__0 = function() {
        return rf.call(null);
      };
      var G__22441__1 = function(result) {
        return rf.call(null, result);
      };
      var G__22441__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__22441 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22441__0.call(this);
          case 1:
            return G__22441__1.call(this, result);
          case 2:
            return G__22441__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22441.cljs$core$IFn$_invoke$arity$0 = G__22441__0;
      G__22441.cljs$core$IFn$_invoke$arity$1 = G__22441__1;
      G__22441.cljs$core$IFn$_invoke$arity$2 = G__22441__2;
      return G__22441;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__22442 = null;
          var G__22442__0 = function() {
            return rf.call(null);
          };
          var G__22442__1 = function(result) {
            return rf.call(null, result);
          };
          var G__22442__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.vreset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__22442 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__22442__0.call(this);
              case 1:
                return G__22442__1.call(this, result);
              case 2:
                return G__22442__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__22442.cljs$core$IFn$_invoke$arity$0 = G__22442__0;
          G__22442.cljs$core$IFn$_invoke$arity$1 = G__22442__1;
          G__22442.cljs$core$IFn$_invoke$arity$2 = G__22442__2;
          return G__22442;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4606__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4606__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__22444_SHARP_, p2__22443_SHARP_) {
    return proc.call(null, p2__22443_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj22446 = {};
  return obj22446;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__22448 = k;
    if (G__22448) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__22448.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__22448.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__22448);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__22448);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__22462 = x;
      if (G__22462) {
        var bit__4309__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3628__auto__ = bit__4309__auto__;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return G__22462.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__22462.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__22462);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__22462);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj22464 = {};
              return obj22464;
            }();
            var seq__22465_22475 = cljs.core.seq.call(null, x);
            var chunk__22466_22476 = null;
            var count__22467_22477 = 0;
            var i__22468_22478 = 0;
            while (true) {
              if (i__22468_22478 < count__22467_22477) {
                var vec__22469_22479 = cljs.core._nth.call(null, chunk__22466_22476, i__22468_22478);
                var k_22480 = cljs.core.nth.call(null, vec__22469_22479, 0, null);
                var v_22481 = cljs.core.nth.call(null, vec__22469_22479, 1, null);
                m[cljs.core.key__GT_js.call(null, k_22480)] = clj__GT_js.call(null, v_22481);
                var G__22482 = seq__22465_22475;
                var G__22483 = chunk__22466_22476;
                var G__22484 = count__22467_22477;
                var G__22485 = i__22468_22478 + 1;
                seq__22465_22475 = G__22482;
                chunk__22466_22476 = G__22483;
                count__22467_22477 = G__22484;
                i__22468_22478 = G__22485;
                continue;
              } else {
                var temp__4126__auto___22486 = cljs.core.seq.call(null, seq__22465_22475);
                if (temp__4126__auto___22486) {
                  var seq__22465_22487__$1 = temp__4126__auto___22486;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__22465_22487__$1)) {
                    var c__4415__auto___22488 = cljs.core.chunk_first.call(null, seq__22465_22487__$1);
                    var G__22489 = cljs.core.chunk_rest.call(null, seq__22465_22487__$1);
                    var G__22490 = c__4415__auto___22488;
                    var G__22491 = cljs.core.count.call(null, c__4415__auto___22488);
                    var G__22492 = 0;
                    seq__22465_22475 = G__22489;
                    chunk__22466_22476 = G__22490;
                    count__22467_22477 = G__22491;
                    i__22468_22478 = G__22492;
                    continue;
                  } else {
                    var vec__22470_22493 = cljs.core.first.call(null, seq__22465_22487__$1);
                    var k_22494 = cljs.core.nth.call(null, vec__22470_22493, 0, null);
                    var v_22495 = cljs.core.nth.call(null, vec__22470_22493, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_22494)] = clj__GT_js.call(null, v_22495);
                    var G__22496 = cljs.core.next.call(null, seq__22465_22487__$1);
                    var G__22497 = null;
                    var G__22498 = 0;
                    var G__22499 = 0;
                    seq__22465_22475 = G__22496;
                    chunk__22466_22476 = G__22497;
                    count__22467_22477 = G__22498;
                    i__22468_22478 = G__22499;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__22471_22500 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__22472_22501 = null;
              var count__22473_22502 = 0;
              var i__22474_22503 = 0;
              while (true) {
                if (i__22474_22503 < count__22473_22502) {
                  var x_22504__$1 = cljs.core._nth.call(null, chunk__22472_22501, i__22474_22503);
                  arr.push(x_22504__$1);
                  var G__22505 = seq__22471_22500;
                  var G__22506 = chunk__22472_22501;
                  var G__22507 = count__22473_22502;
                  var G__22508 = i__22474_22503 + 1;
                  seq__22471_22500 = G__22505;
                  chunk__22472_22501 = G__22506;
                  count__22473_22502 = G__22507;
                  i__22474_22503 = G__22508;
                  continue;
                } else {
                  var temp__4126__auto___22509 = cljs.core.seq.call(null, seq__22471_22500);
                  if (temp__4126__auto___22509) {
                    var seq__22471_22510__$1 = temp__4126__auto___22509;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__22471_22510__$1)) {
                      var c__4415__auto___22511 = cljs.core.chunk_first.call(null, seq__22471_22510__$1);
                      var G__22512 = cljs.core.chunk_rest.call(null, seq__22471_22510__$1);
                      var G__22513 = c__4415__auto___22511;
                      var G__22514 = cljs.core.count.call(null, c__4415__auto___22511);
                      var G__22515 = 0;
                      seq__22471_22500 = G__22512;
                      chunk__22472_22501 = G__22513;
                      count__22473_22502 = G__22514;
                      i__22474_22503 = G__22515;
                      continue;
                    } else {
                      var x_22516__$1 = cljs.core.first.call(null, seq__22471_22510__$1);
                      arr.push(x_22516__$1);
                      var G__22517 = cljs.core.next.call(null, seq__22471_22510__$1);
                      var G__22518 = null;
                      var G__22519 = 0;
                      var G__22520 = 0;
                      seq__22471_22500 = G__22517;
                      chunk__22472_22501 = G__22518;
                      count__22473_22502 = G__22519;
                      i__22474_22503 = G__22520;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj22522 = {};
  return obj22522;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__22545__delegate = function(x, opts) {
      var map__22534 = opts;
      var map__22534__$1 = cljs.core.seq_QMARK_.call(null, map__22534) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22534) : map__22534;
      var keywordize_keys = cljs.core.get.call(null, map__22534__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__22534, map__22534__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__22540 = x__$1;
            if (G__22540) {
              var bit__4309__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3628__auto__ = bit__4309__auto__;
                if (cljs.core.truth_(or__3628__auto__)) {
                  return or__3628__auto__;
                } else {
                  return G__22540.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__22540.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__22540);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__22540);
            }
          }()) {
            return cljs.core._js__GT_clj.call(null, x__$1, cljs.core.apply.call(null, cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_.call(null, x__$1)) {
              return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (cljs.core.type.call(null, x__$1) === Object) {
                    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4384__auto__ = function(map__22534, map__22534__$1, keywordize_keys, keyfn) {
                        return function iter__22541(s__22542) {
                          return new cljs.core.LazySeq(null, function(map__22534, map__22534__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__22542__$1 = s__22542;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__22542__$1);
                                if (temp__4126__auto__) {
                                  var s__22542__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__22542__$2)) {
                                    var c__4382__auto__ = cljs.core.chunk_first.call(null, s__22542__$2);
                                    var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                                    var b__22544 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                                    if (function() {
                                      var i__22543 = 0;
                                      while (true) {
                                        if (i__22543 < size__4383__auto__) {
                                          var k = cljs.core._nth.call(null, c__4382__auto__, i__22543);
                                          cljs.core.chunk_append.call(null, b__22544, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                          var G__22546 = i__22543 + 1;
                                          i__22543 = G__22546;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22544), iter__22541.call(null, cljs.core.chunk_rest.call(null, s__22542__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22544), null);
                                    }
                                  } else {
                                    var k = cljs.core.first.call(null, s__22542__$2);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__22541.call(null, cljs.core.rest.call(null, s__22542__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__22534, map__22534__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__22534, map__22534__$1, keywordize_keys, keyfn);
                      return iter__4384__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__22534, map__22534__$1, keywordize_keys, keyfn);
      return f.call(null, x);
    };
    var G__22545 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__22545__delegate.call(this, x, opts);
    };
    G__22545.cljs$lang$maxFixedArity = 1;
    G__22545.cljs$lang$applyTo = function(arglist__22547) {
      var x = cljs.core.first(arglist__22547);
      var opts = cljs.core.rest(arglist__22547);
      return G__22545__delegate(x, opts);
    };
    G__22545.cljs$core$IFn$_invoke$arity$variadic = G__22545__delegate;
    return G__22545;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__22548__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__22548 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__22548__delegate.call(this, args);
      };
      G__22548.cljs$lang$maxFixedArity = 0;
      G__22548.cljs$lang$applyTo = function(arglist__22549) {
        var args = cljs.core.seq(arglist__22549);
        return G__22548__delegate(args);
      };
      G__22548.cljs$core$IFn$_invoke$arity$variadic = G__22548__delegate;
      return G__22548;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__22550 = ret;
        f = G__22550;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__22551__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__22551 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__22551__delegate.call(this, f, args);
    };
    G__22551.cljs$lang$maxFixedArity = 1;
    G__22551.cljs$lang$applyTo = function(arglist__22552) {
      var f = cljs.core.first(arglist__22552);
      var args = cljs.core.rest(arglist__22552);
      return G__22551__delegate(f, args);
    };
    G__22551.cljs$core$IFn$_invoke$arity$variadic = G__22551__delegate;
    return G__22551;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__22553) {
    var f = cljs.core.first(arglist__22553);
    var args = cljs.core.rest(arglist__22553);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3628__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      var or__3628__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3628__auto____$1) {
        return or__3628__auto____$1;
      } else {
        var and__3616__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3616__auto__) {
          var and__3616__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3616__auto____$1) {
            var and__3616__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3616__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__22554 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__22555 = i + 1;
                  ret = G__22554;
                  i = G__22555;
                  continue;
                }
                break;
              }
            } else {
              return and__3616__auto____$2;
            }
          } else {
            return and__3616__auto____$1;
          }
        } else {
          return and__3616__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3628__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__22556_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__22556_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__22556_SHARP_), cljs.core.second.call(null, p1__22556_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__22557_SHARP_, p2__22558_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__22557_SHARP_, p2__22558_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3628__auto__ = cljs.core.truth_(function() {
    var and__3616__auto__ = xprefs;
    if (cljs.core.truth_(and__3616__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3616__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    var or__3628__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__22559 = cljs.core.rest.call(null, ps);
          ps = G__22559;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3628__auto____$1)) {
      return or__3628__auto____$1;
    } else {
      var or__3628__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__22560 = cljs.core.rest.call(null, ps);
            ps = G__22560;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3628__auto____$2)) {
        return or__3628__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3628__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__22563) {
    var vec__22564 = p__22563;
    var k = cljs.core.nth.call(null, vec__22564, 0, null);
    var _ = cljs.core.nth.call(null, vec__22564, 1, null);
    var e = vec__22564;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3628__auto__ = be == null;
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj22566 = {};
  return obj22566;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._reset[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._reset["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._add_method[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._add_method["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._remove_method[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._remove_method["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._prefer_method[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._get_method[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._get_method["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._methods[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._methods["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3616__auto__ = mf;
    if (and__3616__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4272__auto__ = mf == null ? null : mf;
    return function() {
      var or__3628__auto__ = cljs.core._prefers[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core._prefers["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__22568 = null;
  var G__22568__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null);
  };
  var G__22568__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__22568__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__22568__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__22568__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__22568__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__22568__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__22568__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__22568__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__22568__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__22568__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__22568__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__22568__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__22568__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__22568__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__22568__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__22568__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__22568__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__22568__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__22568__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__22568__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__22568__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__22568 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22568__1.call(this, self__);
      case 2:
        return G__22568__2.call(this, self__, a);
      case 3:
        return G__22568__3.call(this, self__, a, b);
      case 4:
        return G__22568__4.call(this, self__, a, b, c);
      case 5:
        return G__22568__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22568__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22568__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22568__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22568__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22568__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22568__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22568__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22568__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22568__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22568__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22568__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22568__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22568__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22568__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22568__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22568__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22568__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22568.cljs$core$IFn$_invoke$arity$1 = G__22568__1;
  G__22568.cljs$core$IFn$_invoke$arity$2 = G__22568__2;
  G__22568.cljs$core$IFn$_invoke$arity$3 = G__22568__3;
  G__22568.cljs$core$IFn$_invoke$arity$4 = G__22568__4;
  G__22568.cljs$core$IFn$_invoke$arity$5 = G__22568__5;
  G__22568.cljs$core$IFn$_invoke$arity$6 = G__22568__6;
  G__22568.cljs$core$IFn$_invoke$arity$7 = G__22568__7;
  G__22568.cljs$core$IFn$_invoke$arity$8 = G__22568__8;
  G__22568.cljs$core$IFn$_invoke$arity$9 = G__22568__9;
  G__22568.cljs$core$IFn$_invoke$arity$10 = G__22568__10;
  G__22568.cljs$core$IFn$_invoke$arity$11 = G__22568__11;
  G__22568.cljs$core$IFn$_invoke$arity$12 = G__22568__12;
  G__22568.cljs$core$IFn$_invoke$arity$13 = G__22568__13;
  G__22568.cljs$core$IFn$_invoke$arity$14 = G__22568__14;
  G__22568.cljs$core$IFn$_invoke$arity$15 = G__22568__15;
  G__22568.cljs$core$IFn$_invoke$arity$16 = G__22568__16;
  G__22568.cljs$core$IFn$_invoke$arity$17 = G__22568__17;
  G__22568.cljs$core$IFn$_invoke$arity$18 = G__22568__18;
  G__22568.cljs$core$IFn$_invoke$arity$19 = G__22568__19;
  G__22568.cljs$core$IFn$_invoke$arity$20 = G__22568__20;
  G__22568.cljs$core$IFn$_invoke$arity$21 = G__22568__21;
  G__22568.cljs$core$IFn$_invoke$arity$22 = G__22568__22;
  return G__22568;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args22567) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22567)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("joy.music");
goog.require("cljs.core");
joy.music.soft_attack = function soft_attack(ctx, p__21294) {
  var map__21297 = p__21294;
  var map__21297__$1 = cljs.core.seq_QMARK_.call(null, map__21297) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21297) : map__21297;
  var volume = cljs.core.get.call(null, map__21297__$1, new cljs.core.Keyword(null, "volume", "volume", 1900330799));
  var duration = cljs.core.get.call(null, map__21297__$1, new cljs.core.Keyword(null, "duration", "duration", 1444101068));
  var delay = cljs.core.get.call(null, map__21297__$1, new cljs.core.Keyword(null, "delay", "delay", -574225219));
  var node = ctx.createGain();
  var ap = node.gain;
  var G__21298_21299 = ap;
  G__21298_21299.linearRampToValueAtTime(0, delay);
  G__21298_21299.linearRampToValueAtTime(volume, delay + .05);
  G__21298_21299.linearRampToValueAtTime(0, delay + duration);
  return node;
};
joy.music.sine_tone = function sine_tone(ctx, p__21300) {
  var map__21302 = p__21300;
  var map__21302__$1 = cljs.core.seq_QMARK_.call(null, map__21302) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21302) : map__21302;
  var duration = cljs.core.get.call(null, map__21302__$1, new cljs.core.Keyword(null, "duration", "duration", 1444101068));
  var delay = cljs.core.get.call(null, map__21302__$1, new cljs.core.Keyword(null, "delay", "delay", -574225219));
  var cent = cljs.core.get.call(null, map__21302__$1, new cljs.core.Keyword(null, "cent", "cent", -673959391));
  var node = ctx.createOscillator();
  node.frequency.value = 440;
  node.detune.value = cent - 900;
  node.start(delay);
  node.stop(delay + duration);
  return node;
};
joy.music.connect_to = function connect_to(node1, node2) {
  node1.connect(node2);
  return node2;
};
joy.music.woo = function woo(ctx, note) {
  var linger = 1.5;
  var note__$1 = cljs.core.update_in.call(null, note, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "duration", "duration", 1444101068)], null), cljs.core._STAR_, linger);
  return joy.music.connect_to.call(null, joy.music.sine_tone.call(null, ctx, note__$1), joy.music.soft_attack.call(null, ctx, note__$1));
};
joy.music.pair_to_note = function pair_to_note(p__21303) {
  var vec__21305 = p__21303;
  var tone = cljs.core.nth.call(null, vec__21305, 0, null);
  var duration = cljs.core.nth.call(null, vec__21305, 1, null);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cent", "cent", -673959391), 100 * tone, new cljs.core.Keyword(null, "duration", "duration", 1444101068), duration, new cljs.core.Keyword(null, "volume", "volume", 1900330799), .4], null);
};
joy.music.consecutive_notes = function consecutive_notes(notes) {
  return cljs.core.reductions.call(null, function(p__21308, note2) {
    var map__21309 = p__21308;
    var map__21309__$1 = cljs.core.seq_QMARK_.call(null, map__21309) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21309) : map__21309;
    var note1 = map__21309__$1;
    var duration = cljs.core.get.call(null, map__21309__$1, new cljs.core.Keyword(null, "duration", "duration", 1444101068));
    var delay = cljs.core.get.call(null, map__21309__$1, new cljs.core.Keyword(null, "delay", "delay", -574225219));
    return cljs.core.assoc.call(null, note2, new cljs.core.Keyword(null, "delay", "delay", -574225219), delay + duration);
  }, notes);
};
joy.music.BPS = 6;
joy.music.notes = function notes(tone_pairs) {
  return cljs.core.map.call(null, function(p1__21311_SHARP_) {
    return cljs.core.update_in.call(null, p1__21311_SHARP_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "duration", "duration", 1444101068)], null), cljs.core._SLASH_, joy.music.BPS);
  }, cljs.core.map.call(null, function(p1__21310_SHARP_) {
    return cljs.core.update_in.call(null, p1__21310_SHARP_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "delay", "delay", -574225219)], null), cljs.core._SLASH_, joy.music.BPS);
  }, joy.music.consecutive_notes.call(null, cljs.core.map.call(null, joy.music.pair_to_note, tone_pairs))));
};
joy.music.magical_theme = function magical_theme() {
  cljs.core.List.EMPTY;
  return joy.music.notes.call(null, new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [11, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [19, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [18, 
  2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [23, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [21, 6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [18, 6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 3], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [19, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [18, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [14, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [17, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [11, 10], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [11, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [19, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [18, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [23, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [26, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [25, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 3], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [23, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [22, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [19, 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 10], null)], 
  null));
};
joy.music.make_once = cljs.core.memoize.call(null, function(audio_api) {
  return new audio_api;
});
joy.music.play_BANG_ = function play_BANG_(note_fn, notes) {
  var temp__4124__auto__ = function() {
    var or__3628__auto__ = window.AudioContext;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return window.webkitAudioContext;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var audio_api = temp__4124__auto__;
    var ctx = joy.music.make_once.call(null, audio_api);
    var compressor = ctx.createDynamicsCompressor();
    var now_21320 = ctx.currentTime;
    var seq__21316_21321 = cljs.core.seq.call(null, notes);
    var chunk__21317_21322 = null;
    var count__21318_21323 = 0;
    var i__21319_21324 = 0;
    while (true) {
      if (i__21319_21324 < count__21318_21323) {
        var note_21325 = cljs.core._nth.call(null, chunk__21317_21322, i__21319_21324);
        joy.music.connect_to.call(null, note_fn.call(null, ctx, cljs.core.update_in.call(null, note_21325, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "delay", "delay", -574225219)], null), cljs.core._PLUS_, now_21320)), compressor);
        var G__21326 = seq__21316_21321;
        var G__21327 = chunk__21317_21322;
        var G__21328 = count__21318_21323;
        var G__21329 = i__21319_21324 + 1;
        seq__21316_21321 = G__21326;
        chunk__21317_21322 = G__21327;
        count__21318_21323 = G__21328;
        i__21319_21324 = G__21329;
        continue;
      } else {
        var temp__4126__auto___21330 = cljs.core.seq.call(null, seq__21316_21321);
        if (temp__4126__auto___21330) {
          var seq__21316_21331__$1 = temp__4126__auto___21330;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21316_21331__$1)) {
            var c__4415__auto___21332 = cljs.core.chunk_first.call(null, seq__21316_21331__$1);
            var G__21333 = cljs.core.chunk_rest.call(null, seq__21316_21331__$1);
            var G__21334 = c__4415__auto___21332;
            var G__21335 = cljs.core.count.call(null, c__4415__auto___21332);
            var G__21336 = 0;
            seq__21316_21321 = G__21333;
            chunk__21317_21322 = G__21334;
            count__21318_21323 = G__21335;
            i__21319_21324 = G__21336;
            continue;
          } else {
            var note_21337 = cljs.core.first.call(null, seq__21316_21331__$1);
            joy.music.connect_to.call(null, note_fn.call(null, ctx, cljs.core.update_in.call(null, note_21337, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "delay", "delay", -574225219)], null), cljs.core._PLUS_, now_21320)), compressor);
            var G__21338 = cljs.core.next.call(null, seq__21316_21331__$1);
            var G__21339 = null;
            var G__21340 = 0;
            var G__21341 = 0;
            seq__21316_21321 = G__21338;
            chunk__21317_21322 = G__21339;
            count__21318_21323 = G__21340;
            i__21319_21324 = G__21341;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return joy.music.connect_to.call(null, compressor, ctx.destination);
  } else {
    return console.log("(play!):: This browser does not support the WebAudio API");
  }
};
joy.music.main = function main() {
  var msg = "(main):: inside joy.music namespace...";
  console.log(msg);
  return joy.music.play_BANG_.call(null, joy.music.woo, joy.music.magical_theme.call(null));
};
goog.exportSymbol("joy.music.main", joy.music.main);
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var a = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__22569) {
    var opts__5252__auto__ = cljs.core.first(arglist__22569);
    var children__5253__auto__ = cljs.core.rest(arglist__22569);
    return a__delegate(opts__5252__auto__, children__5253__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var abbr = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__22570) {
    var opts__5252__auto__ = cljs.core.first(arglist__22570);
    var children__5253__auto__ = cljs.core.rest(arglist__22570);
    return abbr__delegate(opts__5252__auto__, children__5253__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var address = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__22571) {
    var opts__5252__auto__ = cljs.core.first(arglist__22571);
    var children__5253__auto__ = cljs.core.rest(arglist__22571);
    return address__delegate(opts__5252__auto__, children__5253__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var area = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__22572) {
    var opts__5252__auto__ = cljs.core.first(arglist__22572);
    var children__5253__auto__ = cljs.core.rest(arglist__22572);
    return area__delegate(opts__5252__auto__, children__5253__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var article = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__22573) {
    var opts__5252__auto__ = cljs.core.first(arglist__22573);
    var children__5253__auto__ = cljs.core.rest(arglist__22573);
    return article__delegate(opts__5252__auto__, children__5253__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var aside = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__22574) {
    var opts__5252__auto__ = cljs.core.first(arglist__22574);
    var children__5253__auto__ = cljs.core.rest(arglist__22574);
    return aside__delegate(opts__5252__auto__, children__5253__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var audio = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__22575) {
    var opts__5252__auto__ = cljs.core.first(arglist__22575);
    var children__5253__auto__ = cljs.core.rest(arglist__22575);
    return audio__delegate(opts__5252__auto__, children__5253__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var b = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__22576) {
    var opts__5252__auto__ = cljs.core.first(arglist__22576);
    var children__5253__auto__ = cljs.core.rest(arglist__22576);
    return b__delegate(opts__5252__auto__, children__5253__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var base = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__22577) {
    var opts__5252__auto__ = cljs.core.first(arglist__22577);
    var children__5253__auto__ = cljs.core.rest(arglist__22577);
    return base__delegate(opts__5252__auto__, children__5253__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var bdi = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__22578) {
    var opts__5252__auto__ = cljs.core.first(arglist__22578);
    var children__5253__auto__ = cljs.core.rest(arglist__22578);
    return bdi__delegate(opts__5252__auto__, children__5253__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var bdo = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__22579) {
    var opts__5252__auto__ = cljs.core.first(arglist__22579);
    var children__5253__auto__ = cljs.core.rest(arglist__22579);
    return bdo__delegate(opts__5252__auto__, children__5253__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var big = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__22580) {
    var opts__5252__auto__ = cljs.core.first(arglist__22580);
    var children__5253__auto__ = cljs.core.rest(arglist__22580);
    return big__delegate(opts__5252__auto__, children__5253__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var blockquote = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__22581) {
    var opts__5252__auto__ = cljs.core.first(arglist__22581);
    var children__5253__auto__ = cljs.core.rest(arglist__22581);
    return blockquote__delegate(opts__5252__auto__, children__5253__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var body = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__22582) {
    var opts__5252__auto__ = cljs.core.first(arglist__22582);
    var children__5253__auto__ = cljs.core.rest(arglist__22582);
    return body__delegate(opts__5252__auto__, children__5253__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var br = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__22583) {
    var opts__5252__auto__ = cljs.core.first(arglist__22583);
    var children__5253__auto__ = cljs.core.rest(arglist__22583);
    return br__delegate(opts__5252__auto__, children__5253__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var button = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__22584) {
    var opts__5252__auto__ = cljs.core.first(arglist__22584);
    var children__5253__auto__ = cljs.core.rest(arglist__22584);
    return button__delegate(opts__5252__auto__, children__5253__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var canvas = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__22585) {
    var opts__5252__auto__ = cljs.core.first(arglist__22585);
    var children__5253__auto__ = cljs.core.rest(arglist__22585);
    return canvas__delegate(opts__5252__auto__, children__5253__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var caption = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__22586) {
    var opts__5252__auto__ = cljs.core.first(arglist__22586);
    var children__5253__auto__ = cljs.core.rest(arglist__22586);
    return caption__delegate(opts__5252__auto__, children__5253__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var cite = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__22587) {
    var opts__5252__auto__ = cljs.core.first(arglist__22587);
    var children__5253__auto__ = cljs.core.rest(arglist__22587);
    return cite__delegate(opts__5252__auto__, children__5253__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var code = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__22588) {
    var opts__5252__auto__ = cljs.core.first(arglist__22588);
    var children__5253__auto__ = cljs.core.rest(arglist__22588);
    return code__delegate(opts__5252__auto__, children__5253__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var col = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__22589) {
    var opts__5252__auto__ = cljs.core.first(arglist__22589);
    var children__5253__auto__ = cljs.core.rest(arglist__22589);
    return col__delegate(opts__5252__auto__, children__5253__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var colgroup = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__22590) {
    var opts__5252__auto__ = cljs.core.first(arglist__22590);
    var children__5253__auto__ = cljs.core.rest(arglist__22590);
    return colgroup__delegate(opts__5252__auto__, children__5253__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var data = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__22591) {
    var opts__5252__auto__ = cljs.core.first(arglist__22591);
    var children__5253__auto__ = cljs.core.rest(arglist__22591);
    return data__delegate(opts__5252__auto__, children__5253__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var datalist = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__22592) {
    var opts__5252__auto__ = cljs.core.first(arglist__22592);
    var children__5253__auto__ = cljs.core.rest(arglist__22592);
    return datalist__delegate(opts__5252__auto__, children__5253__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var dd = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__22593) {
    var opts__5252__auto__ = cljs.core.first(arglist__22593);
    var children__5253__auto__ = cljs.core.rest(arglist__22593);
    return dd__delegate(opts__5252__auto__, children__5253__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var del = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__22594) {
    var opts__5252__auto__ = cljs.core.first(arglist__22594);
    var children__5253__auto__ = cljs.core.rest(arglist__22594);
    return del__delegate(opts__5252__auto__, children__5253__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var dfn = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__22595) {
    var opts__5252__auto__ = cljs.core.first(arglist__22595);
    var children__5253__auto__ = cljs.core.rest(arglist__22595);
    return dfn__delegate(opts__5252__auto__, children__5253__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var div = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__22596) {
    var opts__5252__auto__ = cljs.core.first(arglist__22596);
    var children__5253__auto__ = cljs.core.rest(arglist__22596);
    return div__delegate(opts__5252__auto__, children__5253__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var dl = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__22597) {
    var opts__5252__auto__ = cljs.core.first(arglist__22597);
    var children__5253__auto__ = cljs.core.rest(arglist__22597);
    return dl__delegate(opts__5252__auto__, children__5253__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var dt = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__22598) {
    var opts__5252__auto__ = cljs.core.first(arglist__22598);
    var children__5253__auto__ = cljs.core.rest(arglist__22598);
    return dt__delegate(opts__5252__auto__, children__5253__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var em = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__22599) {
    var opts__5252__auto__ = cljs.core.first(arglist__22599);
    var children__5253__auto__ = cljs.core.rest(arglist__22599);
    return em__delegate(opts__5252__auto__, children__5253__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var embed = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__22600) {
    var opts__5252__auto__ = cljs.core.first(arglist__22600);
    var children__5253__auto__ = cljs.core.rest(arglist__22600);
    return embed__delegate(opts__5252__auto__, children__5253__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var fieldset = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__22601) {
    var opts__5252__auto__ = cljs.core.first(arglist__22601);
    var children__5253__auto__ = cljs.core.rest(arglist__22601);
    return fieldset__delegate(opts__5252__auto__, children__5253__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var figcaption = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__22602) {
    var opts__5252__auto__ = cljs.core.first(arglist__22602);
    var children__5253__auto__ = cljs.core.rest(arglist__22602);
    return figcaption__delegate(opts__5252__auto__, children__5253__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var figure = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__22603) {
    var opts__5252__auto__ = cljs.core.first(arglist__22603);
    var children__5253__auto__ = cljs.core.rest(arglist__22603);
    return figure__delegate(opts__5252__auto__, children__5253__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var footer = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__22604) {
    var opts__5252__auto__ = cljs.core.first(arglist__22604);
    var children__5253__auto__ = cljs.core.rest(arglist__22604);
    return footer__delegate(opts__5252__auto__, children__5253__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var form = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__22605) {
    var opts__5252__auto__ = cljs.core.first(arglist__22605);
    var children__5253__auto__ = cljs.core.rest(arglist__22605);
    return form__delegate(opts__5252__auto__, children__5253__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h1 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__22606) {
    var opts__5252__auto__ = cljs.core.first(arglist__22606);
    var children__5253__auto__ = cljs.core.rest(arglist__22606);
    return h1__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h2 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__22607) {
    var opts__5252__auto__ = cljs.core.first(arglist__22607);
    var children__5253__auto__ = cljs.core.rest(arglist__22607);
    return h2__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h3 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__22608) {
    var opts__5252__auto__ = cljs.core.first(arglist__22608);
    var children__5253__auto__ = cljs.core.rest(arglist__22608);
    return h3__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h4 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__22609) {
    var opts__5252__auto__ = cljs.core.first(arglist__22609);
    var children__5253__auto__ = cljs.core.rest(arglist__22609);
    return h4__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h5 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__22610) {
    var opts__5252__auto__ = cljs.core.first(arglist__22610);
    var children__5253__auto__ = cljs.core.rest(arglist__22610);
    return h5__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var h6 = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__22611) {
    var opts__5252__auto__ = cljs.core.first(arglist__22611);
    var children__5253__auto__ = cljs.core.rest(arglist__22611);
    return h6__delegate(opts__5252__auto__, children__5253__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var head = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__22612) {
    var opts__5252__auto__ = cljs.core.first(arglist__22612);
    var children__5253__auto__ = cljs.core.rest(arglist__22612);
    return head__delegate(opts__5252__auto__, children__5253__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var header = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__22613) {
    var opts__5252__auto__ = cljs.core.first(arglist__22613);
    var children__5253__auto__ = cljs.core.rest(arglist__22613);
    return header__delegate(opts__5252__auto__, children__5253__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var hr = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__22614) {
    var opts__5252__auto__ = cljs.core.first(arglist__22614);
    var children__5253__auto__ = cljs.core.rest(arglist__22614);
    return hr__delegate(opts__5252__auto__, children__5253__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var html = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__22615) {
    var opts__5252__auto__ = cljs.core.first(arglist__22615);
    var children__5253__auto__ = cljs.core.rest(arglist__22615);
    return html__delegate(opts__5252__auto__, children__5253__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var i = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__22616) {
    var opts__5252__auto__ = cljs.core.first(arglist__22616);
    var children__5253__auto__ = cljs.core.rest(arglist__22616);
    return i__delegate(opts__5252__auto__, children__5253__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var iframe = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__22617) {
    var opts__5252__auto__ = cljs.core.first(arglist__22617);
    var children__5253__auto__ = cljs.core.rest(arglist__22617);
    return iframe__delegate(opts__5252__auto__, children__5253__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var img = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__22618) {
    var opts__5252__auto__ = cljs.core.first(arglist__22618);
    var children__5253__auto__ = cljs.core.rest(arglist__22618);
    return img__delegate(opts__5252__auto__, children__5253__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var ins = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__22619) {
    var opts__5252__auto__ = cljs.core.first(arglist__22619);
    var children__5253__auto__ = cljs.core.rest(arglist__22619);
    return ins__delegate(opts__5252__auto__, children__5253__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var kbd = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__22620) {
    var opts__5252__auto__ = cljs.core.first(arglist__22620);
    var children__5253__auto__ = cljs.core.rest(arglist__22620);
    return kbd__delegate(opts__5252__auto__, children__5253__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var keygen = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__22621) {
    var opts__5252__auto__ = cljs.core.first(arglist__22621);
    var children__5253__auto__ = cljs.core.rest(arglist__22621);
    return keygen__delegate(opts__5252__auto__, children__5253__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var label = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__22622) {
    var opts__5252__auto__ = cljs.core.first(arglist__22622);
    var children__5253__auto__ = cljs.core.rest(arglist__22622);
    return label__delegate(opts__5252__auto__, children__5253__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var legend = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__22623) {
    var opts__5252__auto__ = cljs.core.first(arglist__22623);
    var children__5253__auto__ = cljs.core.rest(arglist__22623);
    return legend__delegate(opts__5252__auto__, children__5253__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var li = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__22624) {
    var opts__5252__auto__ = cljs.core.first(arglist__22624);
    var children__5253__auto__ = cljs.core.rest(arglist__22624);
    return li__delegate(opts__5252__auto__, children__5253__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var link = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__22625) {
    var opts__5252__auto__ = cljs.core.first(arglist__22625);
    var children__5253__auto__ = cljs.core.rest(arglist__22625);
    return link__delegate(opts__5252__auto__, children__5253__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var main = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__22626) {
    var opts__5252__auto__ = cljs.core.first(arglist__22626);
    var children__5253__auto__ = cljs.core.rest(arglist__22626);
    return main__delegate(opts__5252__auto__, children__5253__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var map = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__22627) {
    var opts__5252__auto__ = cljs.core.first(arglist__22627);
    var children__5253__auto__ = cljs.core.rest(arglist__22627);
    return map__delegate(opts__5252__auto__, children__5253__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var mark = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__22628) {
    var opts__5252__auto__ = cljs.core.first(arglist__22628);
    var children__5253__auto__ = cljs.core.rest(arglist__22628);
    return mark__delegate(opts__5252__auto__, children__5253__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var menu = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__22629) {
    var opts__5252__auto__ = cljs.core.first(arglist__22629);
    var children__5253__auto__ = cljs.core.rest(arglist__22629);
    return menu__delegate(opts__5252__auto__, children__5253__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var menuitem = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__22630) {
    var opts__5252__auto__ = cljs.core.first(arglist__22630);
    var children__5253__auto__ = cljs.core.rest(arglist__22630);
    return menuitem__delegate(opts__5252__auto__, children__5253__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var meta = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__22631) {
    var opts__5252__auto__ = cljs.core.first(arglist__22631);
    var children__5253__auto__ = cljs.core.rest(arglist__22631);
    return meta__delegate(opts__5252__auto__, children__5253__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var meter = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__22632) {
    var opts__5252__auto__ = cljs.core.first(arglist__22632);
    var children__5253__auto__ = cljs.core.rest(arglist__22632);
    return meter__delegate(opts__5252__auto__, children__5253__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var nav = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__22633) {
    var opts__5252__auto__ = cljs.core.first(arglist__22633);
    var children__5253__auto__ = cljs.core.rest(arglist__22633);
    return nav__delegate(opts__5252__auto__, children__5253__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var noscript = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__22634) {
    var opts__5252__auto__ = cljs.core.first(arglist__22634);
    var children__5253__auto__ = cljs.core.rest(arglist__22634);
    return noscript__delegate(opts__5252__auto__, children__5253__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var object = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__22635) {
    var opts__5252__auto__ = cljs.core.first(arglist__22635);
    var children__5253__auto__ = cljs.core.rest(arglist__22635);
    return object__delegate(opts__5252__auto__, children__5253__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var ol = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__22636) {
    var opts__5252__auto__ = cljs.core.first(arglist__22636);
    var children__5253__auto__ = cljs.core.rest(arglist__22636);
    return ol__delegate(opts__5252__auto__, children__5253__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var optgroup = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__22637) {
    var opts__5252__auto__ = cljs.core.first(arglist__22637);
    var children__5253__auto__ = cljs.core.rest(arglist__22637);
    return optgroup__delegate(opts__5252__auto__, children__5253__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var output = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__22638) {
    var opts__5252__auto__ = cljs.core.first(arglist__22638);
    var children__5253__auto__ = cljs.core.rest(arglist__22638);
    return output__delegate(opts__5252__auto__, children__5253__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var p = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__22639) {
    var opts__5252__auto__ = cljs.core.first(arglist__22639);
    var children__5253__auto__ = cljs.core.rest(arglist__22639);
    return p__delegate(opts__5252__auto__, children__5253__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var param = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__22640) {
    var opts__5252__auto__ = cljs.core.first(arglist__22640);
    var children__5253__auto__ = cljs.core.rest(arglist__22640);
    return param__delegate(opts__5252__auto__, children__5253__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var pre = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__22641) {
    var opts__5252__auto__ = cljs.core.first(arglist__22641);
    var children__5253__auto__ = cljs.core.rest(arglist__22641);
    return pre__delegate(opts__5252__auto__, children__5253__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var progress = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__22642) {
    var opts__5252__auto__ = cljs.core.first(arglist__22642);
    var children__5253__auto__ = cljs.core.rest(arglist__22642);
    return progress__delegate(opts__5252__auto__, children__5253__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var q = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__22643) {
    var opts__5252__auto__ = cljs.core.first(arglist__22643);
    var children__5253__auto__ = cljs.core.rest(arglist__22643);
    return q__delegate(opts__5252__auto__, children__5253__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var rp = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__22644) {
    var opts__5252__auto__ = cljs.core.first(arglist__22644);
    var children__5253__auto__ = cljs.core.rest(arglist__22644);
    return rp__delegate(opts__5252__auto__, children__5253__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var rt = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__22645) {
    var opts__5252__auto__ = cljs.core.first(arglist__22645);
    var children__5253__auto__ = cljs.core.rest(arglist__22645);
    return rt__delegate(opts__5252__auto__, children__5253__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var ruby = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__22646) {
    var opts__5252__auto__ = cljs.core.first(arglist__22646);
    var children__5253__auto__ = cljs.core.rest(arglist__22646);
    return ruby__delegate(opts__5252__auto__, children__5253__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var s = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__22647) {
    var opts__5252__auto__ = cljs.core.first(arglist__22647);
    var children__5253__auto__ = cljs.core.rest(arglist__22647);
    return s__delegate(opts__5252__auto__, children__5253__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var samp = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__22648) {
    var opts__5252__auto__ = cljs.core.first(arglist__22648);
    var children__5253__auto__ = cljs.core.rest(arglist__22648);
    return samp__delegate(opts__5252__auto__, children__5253__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var script = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__22649) {
    var opts__5252__auto__ = cljs.core.first(arglist__22649);
    var children__5253__auto__ = cljs.core.rest(arglist__22649);
    return script__delegate(opts__5252__auto__, children__5253__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var section = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__22650) {
    var opts__5252__auto__ = cljs.core.first(arglist__22650);
    var children__5253__auto__ = cljs.core.rest(arglist__22650);
    return section__delegate(opts__5252__auto__, children__5253__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var select = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__22651) {
    var opts__5252__auto__ = cljs.core.first(arglist__22651);
    var children__5253__auto__ = cljs.core.rest(arglist__22651);
    return select__delegate(opts__5252__auto__, children__5253__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var small = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__22652) {
    var opts__5252__auto__ = cljs.core.first(arglist__22652);
    var children__5253__auto__ = cljs.core.rest(arglist__22652);
    return small__delegate(opts__5252__auto__, children__5253__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var source = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__22653) {
    var opts__5252__auto__ = cljs.core.first(arglist__22653);
    var children__5253__auto__ = cljs.core.rest(arglist__22653);
    return source__delegate(opts__5252__auto__, children__5253__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var span = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__22654) {
    var opts__5252__auto__ = cljs.core.first(arglist__22654);
    var children__5253__auto__ = cljs.core.rest(arglist__22654);
    return span__delegate(opts__5252__auto__, children__5253__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var strong = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__22655) {
    var opts__5252__auto__ = cljs.core.first(arglist__22655);
    var children__5253__auto__ = cljs.core.rest(arglist__22655);
    return strong__delegate(opts__5252__auto__, children__5253__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var style = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__22656) {
    var opts__5252__auto__ = cljs.core.first(arglist__22656);
    var children__5253__auto__ = cljs.core.rest(arglist__22656);
    return style__delegate(opts__5252__auto__, children__5253__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var sub = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__22657) {
    var opts__5252__auto__ = cljs.core.first(arglist__22657);
    var children__5253__auto__ = cljs.core.rest(arglist__22657);
    return sub__delegate(opts__5252__auto__, children__5253__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var summary = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__22658) {
    var opts__5252__auto__ = cljs.core.first(arglist__22658);
    var children__5253__auto__ = cljs.core.rest(arglist__22658);
    return summary__delegate(opts__5252__auto__, children__5253__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var sup = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__22659) {
    var opts__5252__auto__ = cljs.core.first(arglist__22659);
    var children__5253__auto__ = cljs.core.rest(arglist__22659);
    return sup__delegate(opts__5252__auto__, children__5253__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var table = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__22660) {
    var opts__5252__auto__ = cljs.core.first(arglist__22660);
    var children__5253__auto__ = cljs.core.rest(arglist__22660);
    return table__delegate(opts__5252__auto__, children__5253__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var tbody = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__22661) {
    var opts__5252__auto__ = cljs.core.first(arglist__22661);
    var children__5253__auto__ = cljs.core.rest(arglist__22661);
    return tbody__delegate(opts__5252__auto__, children__5253__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var td = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__22662) {
    var opts__5252__auto__ = cljs.core.first(arglist__22662);
    var children__5253__auto__ = cljs.core.rest(arglist__22662);
    return td__delegate(opts__5252__auto__, children__5253__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var tfoot = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__22663) {
    var opts__5252__auto__ = cljs.core.first(arglist__22663);
    var children__5253__auto__ = cljs.core.rest(arglist__22663);
    return tfoot__delegate(opts__5252__auto__, children__5253__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var th = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__22664) {
    var opts__5252__auto__ = cljs.core.first(arglist__22664);
    var children__5253__auto__ = cljs.core.rest(arglist__22664);
    return th__delegate(opts__5252__auto__, children__5253__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var thead = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__22665) {
    var opts__5252__auto__ = cljs.core.first(arglist__22665);
    var children__5253__auto__ = cljs.core.rest(arglist__22665);
    return thead__delegate(opts__5252__auto__, children__5253__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var time = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__22666) {
    var opts__5252__auto__ = cljs.core.first(arglist__22666);
    var children__5253__auto__ = cljs.core.rest(arglist__22666);
    return time__delegate(opts__5252__auto__, children__5253__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var title = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__22667) {
    var opts__5252__auto__ = cljs.core.first(arglist__22667);
    var children__5253__auto__ = cljs.core.rest(arglist__22667);
    return title__delegate(opts__5252__auto__, children__5253__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var tr = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__22668) {
    var opts__5252__auto__ = cljs.core.first(arglist__22668);
    var children__5253__auto__ = cljs.core.rest(arglist__22668);
    return tr__delegate(opts__5252__auto__, children__5253__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var track = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__22669) {
    var opts__5252__auto__ = cljs.core.first(arglist__22669);
    var children__5253__auto__ = cljs.core.rest(arglist__22669);
    return track__delegate(opts__5252__auto__, children__5253__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var u = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__22670) {
    var opts__5252__auto__ = cljs.core.first(arglist__22670);
    var children__5253__auto__ = cljs.core.rest(arglist__22670);
    return u__delegate(opts__5252__auto__, children__5253__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var ul = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__22671) {
    var opts__5252__auto__ = cljs.core.first(arglist__22671);
    var children__5253__auto__ = cljs.core.rest(arglist__22671);
    return ul__delegate(opts__5252__auto__, children__5253__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var var$ = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__22672) {
    var opts__5252__auto__ = cljs.core.first(arglist__22672);
    var children__5253__auto__ = cljs.core.rest(arglist__22672);
    return var$__delegate(opts__5252__auto__, children__5253__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var video = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__22673) {
    var opts__5252__auto__ = cljs.core.first(arglist__22673);
    var children__5253__auto__ = cljs.core.rest(arglist__22673);
    return video__delegate(opts__5252__auto__, children__5253__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var wbr = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__22674) {
    var opts__5252__auto__ = cljs.core.first(arglist__22674);
    var children__5253__auto__ = cljs.core.rest(arglist__22674);
    return wbr__delegate(opts__5252__auto__, children__5253__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var circle = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__22675) {
    var opts__5252__auto__ = cljs.core.first(arglist__22675);
    var children__5253__auto__ = cljs.core.rest(arglist__22675);
    return circle__delegate(opts__5252__auto__, children__5253__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var ellipse = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__22676) {
    var opts__5252__auto__ = cljs.core.first(arglist__22676);
    var children__5253__auto__ = cljs.core.rest(arglist__22676);
    return ellipse__delegate(opts__5252__auto__, children__5253__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var g = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__22677) {
    var opts__5252__auto__ = cljs.core.first(arglist__22677);
    var children__5253__auto__ = cljs.core.rest(arglist__22677);
    return g__delegate(opts__5252__auto__, children__5253__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var line = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__22678) {
    var opts__5252__auto__ = cljs.core.first(arglist__22678);
    var children__5253__auto__ = cljs.core.rest(arglist__22678);
    return line__delegate(opts__5252__auto__, children__5253__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var path = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__22679) {
    var opts__5252__auto__ = cljs.core.first(arglist__22679);
    var children__5253__auto__ = cljs.core.rest(arglist__22679);
    return path__delegate(opts__5252__auto__, children__5253__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var polyline = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__22680) {
    var opts__5252__auto__ = cljs.core.first(arglist__22680);
    var children__5253__auto__ = cljs.core.rest(arglist__22680);
    return polyline__delegate(opts__5252__auto__, children__5253__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var rect = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__22681) {
    var opts__5252__auto__ = cljs.core.first(arglist__22681);
    var children__5253__auto__ = cljs.core.rest(arglist__22681);
    return rect__delegate(opts__5252__auto__, children__5253__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var svg = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__22682) {
    var opts__5252__auto__ = cljs.core.first(arglist__22682);
    var children__5253__auto__ = cljs.core.rest(arglist__22682);
    return svg__delegate(opts__5252__auto__, children__5253__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var text = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__22683) {
    var opts__5252__auto__ = cljs.core.first(arglist__22683);
    var children__5253__auto__ = cljs.core.rest(arglist__22683);
    return text__delegate(opts__5252__auto__, children__5253__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var defs = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__22684) {
    var opts__5252__auto__ = cljs.core.first(arglist__22684);
    var children__5253__auto__ = cljs.core.rest(arglist__22684);
    return defs__delegate(opts__5252__auto__, children__5253__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var linearGradient = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__22685) {
    var opts__5252__auto__ = cljs.core.first(arglist__22685);
    var children__5253__auto__ = cljs.core.rest(arglist__22685);
    return linearGradient__delegate(opts__5252__auto__, children__5253__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var polygon = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__22686) {
    var opts__5252__auto__ = cljs.core.first(arglist__22686);
    var children__5253__auto__ = cljs.core.rest(arglist__22686);
    return polygon__delegate(opts__5252__auto__, children__5253__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var radialGradient = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__22687) {
    var opts__5252__auto__ = cljs.core.first(arglist__22687);
    var children__5253__auto__ = cljs.core.rest(arglist__22687);
    return radialGradient__delegate(opts__5252__auto__, children__5253__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var stop = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__22688) {
    var opts__5252__auto__ = cljs.core.first(arglist__22688);
    var children__5253__auto__ = cljs.core.rest(arglist__22688);
    return stop__delegate(opts__5252__auto__, children__5253__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__5252__auto__, children__5253__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5252__auto__, children__5253__auto__)));
  };
  var tspan = function(opts__5252__auto__, var_args) {
    var children__5253__auto__ = null;
    if (arguments.length > 1) {
      children__5253__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__5252__auto__, children__5253__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__22689) {
    var opts__5252__auto__ = cljs.core.first(arglist__22689);
    var children__5253__auto__ = cljs.core.rest(arglist__22689);
    return tspan__delegate(opts__5252__auto__, children__5253__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj25890 = {};
  return obj25890;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.display_name[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.display_name["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj25892 = {};
  return obj25892;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.init_state[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.init_state["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj25894 = {};
  return obj25894;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.should_update[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.should_update["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj25896 = {};
  return obj25896;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.will_mount[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.will_mount["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj25898 = {};
  return obj25898;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.did_mount[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.did_mount["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj25900 = {};
  return obj25900;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.will_unmount[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.will_unmount["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj25902 = {};
  return obj25902;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.will_update[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.will_update["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj25904 = {};
  return obj25904;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.did_update[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.did_update["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj25906 = {};
  return obj25906;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.will_receive_props[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.will_receive_props["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj25908 = {};
  return obj25908;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.render[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.render["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj25910 = {};
  return obj25910;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core.render_state[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core.render_state["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj25912 = {};
  return obj25912;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj25914 = {};
  return obj25914;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._get_state[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._get_state["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._get_state[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._get_state["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj25916 = {};
  return obj25916;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._get_render_state[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._get_render_state["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._get_render_state[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._get_render_state["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj25918 = {};
  return obj25918;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj25920 = {};
  return obj25920;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core._get_queue[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._get_queue["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj25922 = {};
  return obj25922;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = om.core._value[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._value["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj25924 = {};
  return obj25924;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3616__auto__ = cursor;
    if (and__3616__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4272__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3628__auto__ = om.core._path[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._path["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3616__auto__ = cursor;
    if (and__3616__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4272__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3628__auto__ = om.core._state[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._state["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj25926 = {};
  return obj25926;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3616__auto__ = value;
      if (and__3616__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4272__auto__ = value == null ? null : value;
      return function() {
        var or__3628__auto__ = om.core._to_cursor[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._to_cursor["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3616__auto__ = value;
      if (and__3616__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4272__auto__ = value == null ? null : value;
      return function() {
        var or__3628__auto__ = om.core._to_cursor[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = om.core._to_cursor["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj25928 = {};
  return obj25928;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3616__auto__ = cursor;
    if (and__3616__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4272__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3628__auto__ = om.core._derive[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._derive["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj25930 = {};
  return obj25930;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3616__auto__ = cursor;
    if (and__3616__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4272__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3628__auto__ = om.core._transact_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj25932 = {};
  return obj25932;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = om.core._listen_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = om.core._notify_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__25934 = state;
    if (G__25934) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25934.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__25934.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__25934);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__25934);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__25936 = x;
  if (G__25936) {
    var bit__4309__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = bit__4309__auto__;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return G__25936.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__25936.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__25936);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__25936);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_25938 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25938;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__25940 = state;
    G__25940["__om_prev_state"] = state["__om_state"];
    G__25940["__om_state"] = pending_state;
    G__25940["__om_pending_state"] = null;
    return G__25940;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3628__auto__ = props;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3628__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__25941 = c;
    if (G__25941) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25941.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__25941.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__25941);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__25941);
    }
  }()) {
    var state_25968 = this$.state;
    var _STAR_read_enabled_STAR_25942_25969 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3628__auto__ = state_25968["__om_prev_state"];
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return state_25968["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25942_25969;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__25943 = c;
    if (G__25943) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25943.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__25943.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__25943);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__25943);
    }
  }()) {
    var _STAR_read_enabled_STAR_25944 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25944;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__25945 = c;
    if (G__25945) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25945.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__25945.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__25945);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__25945);
    }
  }()) {
    var _STAR_read_enabled_STAR_25946 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25946;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_25947 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__25948 = c;
      if (G__25948) {
        var bit__4309__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3628__auto__ = bit__4309__auto__;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return G__25948.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__25948.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__25948);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__25948);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25947;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_25949 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__25950 = c;
      if (G__25950) {
        var bit__4309__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3628__auto__ = bit__4309__auto__;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return G__25950.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__25950.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__25950);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__25950);
      }
    }()) {
      var _STAR_parent_STAR_25951 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_25952 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_25953 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_25953;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_25952;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_25951;
      }
    } else {
      if (function() {
        var G__25954 = c;
        if (G__25954) {
          var bit__4309__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3628__auto__ = bit__4309__auto__;
            if (cljs.core.truth_(or__3628__auto__)) {
              return or__3628__auto__;
            } else {
              return G__25954.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__25954.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__25954);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__25954);
        }
      }()) {
        var _STAR_parent_STAR_25955 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_25956 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_25957 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_25957;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_25956;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_25955;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25949;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_25970 = om.core.children.call(null, this$);
  if (function() {
    var G__25958 = c_25970;
    if (G__25958) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25958.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__25958.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__25958);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__25958);
    }
  }()) {
    var state_25971 = this$.state;
    var _STAR_read_enabled_STAR_25959_25972 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_25970, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25959_25972;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3628__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__25960 = c;
    if (G__25960) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25960.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__25960.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__25960);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__25960);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_25961 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25961;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3628__auto__ = id;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__25962 = c;
    if (G__25962) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25962.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__25962.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__25962);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__25962);
    }
  }()) {
    var _STAR_read_enabled_STAR_25963 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25963;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__25964 = c;
    if (G__25964) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25964.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__25964.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__25964);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__25964);
    }
  }()) {
    var _STAR_read_enabled_STAR_25965 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25965;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_25973 = om.core.children.call(null, this$);
  if (function() {
    var G__25966 = c_25973;
    if (G__25966) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__25966.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__25966.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__25966);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__25966);
    }
  }()) {
    var _STAR_read_enabled_STAR_25967_25974 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_25973);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25967_25974;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x25978 = obj;
  x25978.om$core$IGetState$ = true;
  x25978.om$core$IGetState$_get_state$arity$1 = function(x25978) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3628__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x25978);
  x25978.om$core$IGetState$_get_state$arity$2 = function(x25978) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x25978);
  x25978.om$core$IGetRenderState$ = true;
  x25978.om$core$IGetRenderState$_get_render_state$arity$1 = function(x25978) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x25978);
  x25978.om$core$IGetRenderState$_get_render_state$arity$2 = function(x25978) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x25978);
  x25978.om$core$ISetState$ = true;
  x25978.om$core$ISetState$_set_state_BANG_$arity$3 = function(x25978) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_25979 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3616__auto__ = !(app_state == null);
          if (and__3616__auto__) {
            return render;
          } else {
            return and__3616__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25979;
      }
    };
  }(x25978);
  x25978.om$core$ISetState$_set_state_BANG_$arity$4 = function(x25978) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_25980 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3616__auto__ = !(app_state == null);
          if (and__3616__auto__) {
            return render;
          } else {
            return and__3616__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_25980;
      }
    };
  }(x25978);
  return x25978;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__25982) {
          var vec__25983 = p__25982;
          var k = cljs.core.nth.call(null, vec__25983, 0, null);
          var v = cljs.core.nth.call(null, vec__25983, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__25984 = null;
  var G__25984__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__25984__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__25984 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25984__2.call(this, self__, k);
      case 3:
        return G__25984__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25984.cljs$core$IFn$_invoke$arity$2 = G__25984__2;
  G__25984.cljs$core$IFn$_invoke$arity$3 = G__25984__3;
  return G__25984;
}();
om.core.MapCursor.prototype.apply = function(self__, args25981) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args25981)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__25986 = null;
  var G__25986__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__25986__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__25986 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25986__2.call(this, self__, k);
      case 3:
        return G__25986__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25986.cljs$core$IFn$_invoke$arity$2 = G__25986__2;
  G__25986.cljs$core$IFn$_invoke$arity$3 = G__25986__3;
  return G__25986;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args25985) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args25985)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x25988 = cljs.core.clone.call(null, val);
  x25988.cljs$core$IEquiv$ = true;
  x25988.cljs$core$IEquiv$_equiv$arity$2 = function(x25988) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
      }
    };
  }(x25988);
  x25988.om$core$ITransact$ = true;
  x25988.om$core$ITransact$_transact_BANG_$arity$4 = function(x25988) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x25988);
  x25988.om$core$ICursor$ = true;
  x25988.om$core$ICursor$_path$arity$1 = function(x25988) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x25988);
  x25988.om$core$ICursor$_state$arity$1 = function(x25988) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x25988);
  x25988.cljs$core$IDeref$ = true;
  x25988.cljs$core$IDeref$_deref$arity$1 = function(x25988) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
      }
    };
  }(x25988);
  return x25988;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__25991 = val;
        if (G__25991) {
          var bit__4309__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3628__auto__ = bit__4309__auto__;
            if (cljs.core.truth_(or__3628__auto__)) {
              return or__3628__auto__;
            } else {
              return G__25991.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__25991.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__25991);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__25991);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__25992 = val;
              if (G__25992) {
                var bit__4309__auto__ = G__25992.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4309__auto__ || G__25992.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__25992.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__25992);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__25992);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__25997 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__25998 = null;
  var count__25999 = 0;
  var i__26000 = 0;
  while (true) {
    if (i__26000 < count__25999) {
      var f = cljs.core._nth.call(null, chunk__25998, i__26000);
      f.call(null);
      var G__26001 = seq__25997;
      var G__26002 = chunk__25998;
      var G__26003 = count__25999;
      var G__26004 = i__26000 + 1;
      seq__25997 = G__26001;
      chunk__25998 = G__26002;
      count__25999 = G__26003;
      i__26000 = G__26004;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__25997);
      if (temp__4126__auto__) {
        var seq__25997__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__25997__$1)) {
          var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__25997__$1);
          var G__26005 = cljs.core.chunk_rest.call(null, seq__25997__$1);
          var G__26006 = c__4415__auto__;
          var G__26007 = cljs.core.count.call(null, c__4415__auto__);
          var G__26008 = 0;
          seq__25997 = G__26005;
          chunk__25998 = G__26006;
          count__25999 = G__26007;
          i__26000 = G__26008;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__25997__$1);
          f.call(null);
          var G__26009 = cljs.core.next.call(null, seq__25997__$1);
          var G__26010 = null;
          var G__26011 = 0;
          var G__26012 = 0;
          seq__25997 = G__26009;
          chunk__25998 = G__26010;
          count__25999 = G__26011;
          i__26000 = G__26012;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3628__auto__ = function() {
      var G__26017 = x;
      if (G__26017) {
        var bit__4309__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3628__auto__ = bit__4309__auto__;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return G__26017.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__26017.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__26017);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__26017);
      }
    }();
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      var G__26018 = x;
      if (G__26018) {
        var bit__4309__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3628__auto____$1 = bit__4309__auto__;
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            return G__26018.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__26018.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__26018);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__26018);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3628__auto__ = descriptor;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_26023 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_26023;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__26024 = m;
      var map__26024__$1 = cljs.core.seq_QMARK_.call(null, map__26024) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26024) : map__26024;
      var opts = cljs.core.get.call(null, map__26024__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__26024__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__26024__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__26024__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3628__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__26024, map__26024__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_26025 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_26025;
          }
        };
      }(map__26024, map__26024__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__26024, map__26024__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_26026 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_26026;
          }
        };
      }(map__26024, map__26024__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_26028 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_26028;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__26037 = state;
    if (G__26037) {
      var bit__4309__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = bit__4309__auto__;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return G__26037.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__26037.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__26037);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__26037);
    }
  }()) {
  } else {
    var listeners_26045 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_26046 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x26038_26047 = state;
    x26038_26047.om$core$IRenderQueue$ = true;
    x26038_26047.om$core$IRenderQueue$_get_queue$arity$1 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_26046);
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
    x26038_26047.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_26046), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_26046, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
    x26038_26047.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_26046, cljs.core.empty);
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
    x26038_26047.om$core$INotify$ = true;
    x26038_26047.om$core$INotify$_listen_BANG_$arity$3 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_26045, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
    x26038_26047.om$core$INotify$_unlisten_BANG_$arity$2 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_26045, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
    x26038_26047.om$core$INotify$_notify_BANG_$arity$3 = function(x26038_26047, listeners_26045, render_queue_26046) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__26039_26048 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_26045));
        var chunk__26040_26049 = null;
        var count__26041_26050 = 0;
        var i__26042_26051 = 0;
        while (true) {
          if (i__26042_26051 < count__26041_26050) {
            var vec__26043_26052 = cljs.core._nth.call(null, chunk__26040_26049, i__26042_26051);
            var __26053 = cljs.core.nth.call(null, vec__26043_26052, 0, null);
            var f_26054 = cljs.core.nth.call(null, vec__26043_26052, 1, null);
            f_26054.call(null, tx_data, root_cursor);
            var G__26055 = seq__26039_26048;
            var G__26056 = chunk__26040_26049;
            var G__26057 = count__26041_26050;
            var G__26058 = i__26042_26051 + 1;
            seq__26039_26048 = G__26055;
            chunk__26040_26049 = G__26056;
            count__26041_26050 = G__26057;
            i__26042_26051 = G__26058;
            continue;
          } else {
            var temp__4126__auto___26059 = cljs.core.seq.call(null, seq__26039_26048);
            if (temp__4126__auto___26059) {
              var seq__26039_26060__$1 = temp__4126__auto___26059;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__26039_26060__$1)) {
                var c__4415__auto___26061 = cljs.core.chunk_first.call(null, seq__26039_26060__$1);
                var G__26062 = cljs.core.chunk_rest.call(null, seq__26039_26060__$1);
                var G__26063 = c__4415__auto___26061;
                var G__26064 = cljs.core.count.call(null, c__4415__auto___26061);
                var G__26065 = 0;
                seq__26039_26048 = G__26062;
                chunk__26040_26049 = G__26063;
                count__26041_26050 = G__26064;
                i__26042_26051 = G__26065;
                continue;
              } else {
                var vec__26044_26066 = cljs.core.first.call(null, seq__26039_26060__$1);
                var __26067 = cljs.core.nth.call(null, vec__26044_26066, 0, null);
                var f_26068 = cljs.core.nth.call(null, vec__26044_26066, 1, null);
                f_26068.call(null, tx_data, root_cursor);
                var G__26069 = cljs.core.next.call(null, seq__26039_26060__$1);
                var G__26070 = null;
                var G__26071 = 0;
                var G__26072 = 0;
                seq__26039_26048 = G__26069;
                chunk__26040_26049 = G__26070;
                count__26041_26050 = G__26071;
                i__26042_26051 = G__26072;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x26038_26047, listeners_26045, render_queue_26046);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__26073) {
  var map__26088 = p__26073;
  var map__26088__$1 = cljs.core.seq_QMARK_.call(null, map__26088) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26088) : map__26088;
  var options = map__26088__$1;
  var instrument = cljs.core.get.call(null, map__26088__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__26088__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__26088__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__26088__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__26102 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__26102, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__26102, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__26089 = value;
    if (G__26089) {
      var bit__4309__auto__ = G__26089.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4309__auto__ || G__26089.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__26089.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__26089);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__26089);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__26088, map__26088__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_26096 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_26097 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_26097;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_26096;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__26098_26103 = cljs.core.seq.call(null, queue);
        var chunk__26099_26104 = null;
        var count__26100_26105 = 0;
        var i__26101_26106 = 0;
        while (true) {
          if (i__26101_26106 < count__26100_26105) {
            var c_26107 = cljs.core._nth.call(null, chunk__26099_26104, i__26101_26106);
            if (cljs.core.truth_(c_26107.isMounted())) {
              c_26107.forceUpdate();
            } else {
            }
            var G__26108 = seq__26098_26103;
            var G__26109 = chunk__26099_26104;
            var G__26110 = count__26100_26105;
            var G__26111 = i__26101_26106 + 1;
            seq__26098_26103 = G__26108;
            chunk__26099_26104 = G__26109;
            count__26100_26105 = G__26110;
            i__26101_26106 = G__26111;
            continue;
          } else {
            var temp__4126__auto___26112 = cljs.core.seq.call(null, seq__26098_26103);
            if (temp__4126__auto___26112) {
              var seq__26098_26113__$1 = temp__4126__auto___26112;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__26098_26113__$1)) {
                var c__4415__auto___26114 = cljs.core.chunk_first.call(null, seq__26098_26113__$1);
                var G__26115 = cljs.core.chunk_rest.call(null, seq__26098_26113__$1);
                var G__26116 = c__4415__auto___26114;
                var G__26117 = cljs.core.count.call(null, c__4415__auto___26114);
                var G__26118 = 0;
                seq__26098_26103 = G__26115;
                chunk__26099_26104 = G__26116;
                count__26100_26105 = G__26117;
                i__26101_26106 = G__26118;
                continue;
              } else {
                var c_26119 = cljs.core.first.call(null, seq__26098_26113__$1);
                if (cljs.core.truth_(c_26119.isMounted())) {
                  c_26119.forceUpdate();
                } else {
                }
                var G__26120 = cljs.core.next.call(null, seq__26098_26113__$1);
                var G__26121 = null;
                var G__26122 = 0;
                var G__26123 = 0;
                seq__26098_26103 = G__26120;
                chunk__26099_26104 = G__26121;
                count__26100_26105 = G__26122;
                i__26101_26106 = G__26123;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__26088, map__26088__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__26088, map__26088__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__26088, map__26088__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__26088, map__26088__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__26088, map__26088__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__27644 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__27645 = cljs.core.next.call(null, coll__$1);
        sb = G__27644;
        coll__$1 = G__27645;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__27646 = sb;
        var G__27647 = coll__$2;
        sb = G__27646;
        coll__$1 = G__27647;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__27648 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__27648;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__27652 = cljs.core._EQ_;
    var expr__27653 = limit;
    if (cljs.core.truth_(pred__27652.call(null, 1, expr__27653))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__27652.call(null, 2, expr__27653))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__27655 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__27656 = limit__$1 - 1;
            var G__27657 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__27655;
            limit__$1 = G__27656;
            parts = G__27657;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__27658 = index - 1;
        index = G__27658;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___27659 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___27659)) {
        var replacement_27660 = temp__4124__auto___27659;
        buffer.append([cljs.core.str(replacement_27660)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__27661 = index + 1;
      index = G__27661;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj28352 = {};
  return obj28352;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3616__auto__ = reader;
    if (and__3616__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4272__auto__ = reader == null ? null : reader;
    return function() {
      var or__3628__auto__ = cljs.reader.read_char[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.reader.read_char["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3616__auto__ = reader;
    if (and__3616__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4272__auto__ = reader == null ? null : reader;
    return function() {
      var or__3628__auto__ = cljs.reader.unread[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.reader.unread["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3628__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__28353) {
    var rdr = cljs.core.first(arglist__28353);
    var msg = cljs.core.rest(arglist__28353);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3616__auto__ = !(ch === "#");
  if (and__3616__auto__) {
    var and__3616__auto____$1 = !(ch === "'");
    if (and__3616__auto____$1) {
      var and__3616__auto____$2 = !(ch === ":");
      if (and__3616__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3616__auto____$2;
      }
    } else {
      return and__3616__auto____$1;
    }
  } else {
    return and__3616__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__28354 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__28355 = cljs.reader.read_char.call(null, rdr);
      sb = G__28354;
      ch = G__28355;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__28356 = cljs.reader.read_char.call(null, rdr);
      ch = G__28356;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__28357 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__28357;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__28358 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__28358;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = ch == null;
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3628__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__28359 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__28360 = cljs.reader.read_char.call(null, reader);
      buffer = G__28359;
      ch = G__28360;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__28361 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__28362 = cljs.reader.read_char.call(null, reader);
        buffer = G__28361;
        ch = G__28362;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__28363 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__28364 = cljs.reader.read_char.call(null, reader);
          buffer = G__28363;
          ch = G__28364;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__28369 = function() {
            var G__28367 = buffer;
            G__28367.append(nch);
            return G__28367;
          }();
          var G__28370 = cljs.reader.read_char.call(null, reader);
          buffer = G__28369;
          ch = G__28370;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__28371 = function() {
            var G__28368 = buffer;
            G__28368.append(ch);
            return G__28368;
          }();
          var G__28372 = cljs.reader.read_char.call(null, reader);
          buffer = G__28371;
          ch = G__28372;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__3616__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__28374 = o;
    if (G__28374) {
      var bit__4309__auto__ = G__28374.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4309__auto__ || G__28374.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__28374.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__28374);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__28374);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__28375 = reader;
        var G__28376 = eof_is_error;
        var G__28377 = sentinel;
        var G__28378 = is_recursive;
        reader = G__28375;
        eof_is_error = G__28376;
        sentinel = G__28377;
        is_recursive = G__28378;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__28379 = cljs.reader.read_comment.call(null, reader, ch);
          var G__28380 = eof_is_error;
          var G__28381 = sentinel;
          var G__28382 = is_recursive;
          reader = G__28379;
          eof_is_error = G__28380;
          sentinel = G__28381;
          is_recursive = G__28382;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__28383 = reader;
            var G__28384 = eof_is_error;
            var G__28385 = sentinel;
            var G__28386 = is_recursive;
            reader = G__28383;
            eof_is_error = G__28384;
            sentinel = G__28385;
            is_recursive = G__28386;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__28387 = b.append("0");
          b = G__28387;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__28389 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__28389, 0, null);
  var years = cljs.core.nth.call(null, vec__28389, 1, null);
  var months = cljs.core.nth.call(null, vec__28389, 2, null);
  var days = cljs.core.nth.call(null, vec__28389, 3, null);
  var hours = cljs.core.nth.call(null, vec__28389, 4, null);
  var minutes = cljs.core.nth.call(null, vec__28389, 5, null);
  var seconds = cljs.core.nth.call(null, vec__28389, 6, null);
  var fraction = cljs.core.nth.call(null, vec__28389, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__28389, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__28389, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__28389, 10, null);
  var v = vec__28389;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3628__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__28391 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__28391, 0, null);
    var months = cljs.core.nth.call(null, vec__28391, 1, null);
    var days = cljs.core.nth.call(null, vec__28391, 2, null);
    var hours = cljs.core.nth.call(null, vec__28391, 3, null);
    var minutes = cljs.core.nth.call(null, vec__28391, 4, null);
    var seconds = cljs.core.nth.call(null, vec__28391, 5, null);
    var ms = cljs.core.nth.call(null, vec__28391, 6, null);
    var offset = cljs.core.nth.call(null, vec__28391, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__28404_28416 = cljs.core.seq.call(null, form);
    var chunk__28405_28417 = null;
    var count__28406_28418 = 0;
    var i__28407_28419 = 0;
    while (true) {
      if (i__28407_28419 < count__28406_28418) {
        var x_28420 = cljs.core._nth.call(null, chunk__28405_28417, i__28407_28419);
        arr.push(x_28420);
        var G__28421 = seq__28404_28416;
        var G__28422 = chunk__28405_28417;
        var G__28423 = count__28406_28418;
        var G__28424 = i__28407_28419 + 1;
        seq__28404_28416 = G__28421;
        chunk__28405_28417 = G__28422;
        count__28406_28418 = G__28423;
        i__28407_28419 = G__28424;
        continue;
      } else {
        var temp__4126__auto___28425 = cljs.core.seq.call(null, seq__28404_28416);
        if (temp__4126__auto___28425) {
          var seq__28404_28426__$1 = temp__4126__auto___28425;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28404_28426__$1)) {
            var c__4415__auto___28427 = cljs.core.chunk_first.call(null, seq__28404_28426__$1);
            var G__28428 = cljs.core.chunk_rest.call(null, seq__28404_28426__$1);
            var G__28429 = c__4415__auto___28427;
            var G__28430 = cljs.core.count.call(null, c__4415__auto___28427);
            var G__28431 = 0;
            seq__28404_28416 = G__28428;
            chunk__28405_28417 = G__28429;
            count__28406_28418 = G__28430;
            i__28407_28419 = G__28431;
            continue;
          } else {
            var x_28432 = cljs.core.first.call(null, seq__28404_28426__$1);
            arr.push(x_28432);
            var G__28433 = cljs.core.next.call(null, seq__28404_28426__$1);
            var G__28434 = null;
            var G__28435 = 0;
            var G__28436 = 0;
            seq__28404_28416 = G__28433;
            chunk__28405_28417 = G__28434;
            count__28406_28418 = G__28435;
            i__28407_28419 = G__28436;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj28409 = {};
        return obj28409;
      }();
      var seq__28410_28437 = cljs.core.seq.call(null, form);
      var chunk__28411_28438 = null;
      var count__28412_28439 = 0;
      var i__28413_28440 = 0;
      while (true) {
        if (i__28413_28440 < count__28412_28439) {
          var vec__28414_28441 = cljs.core._nth.call(null, chunk__28411_28438, i__28413_28440);
          var k_28442 = cljs.core.nth.call(null, vec__28414_28441, 0, null);
          var v_28443 = cljs.core.nth.call(null, vec__28414_28441, 1, null);
          obj[cljs.core.name.call(null, k_28442)] = v_28443;
          var G__28444 = seq__28410_28437;
          var G__28445 = chunk__28411_28438;
          var G__28446 = count__28412_28439;
          var G__28447 = i__28413_28440 + 1;
          seq__28410_28437 = G__28444;
          chunk__28411_28438 = G__28445;
          count__28412_28439 = G__28446;
          i__28413_28440 = G__28447;
          continue;
        } else {
          var temp__4126__auto___28448 = cljs.core.seq.call(null, seq__28410_28437);
          if (temp__4126__auto___28448) {
            var seq__28410_28449__$1 = temp__4126__auto___28448;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28410_28449__$1)) {
              var c__4415__auto___28450 = cljs.core.chunk_first.call(null, seq__28410_28449__$1);
              var G__28451 = cljs.core.chunk_rest.call(null, seq__28410_28449__$1);
              var G__28452 = c__4415__auto___28450;
              var G__28453 = cljs.core.count.call(null, c__4415__auto___28450);
              var G__28454 = 0;
              seq__28410_28437 = G__28451;
              chunk__28411_28438 = G__28452;
              count__28412_28439 = G__28453;
              i__28413_28440 = G__28454;
              continue;
            } else {
              var vec__28415_28455 = cljs.core.first.call(null, seq__28410_28449__$1);
              var k_28456 = cljs.core.nth.call(null, vec__28415_28455, 0, null);
              var v_28457 = cljs.core.nth.call(null, vec__28415_28455, 1, null);
              obj[cljs.core.name.call(null, k_28456)] = v_28457;
              var G__28458 = cljs.core.next.call(null, seq__28410_28449__$1);
              var G__28459 = null;
              var G__28460 = 0;
              var G__28461 = 0;
              seq__28410_28437 = G__28458;
              chunk__28411_28438 = G__28459;
              count__28412_28439 = G__28460;
              i__28413_28440 = G__28461;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("clui_om.utils");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.core");
goog.require("clojure.string");
goog.require("cljs.reader");
clui_om.utils.guid = function guid() {
  return 1E3 + goog.ui.IdGenerator.getInstance().getNextUniqueId();
};
clui_om.utils.with_id = function with_id(m) {
  return cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "id", "id", -1388402092), clui_om.utils.guid.call(null));
};
clui_om.utils.value_from_node = function value_from_node(owner, field) {
  var n = om.core.get_node.call(null, owner, field);
  var v = clojure.string.trim.call(null, n.value);
  if (cljs.core.empty_QMARK_.call(null, v)) {
    return null;
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, n], null);
  }
};
clui_om.utils.clear_nodes_BANG_ = function() {
  var clear_nodes_BANG___delegate = function(nodes) {
    var seq__21021 = cljs.core.seq.call(null, nodes);
    var chunk__21022 = null;
    var count__21023 = 0;
    var i__21024 = 0;
    while (true) {
      if (i__21024 < count__21023) {
        var n = cljs.core._nth.call(null, chunk__21022, i__21024);
        n.value = "";
        var G__21025 = seq__21021;
        var G__21026 = chunk__21022;
        var G__21027 = count__21023;
        var G__21028 = i__21024 + 1;
        seq__21021 = G__21025;
        chunk__21022 = G__21026;
        count__21023 = G__21027;
        i__21024 = G__21028;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__21021);
        if (temp__4126__auto__) {
          var seq__21021__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21021__$1)) {
            var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__21021__$1);
            var G__21029 = cljs.core.chunk_rest.call(null, seq__21021__$1);
            var G__21030 = c__4415__auto__;
            var G__21031 = cljs.core.count.call(null, c__4415__auto__);
            var G__21032 = 0;
            seq__21021 = G__21029;
            chunk__21022 = G__21030;
            count__21023 = G__21031;
            i__21024 = G__21032;
            continue;
          } else {
            var n = cljs.core.first.call(null, seq__21021__$1);
            n.value = "";
            var G__21033 = cljs.core.next.call(null, seq__21021__$1);
            var G__21034 = null;
            var G__21035 = 0;
            var G__21036 = 0;
            seq__21021 = G__21033;
            chunk__21022 = G__21034;
            count__21023 = G__21035;
            i__21024 = G__21036;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var clear_nodes_BANG_ = function(var_args) {
    var nodes = null;
    if (arguments.length > 0) {
      nodes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return clear_nodes_BANG___delegate.call(this, nodes);
  };
  clear_nodes_BANG_.cljs$lang$maxFixedArity = 0;
  clear_nodes_BANG_.cljs$lang$applyTo = function(arglist__21037) {
    var nodes = cljs.core.seq(arglist__21037);
    return clear_nodes_BANG___delegate(nodes);
  };
  clear_nodes_BANG_.cljs$core$IFn$_invoke$arity$variadic = clear_nodes_BANG___delegate;
  return clear_nodes_BANG_;
}();
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__27614_SHARP_) {
      return max === p1__27614_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__27615__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__27615 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27615__delegate.call(this, s1, s2, sets);
    };
    G__27615.cljs$lang$maxFixedArity = 2;
    G__27615.cljs$lang$applyTo = function(arglist__27616) {
      var s1 = cljs.core.first(arglist__27616);
      arglist__27616 = cljs.core.next(arglist__27616);
      var s2 = cljs.core.first(arglist__27616);
      var sets = cljs.core.rest(arglist__27616);
      return G__27615__delegate(s1, s2, sets);
    };
    G__27615.cljs$core$IFn$_invoke$arity$variadic = G__27615__delegate;
    return G__27615;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__27618 = s2;
        var G__27619 = s1;
        s1 = G__27618;
        s2 = G__27619;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__27620__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__27617_SHARP_) {
        return-cljs.core.count.call(null, p1__27617_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__27620 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27620__delegate.call(this, s1, s2, sets);
    };
    G__27620.cljs$lang$maxFixedArity = 2;
    G__27620.cljs$lang$applyTo = function(arglist__27621) {
      var s1 = cljs.core.first(arglist__27621);
      arglist__27621 = cljs.core.next(arglist__27621);
      var s2 = cljs.core.first(arglist__27621);
      var sets = cljs.core.rest(arglist__27621);
      return G__27620__delegate(s1, s2, sets);
    };
    G__27620.cljs$core$IFn$_invoke$arity$variadic = G__27620__delegate;
    return G__27620;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__27622__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__27622 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27622__delegate.call(this, s1, s2, sets);
    };
    G__27622.cljs$lang$maxFixedArity = 2;
    G__27622.cljs$lang$applyTo = function(arglist__27623) {
      var s1 = cljs.core.first(arglist__27623);
      arglist__27623 = cljs.core.next(arglist__27623);
      var s2 = cljs.core.first(arglist__27623);
      var sets = cljs.core.rest(arglist__27623);
      return G__27622__delegate(s1, s2, sets);
    };
    G__27622.cljs$core$IFn$_invoke$arity$variadic = G__27622__delegate;
    return G__27622;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__27624_SHARP_) {
    return cljs.core.select_keys.call(null, p1__27624_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__27627) {
    var vec__27628 = p__27627;
    var old = cljs.core.nth.call(null, vec__27628, 0, null);
    var new$ = cljs.core.nth.call(null, vec__27628, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__27629_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__27629_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__27632) {
    var vec__27633 = p__27632;
    var k = cljs.core.nth.call(null, vec__27633, 0, null);
    var v = cljs.core.nth.call(null, vec__27633, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__27640 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__27640, 0, null);
      var s = cljs.core.nth.call(null, vec__27640, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__27640, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__27640, r, s, idx) {
              return function(p1__27634_SHARP_, p2__27635_SHARP_) {
                return cljs.core.conj.call(null, p1__27634_SHARP_, cljs.core.merge.call(null, p2__27635_SHARP_, x));
              };
            }(found, ks, vec__27640, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__27640, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__27641 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__27641, 0, null);
    var s = cljs.core.nth.call(null, vec__27641, 1, null);
    var k = cljs.core.nth.call(null, vec__27641, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__27641, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__27641, r, s, k, idx) {
            return function(p1__27636_SHARP_, p2__27637_SHARP_) {
              return cljs.core.conj.call(null, p1__27636_SHARP_, cljs.core.merge.call(null, p2__27637_SHARP_, x));
            };
          }(found, vec__27641, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__27641, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__27642_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__27642_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__27643_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__27643_SHARP_);
  }, set2);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
sablono.util.ToString = function() {
  var obj27601 = {};
  return obj27601;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = sablono.util.to_str[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = sablono.util.to_str["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj27603 = {};
  return obj27603;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3616__auto__ = x;
    if (and__3616__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4272__auto__ = x == null ? null : x;
    return function() {
      var or__3628__auto__ = sablono.util.to_uri[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = sablono.util.to_uri["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__27604) {
    var xs = cljs.core.seq(arglist__27604);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camelcase_key = function camelcase_key(k) {
  if (cljs.core.truth_(k)) {
    var vec__27606 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__27606, 0, null);
    var words = cljs.core.nthnext.call(null, vec__27606, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  var dom_attrs = cljs.core.merge.call(null, cljs.core.zipmap.call(null, cljs.core.keys.call(null, attrs), cljs.core.map.call(null, sablono.util.camelcase_key, cljs.core.keys.call(null, attrs))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
  return clojure.set.rename_keys.call(null, attrs, dom_attrs);
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var temp__4124__auto__ = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var v = temp__4124__auto__;
      return m__$1;
    } else {
      return cljs.core.dissoc.call(null, m__$1, k);
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__27607_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__27607_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__27607_SHARP_], null);
      } else {
        if (cljs.core.vector_QMARK_.call(null, p1__27607_SHARP_)) {
          return p1__27607_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__27607_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__27608) {
    var maps = cljs.core.seq(arglist__27608);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.normalize_element = function normalize_element(p__27609) {
  var vec__27612 = p__27609;
  var tag = cljs.core.nth.call(null, vec__27612, 0, null);
  var content = cljs.core.nthnext.call(null, vec__27612, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__27613 = cljs.core.re_matches.call(null, sablono.util.re_tag, cljs.core.name.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__27613, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__27613, 1, null);
  var id = cljs.core.nth.call(null, vec__27613, 2, null);
  var class$ = cljs.core.nth.call(null, vec__27613, 3, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.split.call(null, class$, /\./) : null], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
};
sablono.util.react_fn = function react_fn(tag) {
  var dom_fn = sablono.util.react_symbol.call(null, tag);
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return dom_fn;
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return[cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return[cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return[cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj27597 = {};
  return obj27597;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input);
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea);
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Unsupported HTML tag: "), cljs.core.str(cljs.core.name.call(null, tag))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = clojure.string.join.call(null, " ", cljs.core.flatten.call(null, cljs.core.seq.call(null, attrs__$1.className)));
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, class$))) {
    attrs__$1.className = class$;
  } else {
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__27599 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__27599, 0, null);
  var attrs = cljs.core.nth.call(null, vec__27599, 1, null);
  var content = cljs.core.nth.call(null, vec__27599, 2, null);
  return sablono.interpreter.dom_fn.call(null, tag).call(null, sablono.interpreter.attributes.call(null, attrs), cljs.core.sequential_QMARK_.call(null, content) && typeof cljs.core.first.call(null, content) === "string" && cljs.core.empty_QMARK_.call(null, cljs.core.rest.call(null, content)) ? sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)) : cljs.core.truth_(content) ? sablono.interpreter.interpret.call(null, content) : null);
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__27590) {
    var vec__27591 = p__27590;
    var k = cljs.core.nth.call(null, vec__27591, 0, null);
    var v = cljs.core.nth.call(null, vec__27591, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__27594) {
    var vec__27595 = p__27594;
    var k = cljs.core.nth.call(null, vec__27595, 0, null);
    var v = cljs.core.nth.call(null, vec__27595, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__27499__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__27498 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__27498, 0, null);
        var body = cljs.core.nthnext.call(null, vec__27498, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__27499 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__27499__delegate.call(this, args);
    };
    G__27499.cljs$lang$maxFixedArity = 0;
    G__27499.cljs$lang$applyTo = function(arglist__27500) {
      var args = cljs.core.seq(arglist__27500);
      return G__27499__delegate(args);
    };
    G__27499.cljs$core$IFn$_invoke$arity$variadic = G__27499__delegate;
    return G__27499;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4384__auto__ = function iter__27505(s__27506) {
    return new cljs.core.LazySeq(null, function() {
      var s__27506__$1 = s__27506;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__27506__$1);
        if (temp__4126__auto__) {
          var s__27506__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__27506__$2)) {
            var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27506__$2);
            var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
            var b__27508 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
            if (function() {
              var i__27507 = 0;
              while (true) {
                if (i__27507 < size__4383__auto__) {
                  var args = cljs.core._nth.call(null, c__4382__auto__, i__27507);
                  cljs.core.chunk_append.call(null, b__27508, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__27509 = i__27507 + 1;
                  i__27507 = G__27509;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27508), iter__27505.call(null, cljs.core.chunk_rest.call(null, s__27506__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27508), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__27506__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__27505.call(null, cljs.core.rest.call(null, s__27506__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4384__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  var html = cljs.core.atom.call(null, null);
  React.renderComponentToString(component, function(html) {
    return function(p1__27510_SHARP_) {
      return cljs.core.reset_BANG_.call(null, html, p1__27510_SHARP_);
    };
  }(html));
  return cljs.core.deref.call(null, html);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4384__auto__ = function iter__27515(s__27516) {
      return new cljs.core.LazySeq(null, function() {
        var s__27516__$1 = s__27516;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27516__$1);
          if (temp__4126__auto__) {
            var s__27516__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27516__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27516__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__27518 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__27517 = 0;
                while (true) {
                  if (i__27517 < size__4383__auto__) {
                    var style = cljs.core._nth.call(null, c__4382__auto__, i__27517);
                    cljs.core.chunk_append.call(null, b__27518, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__27519 = i__27517 + 1;
                    i__27517 = G__27519;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27518), iter__27515.call(null, cljs.core.chunk_rest.call(null, s__27516__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27518), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__27516__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__27515.call(null, 
              cljs.core.rest.call(null, s__27516__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__27520) {
    var styles = cljs.core.seq(arglist__27520);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.8.0.js");
};
sablono.core.link_to27521 = function() {
  var link_to27521__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to27521 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to27521__delegate.call(this, url, content);
  };
  link_to27521.cljs$lang$maxFixedArity = 1;
  link_to27521.cljs$lang$applyTo = function(arglist__27522) {
    var url = cljs.core.first(arglist__27522);
    var content = cljs.core.rest(arglist__27522);
    return link_to27521__delegate(url, content);
  };
  link_to27521.cljs$core$IFn$_invoke$arity$variadic = link_to27521__delegate;
  return link_to27521;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to27521);
sablono.core.mail_to27523 = function() {
  var mail_to27523__delegate = function(e_mail, p__27524) {
    var vec__27526 = p__27524;
    var content = cljs.core.nth.call(null, vec__27526, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
      var or__3628__auto__ = content;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to27523 = function(e_mail, var_args) {
    var p__27524 = null;
    if (arguments.length > 1) {
      p__27524 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to27523__delegate.call(this, e_mail, p__27524);
  };
  mail_to27523.cljs$lang$maxFixedArity = 1;
  mail_to27523.cljs$lang$applyTo = function(arglist__27527) {
    var e_mail = cljs.core.first(arglist__27527);
    var p__27524 = cljs.core.rest(arglist__27527);
    return mail_to27523__delegate(e_mail, p__27524);
  };
  mail_to27523.cljs$core$IFn$_invoke$arity$variadic = mail_to27523__delegate;
  return mail_to27523;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to27523);
sablono.core.unordered_list27528 = function unordered_list27528(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4384__auto__ = function iter__27533(s__27534) {
      return new cljs.core.LazySeq(null, function() {
        var s__27534__$1 = s__27534;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27534__$1);
          if (temp__4126__auto__) {
            var s__27534__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27534__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27534__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__27536 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__27535 = 0;
                while (true) {
                  if (i__27535 < size__4383__auto__) {
                    var x = cljs.core._nth.call(null, c__4382__auto__, i__27535);
                    cljs.core.chunk_append.call(null, b__27536, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__27537 = i__27535 + 1;
                    i__27535 = G__27537;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27536), iter__27533.call(null, cljs.core.chunk_rest.call(null, s__27534__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27536), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__27534__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__27533.call(null, cljs.core.rest.call(null, s__27534__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list27528);
sablono.core.ordered_list27538 = function ordered_list27538(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4384__auto__ = function iter__27543(s__27544) {
      return new cljs.core.LazySeq(null, function() {
        var s__27544__$1 = s__27544;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27544__$1);
          if (temp__4126__auto__) {
            var s__27544__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27544__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27544__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__27546 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__27545 = 0;
                while (true) {
                  if (i__27545 < size__4383__auto__) {
                    var x = cljs.core._nth.call(null, c__4382__auto__, i__27545);
                    cljs.core.chunk_append.call(null, b__27546, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__27547 = i__27545 + 1;
                    i__27545 = G__27547;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27546), iter__27543.call(null, cljs.core.chunk_rest.call(null, s__27544__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27546), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__27544__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__27543.call(null, cljs.core.rest.call(null, s__27544__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list27538);
sablono.core.image27548 = function() {
  var image27548 = null;
  var image27548__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image27548__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image27548 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image27548__1.call(this, src);
      case 2:
        return image27548__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image27548.cljs$core$IFn$_invoke$arity$1 = image27548__1;
  image27548.cljs$core$IFn$_invoke$arity$2 = image27548__2;
  return image27548;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image27548);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__27549_SHARP_, p2__27550_SHARP_) {
    return[cljs.core.str(p1__27549_SHARP_), cljs.core.str("["), cljs.core.str(p2__27550_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__27551_SHARP_, p2__27552_SHARP_) {
    return[cljs.core.str(p1__27551_SHARP_), cljs.core.str("-"), cljs.core.str(p2__27552_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field = function input_field(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.hidden_field27553 = function() {
  var hidden_field27553 = null;
  var hidden_field27553__1 = function(name) {
    return hidden_field27553.call(null, name, null);
  };
  var hidden_field27553__2 = function(name, value) {
    return sablono.core.input_field.call(null, "hidden", name, value);
  };
  hidden_field27553 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return hidden_field27553__1.call(this, name);
      case 2:
        return hidden_field27553__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field27553.cljs$core$IFn$_invoke$arity$1 = hidden_field27553__1;
  hidden_field27553.cljs$core$IFn$_invoke$arity$2 = hidden_field27553__2;
  return hidden_field27553;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field27553);
sablono.core.text_field27554 = function() {
  var text_field27554 = null;
  var text_field27554__1 = function(name) {
    return text_field27554.call(null, name, null);
  };
  var text_field27554__2 = function(name, value) {
    return sablono.core.input_field.call(null, "text", name, value);
  };
  text_field27554 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_field27554__1.call(this, name);
      case 2:
        return text_field27554__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field27554.cljs$core$IFn$_invoke$arity$1 = text_field27554__1;
  text_field27554.cljs$core$IFn$_invoke$arity$2 = text_field27554__2;
  return text_field27554;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field27554);
sablono.core.password_field27555 = function() {
  var password_field27555 = null;
  var password_field27555__1 = function(name) {
    return password_field27555.call(null, name, null);
  };
  var password_field27555__2 = function(name, value) {
    return sablono.core.input_field.call(null, "password", name, value);
  };
  password_field27555 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return password_field27555__1.call(this, name);
      case 2:
        return password_field27555__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field27555.cljs$core$IFn$_invoke$arity$1 = password_field27555__1;
  password_field27555.cljs$core$IFn$_invoke$arity$2 = password_field27555__2;
  return password_field27555;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field27555);
sablono.core.email_field27556 = function() {
  var email_field27556 = null;
  var email_field27556__1 = function(name) {
    return email_field27556.call(null, name, null);
  };
  var email_field27556__2 = function(name, value) {
    return sablono.core.input_field.call(null, "email", name, value);
  };
  email_field27556 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return email_field27556__1.call(this, name);
      case 2:
        return email_field27556__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field27556.cljs$core$IFn$_invoke$arity$1 = email_field27556__1;
  email_field27556.cljs$core$IFn$_invoke$arity$2 = email_field27556__2;
  return email_field27556;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field27556);
sablono.core.check_box27557 = function() {
  var check_box27557 = null;
  var check_box27557__1 = function(name) {
    return check_box27557.call(null, name, null);
  };
  var check_box27557__2 = function(name, checked_QMARK_) {
    return check_box27557.call(null, name, checked_QMARK_, "true");
  };
  var check_box27557__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box27557 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box27557__1.call(this, name);
      case 2:
        return check_box27557__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box27557__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box27557.cljs$core$IFn$_invoke$arity$1 = check_box27557__1;
  check_box27557.cljs$core$IFn$_invoke$arity$2 = check_box27557__2;
  check_box27557.cljs$core$IFn$_invoke$arity$3 = check_box27557__3;
  return check_box27557;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box27557);
sablono.core.radio_button27558 = function() {
  var radio_button27558 = null;
  var radio_button27558__1 = function(group) {
    return radio_button27558.call(null, group, null);
  };
  var radio_button27558__2 = function(group, checked_QMARK_) {
    return radio_button27558.call(null, group, checked_QMARK_, "true");
  };
  var radio_button27558__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), 
    cljs.core.str("-"), cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button27558 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button27558__1.call(this, group);
      case 2:
        return radio_button27558__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button27558__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button27558.cljs$core$IFn$_invoke$arity$1 = radio_button27558__1;
  radio_button27558.cljs$core$IFn$_invoke$arity$2 = radio_button27558__2;
  radio_button27558.cljs$core$IFn$_invoke$arity$3 = radio_button27558__3;
  return radio_button27558;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button27558);
sablono.core.select_options27559 = function() {
  var select_options27559 = null;
  var select_options27559__1 = function(coll) {
    return select_options27559.call(null, coll, null);
  };
  var select_options27559__2 = function(coll, selected) {
    var iter__4384__auto__ = function iter__27568(s__27569) {
      return new cljs.core.LazySeq(null, function() {
        var s__27569__$1 = s__27569;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27569__$1);
          if (temp__4126__auto__) {
            var s__27569__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27569__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27569__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__27571 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__27570 = 0;
                while (true) {
                  if (i__27570 < size__4383__auto__) {
                    var x = cljs.core._nth.call(null, c__4382__auto__, i__27570);
                    cljs.core.chunk_append.call(null, b__27571, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__27574 = x;
                      var text = cljs.core.nth.call(null, vec__27574, 0, null);
                      var val = cljs.core.nth.call(null, vec__27574, 1, null);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options27559.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected)], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__27576 = i__27570 + 1;
                    i__27570 = G__27576;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27571), iter__27568.call(null, cljs.core.chunk_rest.call(null, s__27569__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27571), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__27569__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__27575 = x;
                var text = cljs.core.nth.call(null, vec__27575, 0, null);
                var val = cljs.core.nth.call(null, vec__27575, 1, null);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options27559.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected)], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__27568.call(null, cljs.core.rest.call(null, s__27569__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, coll);
  };
  select_options27559 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options27559__1.call(this, coll);
      case 2:
        return select_options27559__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options27559.cljs$core$IFn$_invoke$arity$1 = select_options27559__1;
  select_options27559.cljs$core$IFn$_invoke$arity$2 = select_options27559__2;
  return select_options27559;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options27559);
sablono.core.drop_down27577 = function() {
  var drop_down27577 = null;
  var drop_down27577__2 = function(name, options) {
    return drop_down27577.call(null, name, options, null);
  };
  var drop_down27577__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down27577 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down27577__2.call(this, name, options);
      case 3:
        return drop_down27577__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down27577.cljs$core$IFn$_invoke$arity$2 = drop_down27577__2;
  drop_down27577.cljs$core$IFn$_invoke$arity$3 = drop_down27577__3;
  return drop_down27577;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down27577);
sablono.core.text_area27578 = function() {
  var text_area27578 = null;
  var text_area27578__1 = function(name) {
    return text_area27578.call(null, name, null);
  };
  var text_area27578__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area27578 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area27578__1.call(this, name);
      case 2:
        return text_area27578__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area27578.cljs$core$IFn$_invoke$arity$1 = text_area27578__1;
  text_area27578.cljs$core$IFn$_invoke$arity$2 = text_area27578__2;
  return text_area27578;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area27578);
sablono.core.file_upload27579 = function file_upload27579(name) {
  return sablono.core.input_field.call(null, "file", name, null);
};
sablono.core.file_upload = sablono.core.wrap_attrs.call(null, sablono.core.file_upload27579);
sablono.core.label27580 = function label27580(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label27580);
sablono.core.submit_button27581 = function submit_button27581(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button27581);
sablono.core.reset_button27582 = function reset_button27582(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button27582);
sablono.core.form_to27583 = function() {
  var form_to27583__delegate = function(p__27584, body) {
    var vec__27586 = p__27584;
    var method = cljs.core.nth.call(null, vec__27586, 0, null);
    var action = cljs.core.nth.call(null, vec__27586, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to27583 = function(p__27584, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to27583__delegate.call(this, p__27584, body);
  };
  form_to27583.cljs$lang$maxFixedArity = 1;
  form_to27583.cljs$lang$applyTo = function(arglist__27587) {
    var p__27584 = cljs.core.first(arglist__27587);
    var body = cljs.core.rest(arglist__27587);
    return form_to27583__delegate(p__27584, body);
  };
  form_to27583.cljs$core$IFn$_invoke$arity$variadic = form_to27583__delegate;
  return form_to27583;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to27583);
goog.provide("kioo.util");
goog.require("cljs.core");
goog.require("clojure.string");
kioo.util._STAR_component_STAR_ = null;
kioo.util.WrapComponent = React.createClass({"componentDidMount":function(node) {
  var this$ = this;
  var temp__4126__auto__ = function() {
    var or__3628__auto__ = this$.props["onMount"];
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return this$.props["onRender"];
    }
  }();
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null, node);
  } else {
    return null;
  }
}, "componentDidUpdate":function(prev_props, prev_state, node) {
  var this$ = this;
  var temp__4126__auto__ = function() {
    var or__3628__auto__ = this$.props["onUpdate"];
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return this$.props["onRender"];
    }
  }();
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_27434 = kioo.util._STAR_component_STAR_;
    try {
      kioo.util._STAR_component_STAR_ = this$;
      return f.call(null, node);
    } finally {
      kioo.util._STAR_component_STAR_ = _STAR_component_STAR_27434;
    }
  } else {
    return null;
  }
}, "render":function() {
  var this$ = this;
  return this$.props["wrappee"];
}});
kioo.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
kioo.util.camel_case = function camel_case(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__27436 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__27436, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__27436, 1);
    if (cljs.core.truth_(kioo.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, clojure.string.capitalize, parts));
    }
  }
};
kioo.util.convert_attrs = function convert_attrs(attrs) {
  var style = cljs.core.truth_((new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(attrs)) ? function() {
    var vals = cljs.core.re_seq.call(null, /\s*([^:;]*)[:][\s]*([^;]+)/, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(attrs));
    return cljs.core.reduce.call(null, function(vals) {
      return function(m, p__27439) {
        var vec__27440 = p__27439;
        var _ = cljs.core.nth.call(null, vec__27440, 0, null);
        var k = cljs.core.nth.call(null, vec__27440, 1, null);
        var v = cljs.core.nth.call(null, vec__27440, 2, null);
        return cljs.core.assoc.call(null, m, k, v.trim());
      };
    }(vals), cljs.core.PersistentArrayMap.EMPTY, vals);
  }() : null;
  var class_name = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(attrs);
  return cljs.core.merge.call(null, cljs.core.dissoc.call(null, attrs, new cljs.core.Keyword(null, "class", "class", -2030961996)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), style, new cljs.core.Keyword(null, "className", "className", -1983287057), class_name], null));
};
kioo.util.flatten_nodes = function flatten_nodes(nodes) {
  return cljs.core.reduce.call(null, function(p1__27442_SHARP_, p2__27441_SHARP_) {
    if (cljs.core.seq_QMARK_.call(null, p2__27441_SHARP_)) {
      return cljs.core.concat.call(null, p2__27441_SHARP_, p1__27442_SHARP_);
    } else {
      return cljs.core.conj.call(null, p1__27442_SHARP_, p2__27441_SHARP_);
    }
  }, cljs.core.List.EMPTY, cljs.core.reverse.call(null, nodes));
};
kioo.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
kioo.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, kioo.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
goog.provide("kioo.common");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("kioo.util");
kioo.common.content = function() {
  var content__delegate = function(body) {
    return function(node) {
      return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), body);
    };
  };
  var content = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return content__delegate.call(this, body);
  };
  content.cljs$lang$maxFixedArity = 0;
  content.cljs$lang$applyTo = function(arglist__27466) {
    var body = cljs.core.seq(arglist__27466);
    return content__delegate(body);
  };
  content.cljs$core$IFn$_invoke$arity$variadic = content__delegate;
  return content;
}();
kioo.common.append = function() {
  var append__delegate = function(body) {
    return function(node) {
      return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), cljs.core.concat.call(null, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(node), body));
    };
  };
  var append = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return append__delegate.call(this, body);
  };
  append.cljs$lang$maxFixedArity = 0;
  append.cljs$lang$applyTo = function(arglist__27467) {
    var body = cljs.core.seq(arglist__27467);
    return append__delegate(body);
  };
  append.cljs$core$IFn$_invoke$arity$variadic = append__delegate;
  return append;
}();
kioo.common.prepend = function() {
  var prepend__delegate = function(body) {
    return function(node) {
      return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), cljs.core.concat.call(null, body, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(node)));
    };
  };
  var prepend = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prepend__delegate.call(this, body);
  };
  prepend.cljs$lang$maxFixedArity = 0;
  prepend.cljs$lang$applyTo = function(arglist__27468) {
    var body = cljs.core.seq(arglist__27468);
    return prepend__delegate(body);
  };
  prepend.cljs$core$IFn$_invoke$arity$variadic = prepend__delegate;
  return prepend;
}();
kioo.common.substitute = function() {
  var substitute__delegate = function(body) {
    return function(node) {
      return body;
    };
  };
  var substitute = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return substitute__delegate.call(this, body);
  };
  substitute.cljs$lang$maxFixedArity = 0;
  substitute.cljs$lang$applyTo = function(arglist__27469) {
    var body = cljs.core.seq(arglist__27469);
    return substitute__delegate(body);
  };
  substitute.cljs$core$IFn$_invoke$arity$variadic = substitute__delegate;
  return substitute;
}();
kioo.common.set_attr = function() {
  var set_attr__delegate = function(body) {
    var els = cljs.core.partition.call(null, 2, body);
    return function(els) {
      return function(node) {
        return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.reduce.call(null, function(els) {
          return function(n, p__27472) {
            var vec__27473 = p__27472;
            var k = cljs.core.nth.call(null, vec__27473, 0, null);
            var v = cljs.core.nth.call(null, vec__27473, 1, null);
            return cljs.core.assoc.call(null, n, k, v);
          };
        }(els), (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node), els));
      };
    }(els);
  };
  var set_attr = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_attr__delegate.call(this, body);
  };
  set_attr.cljs$lang$maxFixedArity = 0;
  set_attr.cljs$lang$applyTo = function(arglist__27474) {
    var body = cljs.core.seq(arglist__27474);
    return set_attr__delegate(body);
  };
  set_attr.cljs$core$IFn$_invoke$arity$variadic = set_attr__delegate;
  return set_attr;
}();
kioo.common.remove_attr = function() {
  var remove_attr__delegate = function(body) {
    return function(node) {
      return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.reduce.call(null, function(n, k) {
        return cljs.core.dissoc.call(null, n, k);
      }, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node), body));
    };
  };
  var remove_attr = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return remove_attr__delegate.call(this, body);
  };
  remove_attr.cljs$lang$maxFixedArity = 0;
  remove_attr.cljs$lang$applyTo = function(arglist__27475) {
    var body = cljs.core.seq(arglist__27475);
    return remove_attr__delegate(body);
  };
  remove_attr.cljs$core$IFn$_invoke$arity$variadic = remove_attr__delegate;
  return remove_attr;
}();
kioo.common.do__GT_ = function() {
  var do__GT___delegate = function(body) {
    return function(node) {
      return cljs.core.reduce.call(null, function(p1__27477_SHARP_, p2__27476_SHARP_) {
        return p2__27476_SHARP_.call(null, p1__27477_SHARP_);
      }, node, body);
    };
  };
  var do__GT_ = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return do__GT___delegate.call(this, body);
  };
  do__GT_.cljs$lang$maxFixedArity = 0;
  do__GT_.cljs$lang$applyTo = function(arglist__27478) {
    var body = cljs.core.seq(arglist__27478);
    return do__GT___delegate(body);
  };
  do__GT_.cljs$core$IFn$_invoke$arity$variadic = do__GT___delegate;
  return do__GT_;
}();
kioo.common.set_style = function() {
  var set_style__delegate = function(body) {
    var els = cljs.core.partition.call(null, 2, body);
    var mp = cljs.core.reduce.call(null, function(els) {
      return function(m, p__27482) {
        var vec__27483 = p__27482;
        var k = cljs.core.nth.call(null, vec__27483, 0, null);
        var v = cljs.core.nth.call(null, vec__27483, 1, null);
        return cljs.core.assoc.call(null, m, k, v);
      };
    }(els), cljs.core.PersistentArrayMap.EMPTY, els);
    return function(els, mp) {
      return function(node) {
        return cljs.core.update_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "style", "style", -496642736)], null), function(els, mp) {
          return function(p1__27479_SHARP_) {
            return cljs.core.merge.call(null, p1__27479_SHARP_, mp);
          };
        }(els, mp));
      };
    }(els, mp);
  };
  var set_style = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_style__delegate.call(this, body);
  };
  set_style.cljs$lang$maxFixedArity = 0;
  set_style.cljs$lang$applyTo = function(arglist__27484) {
    var body = cljs.core.seq(arglist__27484);
    return set_style__delegate(body);
  };
  set_style.cljs$core$IFn$_invoke$arity$variadic = set_style__delegate;
  return set_style;
}();
kioo.common.remove_style = function() {
  var remove_style__delegate = function(body) {
    return function(node) {
      var style = cljs.core.reduce.call(null, function(p1__27485_SHARP_, p2__27486_SHARP_) {
        return cljs.core.dissoc.call(null, p1__27485_SHARP_, cljs.core.name.call(null, p2__27486_SHARP_), p2__27486_SHARP_);
      }, cljs.core.get_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "style", "style", -496642736)], null)), body);
      return cljs.core.assoc_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "style", "style", -496642736)], null), style);
    };
  };
  var remove_style = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return remove_style__delegate.call(this, body);
  };
  remove_style.cljs$lang$maxFixedArity = 0;
  remove_style.cljs$lang$applyTo = function(arglist__27487) {
    var body = cljs.core.seq(arglist__27487);
    return remove_style__delegate(body);
  };
  remove_style.cljs$core$IFn$_invoke$arity$variadic = remove_style__delegate;
  return remove_style;
}();
kioo.common.get_class_regex = function get_class_regex(cls) {
  return new RegExp([cljs.core.str("(\\s|^)"), cljs.core.str(cls), cljs.core.str("(\\s|$)")].join(""));
};
kioo.common.has_class_QMARK_ = function has_class_QMARK_(cur_cls, cls) {
  return cljs.core.re_find.call(null, kioo.common.get_class_regex.call(null, cls), cur_cls);
};
kioo.common.set_class = function() {
  var set_class__delegate = function(values) {
    return function(node) {
      var new_class = cljs.core.reduce.call(null, function(p1__27488_SHARP_, p2__27489_SHARP_) {
        if (cljs.core.truth_(kioo.common.has_class_QMARK_.call(null, p1__27488_SHARP_, p2__27489_SHARP_))) {
          return p1__27488_SHARP_;
        } else {
          return[cljs.core.str(p1__27488_SHARP_), cljs.core.str(" "), cljs.core.str(p2__27489_SHARP_)].join("");
        }
      }, "", values);
      return cljs.core.assoc_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "className", "className", -1983287057)], null), new_class);
    };
  };
  var set_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_class__delegate.call(this, values);
  };
  set_class.cljs$lang$maxFixedArity = 0;
  set_class.cljs$lang$applyTo = function(arglist__27490) {
    var values = cljs.core.seq(arglist__27490);
    return set_class__delegate(values);
  };
  set_class.cljs$core$IFn$_invoke$arity$variadic = set_class__delegate;
  return set_class;
}();
kioo.common.add_class = function() {
  var add_class__delegate = function(values) {
    return function(node) {
      var new_class = cljs.core.reduce.call(null, function(p1__27491_SHARP_, p2__27492_SHARP_) {
        if (cljs.core.truth_(kioo.common.has_class_QMARK_.call(null, p1__27491_SHARP_, p2__27492_SHARP_))) {
          return p1__27491_SHARP_;
        } else {
          return[cljs.core.str(p1__27491_SHARP_), cljs.core.str(" "), cljs.core.str(p2__27492_SHARP_)].join("");
        }
      }, cljs.core.get_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "className", "className", -1983287057)], null)), values);
      return cljs.core.assoc_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "className", "className", -1983287057)], null), new_class);
    };
  };
  var add_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return add_class__delegate.call(this, values);
  };
  add_class.cljs$lang$maxFixedArity = 0;
  add_class.cljs$lang$applyTo = function(arglist__27493) {
    var values = cljs.core.seq(arglist__27493);
    return add_class__delegate(values);
  };
  add_class.cljs$core$IFn$_invoke$arity$variadic = add_class__delegate;
  return add_class;
}();
kioo.common.remove_class = function() {
  var remove_class__delegate = function(values) {
    return function(node) {
      var new_class = cljs.core.reduce.call(null, function(p1__27494_SHARP_, p2__27495_SHARP_) {
        if (cljs.core.truth_(kioo.common.has_class_QMARK_.call(null, p1__27494_SHARP_, p2__27495_SHARP_))) {
          return clojure.string.replace.call(null, p1__27494_SHARP_, kioo.common.get_class_regex.call(null, p2__27495_SHARP_), " ");
        } else {
          return p1__27494_SHARP_;
        }
      }, cljs.core.get_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "className", "className", -1983287057)], null)), values);
      return cljs.core.assoc_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "className", "className", -1983287057)], null), new_class);
    };
  };
  var remove_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return remove_class__delegate.call(this, values);
  };
  remove_class.cljs$lang$maxFixedArity = 0;
  remove_class.cljs$lang$applyTo = function(arglist__27496) {
    var values = cljs.core.seq(arglist__27496);
    return remove_class__delegate(values);
  };
  remove_class.cljs$core$IFn$_invoke$arity$variadic = remove_class__delegate;
  return remove_class;
}();
kioo.common.unwrap = function unwrap(node) {
  return(new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(node);
};
goog.provide("clojure.zip");
goog.require("cljs.core");
clojure.zip.zipper = function zipper(branch_QMARK_, children, make_node, root) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [root, null], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("zip", "make-node", "zip/make-node", 1103800591), make_node, new cljs.core.Keyword("zip", "children", "zip/children", -940194589), children, new cljs.core.Keyword("zip", "branch?", "zip/branch?", -998880862), branch_QMARK_], null));
};
clojure.zip.seq_zip = function seq_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.seq_QMARK_, cljs.core.identity, function(node, children) {
    return cljs.core.with_meta.call(null, children, cljs.core.meta.call(null, node));
  }, root);
};
clojure.zip.vector_zip = function vector_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.vector_QMARK_, cljs.core.seq, function(node, children) {
    return cljs.core.with_meta.call(null, cljs.core.vec.call(null, children), cljs.core.meta.call(null, node));
  }, root);
};
clojure.zip.xml_zip = function xml_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, new cljs.core.Keyword(null, "content", "content", 15833224)), function(node, children) {
    return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), function() {
      var and__3616__auto__ = children;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core.apply.call(null, cljs.core.vector, children);
      } else {
        return and__3616__auto__;
      }
    }());
  }, root);
};
clojure.zip.node = function node(loc) {
  return loc.call(null, 0);
};
clojure.zip.branch_QMARK_ = function branch_QMARK_(loc) {
  return(new cljs.core.Keyword("zip", "branch?", "zip/branch?", -998880862)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc));
};
clojure.zip.children = function children(loc) {
  if (cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    return(new cljs.core.Keyword("zip", "children", "zip/children", -940194589)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc));
  } else {
    throw "called children on a leaf node";
  }
};
clojure.zip.make_node = function make_node(loc, node, children) {
  return(new cljs.core.Keyword("zip", "make-node", "zip/make-node", 1103800591)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, loc)).call(null, node, children);
};
clojure.zip.path = function path(loc) {
  return(new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)).cljs$core$IFn$_invoke$arity$1(loc.call(null, 1));
};
clojure.zip.lefts = function lefts(loc) {
  return cljs.core.seq.call(null, (new cljs.core.Keyword(null, "l", "l", 1395893423)).cljs$core$IFn$_invoke$arity$1(loc.call(null, 1)));
};
clojure.zip.rights = function rights(loc) {
  return(new cljs.core.Keyword(null, "r", "r", -471384190)).cljs$core$IFn$_invoke$arity$1(loc.call(null, 1));
};
clojure.zip.down = function down(loc) {
  if (cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    var vec__28128 = loc;
    var node = cljs.core.nth.call(null, vec__28128, 0, null);
    var path = cljs.core.nth.call(null, vec__28128, 1, null);
    var vec__28129 = clojure.zip.children.call(null, loc);
    var c = cljs.core.nth.call(null, vec__28129, 0, null);
    var cnext = cljs.core.nthnext.call(null, vec__28129, 1);
    var cs = vec__28129;
    if (cljs.core.truth_(cs)) {
      return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565), cljs.core.truth_(path) ? cljs.core.conj.call(null, (new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)).cljs$core$IFn$_invoke$arity$1(path), node) : new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null), new cljs.core.Keyword(null, "ppath", "ppath", -1758182784), path, new cljs.core.Keyword(null, "r", "r", -471384190), cnext], null)], null), cljs.core.meta.call(null, loc));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
clojure.zip.up = function up(loc) {
  var vec__28132 = loc;
  var node = cljs.core.nth.call(null, vec__28132, 0, null);
  var map__28133 = cljs.core.nth.call(null, vec__28132, 1, null);
  var map__28133__$1 = cljs.core.seq_QMARK_.call(null, map__28133) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28133) : map__28133;
  var path = map__28133__$1;
  var l = cljs.core.get.call(null, map__28133__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var ppath = cljs.core.get.call(null, map__28133__$1, new cljs.core.Keyword(null, "ppath", "ppath", -1758182784));
  var pnodes = cljs.core.get.call(null, map__28133__$1, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565));
  var r = cljs.core.get.call(null, map__28133__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  var changed_QMARK_ = cljs.core.get.call(null, map__28133__$1, new cljs.core.Keyword(null, "changed?", "changed?", -437828330));
  if (cljs.core.truth_(pnodes)) {
    var pnode = cljs.core.peek.call(null, pnodes);
    return cljs.core.with_meta.call(null, cljs.core.truth_(changed_QMARK_) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null, loc, pnode, cljs.core.concat.call(null, l, cljs.core.cons.call(null, node, r))), function() {
      var and__3616__auto__ = ppath;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core.assoc.call(null, ppath, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true);
      } else {
        return and__3616__auto__;
      }
    }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pnode, ppath], null), cljs.core.meta.call(null, loc));
  } else {
    return null;
  }
};
clojure.zip.root = function root(loc) {
  while (true) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), loc.call(null, 1))) {
      return clojure.zip.node.call(null, loc);
    } else {
      var p = clojure.zip.up.call(null, loc);
      if (cljs.core.truth_(p)) {
        var G__28134 = p;
        loc = G__28134;
        continue;
      } else {
        return clojure.zip.node.call(null, loc);
      }
    }
    break;
  }
};
clojure.zip.right = function right(loc) {
  var vec__28138 = loc;
  var node = cljs.core.nth.call(null, vec__28138, 0, null);
  var map__28139 = cljs.core.nth.call(null, vec__28138, 1, null);
  var map__28139__$1 = cljs.core.seq_QMARK_.call(null, map__28139) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28139) : map__28139;
  var path = map__28139__$1;
  var l = cljs.core.get.call(null, map__28139__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var vec__28140 = cljs.core.get.call(null, map__28139__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  var r = cljs.core.nth.call(null, vec__28140, 0, null);
  var rnext = cljs.core.nthnext.call(null, vec__28140, 1);
  var rs = vec__28140;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = path;
    if (cljs.core.truth_(and__3616__auto__)) {
      return rs;
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.conj.call(null, l, node), new cljs.core.Keyword(null, "r", "r", -471384190), rnext)], null), cljs.core.meta.call(null, loc));
  } else {
    return null;
  }
};
clojure.zip.rightmost = function rightmost(loc) {
  var vec__28143 = loc;
  var node = cljs.core.nth.call(null, vec__28143, 0, null);
  var map__28144 = cljs.core.nth.call(null, vec__28143, 1, null);
  var map__28144__$1 = cljs.core.seq_QMARK_.call(null, map__28144) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28144) : map__28144;
  var path = map__28144__$1;
  var l = cljs.core.get.call(null, map__28144__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var r = cljs.core.get.call(null, map__28144__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = path;
    if (cljs.core.truth_(and__3616__auto__)) {
      return r;
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.last.call(null, r), cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.apply.call(null, cljs.core.conj, l, node, cljs.core.butlast.call(null, r)), new cljs.core.Keyword(null, "r", "r", -471384190), null)], null), cljs.core.meta.call(null, loc));
  } else {
    return loc;
  }
};
clojure.zip.left = function left(loc) {
  var vec__28147 = loc;
  var node = cljs.core.nth.call(null, vec__28147, 0, null);
  var map__28148 = cljs.core.nth.call(null, vec__28147, 1, null);
  var map__28148__$1 = cljs.core.seq_QMARK_.call(null, map__28148) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28148) : map__28148;
  var path = map__28148__$1;
  var l = cljs.core.get.call(null, map__28148__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var r = cljs.core.get.call(null, map__28148__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = path;
    if (cljs.core.truth_(and__3616__auto__)) {
      return cljs.core.seq.call(null, l);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, l), cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop.call(null, l), new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.cons.call(null, node, r))], null), cljs.core.meta.call(null, loc));
  } else {
    return null;
  }
};
clojure.zip.leftmost = function leftmost(loc) {
  var vec__28151 = loc;
  var node = cljs.core.nth.call(null, vec__28151, 0, null);
  var map__28152 = cljs.core.nth.call(null, vec__28151, 1, null);
  var map__28152__$1 = cljs.core.seq_QMARK_.call(null, map__28152) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28152) : map__28152;
  var path = map__28152__$1;
  var l = cljs.core.get.call(null, map__28152__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var r = cljs.core.get.call(null, map__28152__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = path;
    if (cljs.core.truth_(and__3616__auto__)) {
      return cljs.core.seq.call(null, l);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, l), cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.concat.call(null, cljs.core.rest.call(null, l), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null), r))], null), cljs.core.meta.call(null, 
    loc));
  } else {
    return loc;
  }
};
clojure.zip.insert_left = function insert_left(loc, item) {
  var vec__28155 = loc;
  var node = cljs.core.nth.call(null, vec__28155, 0, null);
  var map__28156 = cljs.core.nth.call(null, vec__28155, 1, null);
  var map__28156__$1 = cljs.core.seq_QMARK_.call(null, map__28156) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28156) : map__28156;
  var path = map__28156__$1;
  var l = cljs.core.get.call(null, map__28156__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  if (path == null) {
    throw "Insert at top";
  } else {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node, cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.conj.call(null, l, item), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true)], null), cljs.core.meta.call(null, loc));
  }
};
clojure.zip.insert_right = function insert_right(loc, item) {
  var vec__28159 = loc;
  var node = cljs.core.nth.call(null, vec__28159, 0, null);
  var map__28160 = cljs.core.nth.call(null, vec__28159, 1, null);
  var map__28160__$1 = cljs.core.seq_QMARK_.call(null, map__28160) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28160) : map__28160;
  var path = map__28160__$1;
  var r = cljs.core.get.call(null, map__28160__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (path == null) {
    throw "Insert at top";
  } else {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node, cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.cons.call(null, item, r), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true)], null), cljs.core.meta.call(null, loc));
  }
};
clojure.zip.replace = function replace(loc, node) {
  var vec__28162 = loc;
  var _ = cljs.core.nth.call(null, vec__28162, 0, null);
  var path = cljs.core.nth.call(null, vec__28162, 1, null);
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node, cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true)], null), cljs.core.meta.call(null, loc));
};
clojure.zip.edit = function() {
  var edit__delegate = function(loc, f, args) {
    return clojure.zip.replace.call(null, loc, cljs.core.apply.call(null, f, clojure.zip.node.call(null, loc), args));
  };
  var edit = function(loc, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return edit__delegate.call(this, loc, f, args);
  };
  edit.cljs$lang$maxFixedArity = 2;
  edit.cljs$lang$applyTo = function(arglist__28163) {
    var loc = cljs.core.first(arglist__28163);
    arglist__28163 = cljs.core.next(arglist__28163);
    var f = cljs.core.first(arglist__28163);
    var args = cljs.core.rest(arglist__28163);
    return edit__delegate(loc, f, args);
  };
  edit.cljs$core$IFn$_invoke$arity$variadic = edit__delegate;
  return edit;
}();
clojure.zip.insert_child = function insert_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.cons.call(null, item, clojure.zip.children.call(null, loc))));
};
clojure.zip.append_child = function append_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.concat.call(null, clojure.zip.children.call(null, loc), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [item], null))));
};
clojure.zip.next = function next(loc) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), loc.call(null, 1))) {
    return loc;
  } else {
    var or__3628__auto__ = function() {
      var and__3616__auto__ = clojure.zip.branch_QMARK_.call(null, loc);
      if (cljs.core.truth_(and__3616__auto__)) {
        return clojure.zip.down.call(null, loc);
      } else {
        return and__3616__auto__;
      }
    }();
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      var or__3628__auto____$1 = clojure.zip.right.call(null, loc);
      if (cljs.core.truth_(or__3628__auto____$1)) {
        return or__3628__auto____$1;
      } else {
        var p = loc;
        while (true) {
          if (cljs.core.truth_(clojure.zip.up.call(null, p))) {
            var or__3628__auto____$2 = clojure.zip.right.call(null, clojure.zip.up.call(null, p));
            if (cljs.core.truth_(or__3628__auto____$2)) {
              return or__3628__auto____$2;
            } else {
              var G__28164 = clojure.zip.up.call(null, p);
              p = G__28164;
              continue;
            }
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.node.call(null, p), new cljs.core.Keyword(null, "end", "end", -268185958)], null);
          }
          break;
        }
      }
    }
  }
};
clojure.zip.prev = function prev(loc) {
  var temp__4124__auto__ = clojure.zip.left.call(null, loc);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var lloc = temp__4124__auto__;
    var loc__$1 = lloc;
    while (true) {
      var temp__4124__auto____$1 = function() {
        var and__3616__auto__ = clojure.zip.branch_QMARK_.call(null, loc__$1);
        if (cljs.core.truth_(and__3616__auto__)) {
          return clojure.zip.down.call(null, loc__$1);
        } else {
          return and__3616__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var child = temp__4124__auto____$1;
        var G__28165 = clojure.zip.rightmost.call(null, child);
        loc__$1 = G__28165;
        continue;
      } else {
        return loc__$1;
      }
      break;
    }
  } else {
    return clojure.zip.up.call(null, loc);
  }
};
clojure.zip.end_QMARK_ = function end_QMARK_(loc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), loc.call(null, 1));
};
clojure.zip.remove = function remove(loc) {
  var vec__28168 = loc;
  var node = cljs.core.nth.call(null, vec__28168, 0, null);
  var map__28169 = cljs.core.nth.call(null, vec__28168, 1, null);
  var map__28169__$1 = cljs.core.seq_QMARK_.call(null, map__28169) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28169) : map__28169;
  var path = map__28169__$1;
  var l = cljs.core.get.call(null, map__28169__$1, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var ppath = cljs.core.get.call(null, map__28169__$1, new cljs.core.Keyword(null, "ppath", "ppath", -1758182784));
  var pnodes = cljs.core.get.call(null, map__28169__$1, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565));
  var rs = cljs.core.get.call(null, map__28169__$1, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (path == null) {
    throw "Remove at top";
  } else {
    if (cljs.core.count.call(null, l) > 0) {
      var loc__$1 = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, l), cljs.core.assoc.call(null, path, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop.call(null, l), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true)], null), cljs.core.meta.call(null, loc));
      while (true) {
        var temp__4124__auto__ = function() {
          var and__3616__auto__ = clojure.zip.branch_QMARK_.call(null, loc__$1);
          if (cljs.core.truth_(and__3616__auto__)) {
            return clojure.zip.down.call(null, loc__$1);
          } else {
            return and__3616__auto__;
          }
        }();
        if (cljs.core.truth_(temp__4124__auto__)) {
          var child = temp__4124__auto__;
          var G__28170 = clojure.zip.rightmost.call(null, child);
          loc__$1 = G__28170;
          continue;
        } else {
          return loc__$1;
        }
        break;
      }
    } else {
      return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null, loc, cljs.core.peek.call(null, pnodes), rs), function() {
        var and__3616__auto__ = ppath;
        if (cljs.core.truth_(and__3616__auto__)) {
          return cljs.core.assoc.call(null, ppath, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), true);
        } else {
          return and__3616__auto__;
        }
      }()], null), cljs.core.meta.call(null, loc));
    }
  }
};
goog.provide("hickory.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("clojure.string");
hickory.utils.void_element = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 16, [new cljs.core.Keyword(null, "hr", "hr", 1377740067), null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), null, new cljs.core.Keyword(null, "wbr", "wbr", 228661800), null, new cljs.core.Keyword(null, "command", "command", -894540724), null, new cljs.core.Keyword(null, "source", "source", -433931539), null, new cljs.core.Keyword(null, "param", "param", 2013631823), null, new cljs.core.Keyword(null, 
"link", "link", -1769163468), null, new cljs.core.Keyword(null, "col", "col", -1959363084), null, new cljs.core.Keyword(null, "area", "area", 472007256), null, new cljs.core.Keyword(null, "br", "br", 934104792), null, new cljs.core.Keyword(null, "input", "input", 556931961), null, new cljs.core.Keyword(null, "base", "base", 185279322), null, new cljs.core.Keyword(null, "embed", "embed", -1354913349), null, new cljs.core.Keyword(null, "keygen", "keygen", -571693253), null, new cljs.core.Keyword(null, 
"img", "img", 1442687358), null, new cljs.core.Keyword(null, "track", "track", 195787487), null], null), null);
hickory.utils.unescapable_content = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "script", "script", -1304443801), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null), null);
hickory.utils.html_escape = function html_escape(s) {
  return goog.string.htmlEscape(s);
};
hickory.utils.starts_with = function starts_with(s, prefix) {
  return goog.string.startsWith(s, prefix);
};
hickory.utils.lower_case_keyword = function lower_case_keyword(s) {
  return cljs.core.keyword.call(null, clojure.string.lower_case.call(null, s));
};
hickory.utils.render_doctype = function render_doctype(name, publicid, systemid) {
  return[cljs.core.str("\x3c!DOCTYPE "), cljs.core.str(name), cljs.core.str(cljs.core.truth_(cljs.core.not_empty.call(null, publicid)) ? [cljs.core.str(' PUBLIC "'), cljs.core.str(publicid), cljs.core.str('"')].join("") : null), cljs.core.str(cljs.core.truth_(cljs.core.not_empty.call(null, systemid)) ? [cljs.core.str(' "'), cljs.core.str(systemid), cljs.core.str('"')].join("") : null), cljs.core.str("\x3e")].join("");
};
goog.provide("hickory.core");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("clojure.zip");
goog.require("hickory.utils");
hickory.core.HiccupRepresentable = function() {
  var obj28114 = {};
  return obj28114;
}();
hickory.core.as_hiccup = function as_hiccup(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.hickory$core$HiccupRepresentable$as_hiccup$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.hickory$core$HiccupRepresentable$as_hiccup$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = hickory.core.as_hiccup[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = hickory.core.as_hiccup["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "HiccupRepresentable.as-hiccup", this$);
        }
      }
    }().call(null, this$);
  }
};
hickory.core.HickoryRepresentable = function() {
  var obj28116 = {};
  return obj28116;
}();
hickory.core.as_hickory = function as_hickory(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.hickory$core$HickoryRepresentable$as_hickory$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.hickory$core$HickoryRepresentable$as_hickory$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = hickory.core.as_hickory[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = hickory.core.as_hickory["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "HickoryRepresentable.as-hickory", this$);
        }
      }
    }().call(null, this$);
  }
};
hickory.core.node_type = function node_type(type) {
  return Node[[cljs.core.str(type), cljs.core.str("_NODE")].join("")];
};
hickory.core.Attribute = hickory.core.node_type.call(null, "ATTRIBUTE");
hickory.core.Comment = hickory.core.node_type.call(null, "COMMENT");
hickory.core.Document = hickory.core.node_type.call(null, "DOCUMENT");
hickory.core.DocumentType = hickory.core.node_type.call(null, "DOCUMENT_TYPE");
hickory.core.Element = hickory.core.node_type.call(null, "ELEMENT");
hickory.core.Text = hickory.core.node_type.call(null, "TEXT");
hickory.core.extend_type_with_seqable = function extend_type_with_seqable(t) {
  t.prototype.cljs$core$ISeqable$ = true;
  return t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
    var array__$1 = this;
    return cljs.core.array_seq.call(null, array__$1);
  };
};
hickory.core.extend_type_with_seqable.call(null, NodeList);
if (typeof NamedNodeMap !== "undefined") {
  hickory.core.extend_type_with_seqable.call(null, NamedNodeMap);
} else {
}
if (typeof MozNamedAttrMap !== "undefined") {
  hickory.core.extend_type_with_seqable.call(null, MozNamedAttrMap);
} else {
}
hickory.core.format_doctype = function format_doctype(dt) {
  var name = dt["name"];
  var publicId = dt["publicId"];
  var systemId = dt["systemId"];
  if (!cljs.core.empty_QMARK_.call(null, publicId)) {
    return goog.string.format('\x3c!DOCTYPE %s PUBLIC "%s" "%s"\x3e', name, publicId, systemId);
  } else {
    return[cljs.core.str("\x3c!DOCTYPE "), cljs.core.str(name), cljs.core.str("\x3e")].join("");
  }
};
hickory.core.HiccupRepresentable["object"] = true;
hickory.core.as_hiccup["object"] = function(this$) {
  var pred__28118 = cljs.core._EQ_;
  var expr__28119 = this$["nodeType"];
  if (cljs.core.truth_(pred__28118.call(null, hickory.core.Attribute, expr__28119))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hickory.utils.lower_case_keyword.call(null, this$["name"]), this$["value"]], null);
  } else {
    if (cljs.core.truth_(pred__28118.call(null, hickory.core.Comment, expr__28119))) {
      return[cljs.core.str("\x3c!--"), cljs.core.str(this$["data"]), cljs.core.str("--\x3e")].join("");
    } else {
      if (cljs.core.truth_(pred__28118.call(null, hickory.core.Document, expr__28119))) {
        return cljs.core.map.call(null, hickory.core.as_hiccup, this$["childNodes"]);
      } else {
        if (cljs.core.truth_(pred__28118.call(null, hickory.core.DocumentType, expr__28119))) {
          return hickory.core.format_doctype.call(null, this$);
        } else {
          if (cljs.core.truth_(pred__28118.call(null, hickory.core.Element, expr__28119))) {
            var tag = hickory.utils.lower_case_keyword.call(null, this$["tagName"]);
            return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, hickory.core.as_hiccup, this$["attributes"]))], null), cljs.core.truth_(hickory.utils.unescapable_content.call(null, tag)) ? cljs.core.map.call(null, function(tag, pred__28118, expr__28119) {
              return function(p1__28117_SHARP_) {
                return p1__28117_SHARP_["wholeText"];
              };
            }(tag, pred__28118, expr__28119), this$["childNodes"]) : cljs.core.map.call(null, hickory.core.as_hiccup, this$["childNodes"])));
          } else {
            if (cljs.core.truth_(pred__28118.call(null, hickory.core.Text, expr__28119))) {
              return hickory.utils.html_escape.call(null, this$["wholeText"]);
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__28119)].join(""));
            }
          }
        }
      }
    }
  }
};
hickory.core.HickoryRepresentable["object"] = true;
hickory.core.as_hickory["object"] = function(this$) {
  var pred__28121 = cljs.core._EQ_;
  var expr__28122 = this$["nodeType"];
  if (cljs.core.truth_(pred__28121.call(null, hickory.core.Attribute, expr__28122))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hickory.utils.lower_case_keyword.call(null, this$["name"]), this$["value"]], null);
  } else {
    if (cljs.core.truth_(pred__28121.call(null, hickory.core.Comment, expr__28122))) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "comment", "comment", 532206069), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$["data"]], null)], null);
    } else {
      if (cljs.core.truth_(pred__28121.call(null, hickory.core.Document, expr__28122))) {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "document", "document", -1329188687), new cljs.core.Keyword(null, "content", "content", 15833224), cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, hickory.core.as_hickory, this$["childNodes"])))], null);
      } else {
        if (cljs.core.truth_(pred__28121.call(null, hickory.core.DocumentType, expr__28122))) {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "document-type", "document-type", -1309437776), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), this$["name"], new cljs.core.Keyword(null, "publicid", "publicid", 1557995850), this$["publicId"], new cljs.core.Keyword(null, "systemid", "systemid", 
          -2052878192), this$["systemId"]], null)], null);
        } else {
          if (cljs.core.truth_(pred__28121.call(null, hickory.core.Element, expr__28122))) {
            return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, hickory.core.as_hickory, this$["attributes"]))), new cljs.core.Keyword(null, "tag", "tag", -1290361223), hickory.utils.lower_case_keyword.call(null, 
            this$["tagName"]), new cljs.core.Keyword(null, "content", "content", 15833224), cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, hickory.core.as_hickory, this$["childNodes"])))], null);
          } else {
            if (cljs.core.truth_(pred__28121.call(null, hickory.core.Text, expr__28122))) {
              return this$["wholeText"];
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__28122)].join(""));
            }
          }
        }
      }
    }
  }
};
hickory.core.extract_doctype = function extract_doctype(s) {
  var temp__4126__auto__ = cljs.core.second.call(null, function() {
    var or__3628__auto__ = cljs.core.re_find.call(null, /<!DOCTYPE ([^>]*)>/, s);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return cljs.core.re_find.call(null, /<!doctype ([^>]*)>/, s);
    }
  }());
  if (cljs.core.truth_(temp__4126__auto__)) {
    var doctype = temp__4126__auto__;
    return cljs.core.re_find.call(null, /([^\s]*)(\s+PUBLIC\s+[\"]?([^\"]*)[\"]?\s+[\"]?([^\"]*)[\"]?)?/, doctype);
  } else {
    return null;
  }
};
hickory.core.remove_el = function remove_el(el) {
  return el["parentNode"].removeChild(el);
};
hickory.core.parse_dom_with_domparser = function parse_dom_with_domparser(s) {
  if (typeof DOMParser !== "undefined") {
    return(new DOMParser).parseFromString(s, "text/html");
  } else {
    return null;
  }
};
hickory.core.parse_dom_with_write = function parse_dom_with_write(s) {
  var doc = document.implementation.createHTMLDocument("");
  var doctype_el = doc["doctype"];
  if (cljs.core.truth_(hickory.core.extract_doctype.call(null, s))) {
  } else {
    hickory.core.remove_el.call(null, doctype_el);
  }
  var temp__4126__auto___28124 = cljs.core.first.call(null, doc["head"]["childNodes"]);
  if (cljs.core.truth_(temp__4126__auto___28124)) {
    var title_el_28125 = temp__4126__auto___28124;
    if (cljs.core.empty_QMARK_.call(null, title_el_28125["text"])) {
      hickory.core.remove_el.call(null, title_el_28125);
    } else {
    }
  } else {
  }
  doc.write(s);
  return doc;
};
hickory.core.parse = function parse(s) {
  var or__3628__auto__ = hickory.core.parse_dom_with_domparser.call(null, s);
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    return hickory.core.parse_dom_with_write.call(null, s);
  }
};
hickory.core.parse_fragment = function parse_fragment(s) {
  return hickory.core.parse.call(null, s)["body"]["childNodes"];
};
goog.provide("kioo.core");
goog.require("cljs.core");
goog.require("kioo.common");
goog.require("sablono.core");
goog.require("hickory.core");
goog.require("kioo.util");
kioo.core.value_component = function value_component(renderer) {
  var react_component = React.createClass({"render":function() {
    var this$ = this;
    var _STAR_component_STAR_27444 = kioo.util._STAR_component_STAR_;
    try {
      kioo.util._STAR_component_STAR_ = this$;
      return cljs.core.apply.call(null, renderer, this$.props["value"], this$.props["statics"]);
    } finally {
      kioo.util._STAR_component_STAR_ = _STAR_component_STAR_27444;
    }
  }, "shouldComponentUpdate":function(next_props, _) {
    var this$ = this;
    return cljs.core.not_EQ_.call(null, this$.props["value"], next_props["value"]);
  }});
  return function(react_component) {
    return function() {
      var G__27445__delegate = function(value, static_args) {
        return react_component.call(null, {"statics":static_args, "value":value});
      };
      var G__27445 = function(value, var_args) {
        var static_args = null;
        if (arguments.length > 1) {
          static_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__27445__delegate.call(this, value, static_args);
      };
      G__27445.cljs$lang$maxFixedArity = 1;
      G__27445.cljs$lang$applyTo = function(arglist__27446) {
        var value = cljs.core.first(arglist__27446);
        var static_args = cljs.core.rest(arglist__27446);
        return G__27445__delegate(value, static_args);
      };
      G__27445.cljs$core$IFn$_invoke$arity$variadic = G__27445__delegate;
      return G__27445;
    }();
  }(react_component);
};
kioo.core.make_dom = function make_dom(node) {
  if (cljs.core.map_QMARK_.call(null, node)) {
    return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(node), cljs.core.clj__GT_js.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node)), kioo.util.flatten_nodes.call(null, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(node)));
  } else {
    return node;
  }
};
kioo.core.to_list = function to_list(vals) {
  if (cljs.core.seq_QMARK_.call(null, vals)) {
    return vals;
  } else {
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, vals);
  }
};
kioo.core.handle_wrapper = function handle_wrapper(dom_fn) {
  return function() {
    var hw__delegate = function(node, body) {
      var rnode = cljs.core.seq_QMARK_.call(null, node) ? cljs.core.apply.call(null, hw, node) : cljs.core.map_QMARK_.call(null, node) && !cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "events", "events", 1792552201)).cljs$core$IFn$_invoke$arity$1(node)) ? function() {
        var revents = (new cljs.core.Keyword(null, "events", "events", 1792552201)).cljs$core$IFn$_invoke$arity$1(node);
        return kioo.util.WrapComponent.call(null, cljs.core.clj__GT_js.call(null, cljs.core.assoc.call(null, revents, new cljs.core.Keyword(null, "wrappee", "wrappee", 876822573), dom_fn.call(null, node))));
      }() : dom_fn.call(null, node);
      if (cljs.core.empty_QMARK_.call(null, body)) {
        return rnode;
      } else {
        return cljs.core.cons.call(null, rnode, kioo.core.to_list.call(null, cljs.core.apply.call(null, hw, body)));
      }
    };
    var hw = function(node, var_args) {
      var body = null;
      if (arguments.length > 1) {
        body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return hw__delegate.call(this, node, body);
    };
    hw.cljs$lang$maxFixedArity = 1;
    hw.cljs$lang$applyTo = function(arglist__27447) {
      var node = cljs.core.first(arglist__27447);
      var body = cljs.core.rest(arglist__27447);
      return hw__delegate(node, body);
    };
    hw.cljs$core$IFn$_invoke$arity$variadic = hw__delegate;
    return hw;
  }();
};
kioo.core.content = kioo.common.content;
kioo.core.append = kioo.common.append;
kioo.core.prepend = kioo.common.prepend;
kioo.core.after = function() {
  var after__delegate = function(body) {
    return function(node) {
      return cljs.core.cons.call(null, kioo.core.make_dom.call(null, node), body);
    };
  };
  var after = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return after__delegate.call(this, body);
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__27448) {
    var body = cljs.core.seq(arglist__27448);
    return after__delegate(body);
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after;
}();
kioo.core.before = function() {
  var before__delegate = function(body) {
    return function(node) {
      return kioo.util.flatten_nodes.call(null, cljs.core.concat.call(null, body, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.core.make_dom.call(null, node)], null)));
    };
  };
  var before = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return before__delegate.call(this, body);
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__27449) {
    var body = cljs.core.seq(arglist__27449);
    return before__delegate(body);
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before;
}();
kioo.core.substitute = kioo.common.substitute;
kioo.core.set_attr = kioo.common.set_attr;
kioo.core.remove_attr = kioo.common.remove_attr;
kioo.core.do__GT_ = kioo.common.do__GT_;
kioo.core.set_style = kioo.common.set_style;
kioo.core.remove_style = kioo.common.remove_style;
kioo.core.set_class = kioo.common.set_class;
kioo.core.add_class = kioo.common.add_class;
kioo.core.remove_class = kioo.common.remove_class;
kioo.core.wrap = function wrap(tag, attrs) {
  return function(node) {
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "sym", "sym", -1444860305), React.DOM[cljs.core.name.call(null, tag)], new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), kioo.util.convert_attrs.call(null, attrs), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.core.make_dom.call(null, node)], null)], 
    null);
  };
};
kioo.core.unwrap = kioo.common.unwrap;
kioo.core.html = function html(content) {
  return sablono.interpreter.interpret.call(null, content);
};
kioo.core.html_content = function html_content(content) {
  return function(node) {
    var children = cljs.core.map.call(null, function(p1__27450_SHARP_) {
      return sablono.interpreter.interpret.call(null, hickory.core.as_hiccup.call(null, p1__27450_SHARP_));
    }, hickory.core.parse_fragment.call(null, content));
    return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), children);
  };
};
kioo.core.react_events = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["onRender", null, "onUpdate", null, "onMount", null], null), null);
kioo.core.listen = function() {
  var listen__delegate = function(events_PLUS_fns) {
    var pairs = cljs.core.map.call(null, function(p__27459) {
      var vec__27460 = p__27459;
      var k = cljs.core.nth.call(null, vec__27460, 0, null);
      var v = cljs.core.nth.call(null, vec__27460, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.util.camel_case.call(null, k), v], null);
    }, cljs.core.partition.call(null, 2, events_PLUS_fns));
    var vec__27458 = cljs.core.reduce.call(null, function(pairs) {
      return function(p__27461, p__27462) {
        var vec__27463 = p__27461;
        var r = cljs.core.nth.call(null, vec__27463, 0, null);
        var s = cljs.core.nth.call(null, vec__27463, 1, null);
        var vec__27464 = p__27462;
        var k = cljs.core.nth.call(null, vec__27464, 0, null);
        var v = cljs.core.nth.call(null, vec__27464, 1, null);
        if (cljs.core.truth_(kioo.core.react_events.call(null, k))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, r, k, v), s], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, cljs.core.assoc.call(null, s, k, v)], null);
        }
      };
    }(pairs), cljs.core.PersistentVector.EMPTY, pairs);
    var rev = cljs.core.nth.call(null, vec__27458, 0, null);
    var sev = cljs.core.nth.call(null, vec__27458, 1, null);
    return function(pairs, vec__27458, rev, sev) {
      return function(node) {
        return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node), sev), new cljs.core.Keyword(null, "events", "events", 1792552201), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "events", "events", 1792552201)).cljs$core$IFn$_invoke$arity$1(node), rev));
      };
    }(pairs, vec__27458, rev, sev);
  };
  var listen = function(var_args) {
    var events_PLUS_fns = null;
    if (arguments.length > 0) {
      events_PLUS_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return listen__delegate.call(this, events_PLUS_fns);
  };
  listen.cljs$lang$maxFixedArity = 0;
  listen.cljs$lang$applyTo = function(arglist__27465) {
    var events_PLUS_fns = cljs.core.seq(arglist__27465);
    return listen__delegate(events_PLUS_fns);
  };
  listen.cljs$core$IFn$_invoke$arity$variadic = listen__delegate;
  return listen;
}();
kioo.core.render = function render(component, node) {
  return React.renderComponent(component, node);
};
goog.provide("kioo.om");
goog.require("cljs.core");
goog.require("kioo.util");
goog.require("kioo.core");
goog.require("om.dom");
kioo.om.make_dom = function() {
  var make_dom__delegate = function(node, body) {
    if (cljs.core.map_QMARK_.call(null, node)) {
      return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(node), cljs.core.clj__GT_js.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node)), kioo.util.flatten_nodes.call(null, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(node)));
    } else {
      return node;
    }
  };
  var make_dom = function(node, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return make_dom__delegate.call(this, node, body);
  };
  make_dom.cljs$lang$maxFixedArity = 1;
  make_dom.cljs$lang$applyTo = function(arglist__27431) {
    var node = cljs.core.first(arglist__27431);
    var body = cljs.core.rest(arglist__27431);
    return make_dom__delegate(node, body);
  };
  make_dom.cljs$core$IFn$_invoke$arity$variadic = make_dom__delegate;
  return make_dom;
}();
kioo.om.content = kioo.core.content;
kioo.om.append = kioo.core.append;
kioo.om.prepend = kioo.core.prepend;
kioo.om.after = function() {
  var after__delegate = function(body) {
    return function(node) {
      return cljs.core.cons.call(null, kioo.om.make_dom.call(null, node), body);
    };
  };
  var after = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return after__delegate.call(this, body);
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__27432) {
    var body = cljs.core.seq(arglist__27432);
    return after__delegate(body);
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after;
}();
kioo.om.before = function() {
  var before__delegate = function(body) {
    return function(node) {
      return kioo.util.flatten_nodes.call(null, cljs.core.concat.call(null, body, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.om.make_dom.call(null, node)], null)));
    };
  };
  var before = function(var_args) {
    var body = null;
    if (arguments.length > 0) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return before__delegate.call(this, body);
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__27433) {
    var body = cljs.core.seq(arglist__27433);
    return before__delegate(body);
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before;
}();
kioo.om.substitute = kioo.core.substitute;
kioo.om.set_attr = kioo.core.set_attr;
kioo.om.remove_attr = kioo.core.remove_attr;
kioo.om.do__GT_ = kioo.core.do__GT_;
kioo.om.set_style = kioo.core.set_style;
kioo.om.remove_style = kioo.core.remove_style;
kioo.om.set_class = kioo.core.set_class;
kioo.om.add_class = kioo.core.add_class;
kioo.om.remove_class = kioo.core.remove_class;
kioo.om.wrap = function wrap(tag, attrs) {
  return function(node) {
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "sym", "sym", -1444860305), React.DOM[cljs.core.name.call(null, tag)], new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), kioo.util.convert_attrs.call(null, attrs), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.om.make_dom.call(null, node)], null)], 
    null);
  };
};
kioo.om.unwrap = kioo.core.unwrap;
kioo.om.html = kioo.core.html;
kioo.om.html_content = kioo.core.html_content;
kioo.om.listen = kioo.core.listen;
goog.provide("clui_om.kioo_om_tut");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("kioo.core");
goog.require("kioo.om");
clui_om.kioo_om_tut.src_doc = "public/html/frags/kioo-om-frag.tpl.html";
clui_om.kioo_om_tut.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "heading", "heading", -1312171873), "main", new cljs.core.Keyword(null, "content", "content", 15833224), "Hello World", new cljs.core.Keyword(null, "navigation", "navigation", 369417), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["home", function(p1__17238_SHARP_) {
  return alert(p1__17238_SHARP_);
}], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["next", function(p1__17239_SHARP_) {
  return alert(p1__17239_SHARP_);
}], null)], null)], null));
clui_om.kioo_om_tut.APP_ROOT = document.getElementById("kioo-app-div");
clui_om.kioo_om_tut.my_nav_item = function my_nav_item(p__17241) {
  var vec__17243 = p__17241;
  var caption = cljs.core.nth.call(null, vec__17243, 0, null);
  var func = cljs.core.nth.call(null, vec__17243, 1, null);
  var ch17240 = kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.li, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "nav-item", new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.do__GT_.call(null, kioo.om.content.call(null, caption), kioo.om.listen.call(null, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(vec__17243, caption, func) {
    return function() {
      return func.call(null, caption);
    };
  }(vec__17243, caption, func))).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null), 
  new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Placeholder"], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.a], null)))], null)))], null));
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ch17240))) {
    return cljs.core.first.call(null, ch17240);
  } else {
    return cljs.core.apply.call(null, om.dom.span, null, ch17240);
  }
};
clui_om.kioo_om_tut.my_header = function my_header(p__17245) {
  var map__17247 = p__17245;
  var map__17247__$1 = cljs.core.seq_QMARK_.call(null, map__17247) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17247) : map__17247;
  var navigation = cljs.core.get.call(null, map__17247__$1, new cljs.core.Keyword(null, "navigation", "navigation", 369417));
  var heading = cljs.core.get.call(null, map__17247__$1, new cljs.core.Keyword(null, "heading", "heading", -1312171873));
  var ch17244 = kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.header, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["\n        ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.content.call(null, heading).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "h1", "h1", -1896887462), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", 
  -496642736), null], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Header placeholder"], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.h1], null))), "\n        ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.content.call(null, cljs.core.map.call(null, clui_om.kioo_om_tut.my_nav_item, navigation)).call(null, 
  new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "id", "id", -1388402092), "navigation"], null), new cljs.core.Keyword(null, 
  "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n          ", cljs.core.apply.call(null, om.dom.li, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "nav-item", new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.a, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Placeholder"], 
  null)))], null))), "\n        "], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.ul], null))), "\n      "], null)))], null));
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ch17244))) {
    return cljs.core.first.call(null, ch17244);
  } else {
    return cljs.core.apply.call(null, om.dom.span, null, ch17244);
  }
};
clui_om.kioo_om_tut.my_page = function my_page(data) {
  var ch17248 = kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.div, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "id", "id", -1388402092), "kioo-om-frag"], null)), kioo.util.flatten_nodes.call(null, 
  new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n      ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.substitute.call(null, clui_om.kioo_om_tut.my_header.call(null, data)).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "header", "header", 119441134), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n        ", cljs.core.apply.call(null, om.dom.h1, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", 
  -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Header placeholder"], null))), "\n        ", cljs.core.apply.call(null, om.dom.ul, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), 
  null, new cljs.core.Keyword(null, "id", "id", -1388402092), "navigation"], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n          ", cljs.core.apply.call(null, om.dom.li, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "nav-item", new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.a, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["Placeholder"], null)))], null))), "\n        "], null))), "\n      "], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.header], null))), "\n      ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.content.call(null, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(data)).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, 
  "div", "div", 1057191632), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content", new cljs.core.Keyword(null, "style", "style", -496642736), null], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["place holder"], null)), new cljs.core.Keyword(null, 
  "sym", "sym", -1444860305), om.dom.div], null))), "\n "], null))), "\n"], null));
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ch17248))) {
    return cljs.core.first.call(null, ch17248);
  } else {
    return cljs.core.apply.call(null, om.dom.span, null, ch17248);
  }
};
clui_om.kioo_om_tut.init = function init(data) {
  if (typeof clui_om.kioo_om_tut.t17252 !== "undefined") {
  } else {
    clui_om.kioo_om_tut.t17252 = function(data, init, meta17253) {
      this.data = data;
      this.init = init;
      this.meta17253 = meta17253;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.kioo_om_tut.t17252.prototype.om$core$IRender$ = true;
    clui_om.kioo_om_tut.t17252.prototype.om$core$IRender$render$arity$1 = function(this__5270__auto__) {
      var self__ = this;
      var this__5270__auto____$1 = this;
      return clui_om.kioo_om_tut.my_page.call(null, self__.data);
    };
    clui_om.kioo_om_tut.t17252.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17254) {
      var self__ = this;
      var _17254__$1 = this;
      return self__.meta17253;
    };
    clui_om.kioo_om_tut.t17252.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17254, meta17253__$1) {
      var self__ = this;
      var _17254__$1 = this;
      return new clui_om.kioo_om_tut.t17252(self__.data, self__.init, meta17253__$1);
    };
    clui_om.kioo_om_tut.t17252.cljs$lang$type = true;
    clui_om.kioo_om_tut.t17252.cljs$lang$ctorStr = "clui-om.kioo-om-tut/t17252";
    clui_om.kioo_om_tut.t17252.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.kioo-om-tut/t17252");
    };
    clui_om.kioo_om_tut.__GT_t17252 = function __GT_t17252(data__$1, init__$1, meta17253) {
      return new clui_om.kioo_om_tut.t17252(data__$1, init__$1, meta17253);
    };
  }
  return new clui_om.kioo_om_tut.t17252(data, init, null);
};
clui_om.kioo_om_tut.other_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "msg", "msg", -1386103444), "Greetings, Terra!", new cljs.core.Keyword(null, "spam", "spam", 166033737), "Spam spam spam", new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false, new cljs.core.Keyword(null, "hover-on-class", "hover-on-class", -1937762798), "gold vanilla-border", new cljs.core.Keyword(null, "hover-off-class", "hover-off-class", 2120614683), 
""], null));
clui_om.kioo_om_tut.OTHER_ROOT = document.getElementById("kioo-other-div");
clui_om.kioo_om_tut.hover_set = function hover_set(b) {
  cljs.core.swap_BANG_.call(null, clui_om.kioo_om_tut.other_state, cljs.core.assoc, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), b);
  return console.log([cljs.core.str("Other-state hover status: "), cljs.core.str((new cljs.core.Keyword(null, "hovering", "hovering", -571536091)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clui_om.kioo_om_tut.other_state)))].join(""));
};
clui_om.kioo_om_tut.hover_class = function hover_class() {
  var class_picker = cljs.core.truth_((new cljs.core.Keyword(null, "hovering", "hovering", -571536091)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clui_om.kioo_om_tut.other_state))) ? new cljs.core.Keyword(null, "hover-on-class", "hover-on-class", -1937762798) : new cljs.core.Keyword(null, "hover-off-class", "hover-off-class", 2120614683);
  return class_picker.call(null, cljs.core.deref.call(null, clui_om.kioo_om_tut.other_state));
};
clui_om.kioo_om_tut.my_greeter = function my_greeter(p__17256) {
  var map__17258 = p__17256;
  var map__17258__$1 = cljs.core.seq_QMARK_.call(null, map__17258) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17258) : map__17258;
  var msg = cljs.core.get.call(null, map__17258__$1, new cljs.core.Keyword(null, "msg", "msg", -1386103444));
  var ch17255 = kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.do__GT_.call(null, kioo.om.listen.call(null, new cljs.core.Keyword(null, "onMouseOver", "onMouseOver", 1787360977), function(map__17258, map__17258__$1, msg) {
    return function() {
      return clui_om.kioo_om_tut.hover_set.call(null, true);
    };
  }(map__17258, map__17258__$1, msg)), kioo.om.listen.call(null, new cljs.core.Keyword(null, "onMouseOut", "onMouseOut", 1953812864), function(map__17258, map__17258__$1, msg) {
    return function() {
      return clui_om.kioo_om_tut.hover_set.call(null, false);
    };
  }(map__17258, map__17258__$1, msg)), kioo.om.set_attr.call(null, new cljs.core.Keyword(null, "className", "className", -1983287057), clui_om.kioo_om_tut.hover_class.call(null))).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", 
  -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "id", "id", -1388402092), "kioo-other-frag"], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n      ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.do__GT_.call(null, kioo.om.content.call(null, msg), kioo.om.listen.call(null, 
  new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__17258, map__17258__$1, msg) {
    return function() {
      return alert(msg);
    };
  }(map__17258, map__17258__$1, msg))).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "greeting", new cljs.core.Keyword(null, "style", "style", -496642736), null], null), new cljs.core.Keyword(null, "content", "content", 
  15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["placeholder text"], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.div], null))), "\n "], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.div], null)))], null));
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ch17255))) {
    return cljs.core.first.call(null, ch17255);
  } else {
    return cljs.core.apply.call(null, om.dom.span, null, ch17255);
  }
};
clui_om.kioo_om_tut.other_init = function other_init(data) {
  if (typeof clui_om.kioo_om_tut.t17262 !== "undefined") {
  } else {
    clui_om.kioo_om_tut.t17262 = function(data, other_init, meta17263) {
      this.data = data;
      this.other_init = other_init;
      this.meta17263 = meta17263;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.kioo_om_tut.t17262.prototype.om$core$IRender$ = true;
    clui_om.kioo_om_tut.t17262.prototype.om$core$IRender$render$arity$1 = function(this__5270__auto__) {
      var self__ = this;
      var this__5270__auto____$1 = this;
      return clui_om.kioo_om_tut.my_greeter.call(null, self__.data);
    };
    clui_om.kioo_om_tut.t17262.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17264) {
      var self__ = this;
      var _17264__$1 = this;
      return self__.meta17263;
    };
    clui_om.kioo_om_tut.t17262.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17264, meta17263__$1) {
      var self__ = this;
      var _17264__$1 = this;
      return new clui_om.kioo_om_tut.t17262(self__.data, self__.other_init, meta17263__$1);
    };
    clui_om.kioo_om_tut.t17262.cljs$lang$type = true;
    clui_om.kioo_om_tut.t17262.cljs$lang$ctorStr = "clui-om.kioo-om-tut/t17262";
    clui_om.kioo_om_tut.t17262.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.kioo-om-tut/t17262");
    };
    clui_om.kioo_om_tut.__GT_t17262 = function __GT_t17262(data__$1, other_init__$1, meta17263) {
      return new clui_om.kioo_om_tut.t17262(data__$1, other_init__$1, meta17263);
    };
  }
  return new clui_om.kioo_om_tut.t17262(data, other_init, null);
};
clui_om.kioo_om_tut.gamma_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), "waiting"], null));
clui_om.kioo_om_tut.GAMMA_ROOT = document.getElementById("kioo-gamma-div");
clui_om.kioo_om_tut.gamma_handler = function gamma_handler(e, owner) {
  console.log("gamma-handler called");
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "toggled", "toggled", 1679391819), cljs.core.not.call(null, om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "toggled", "toggled", 1679391819))));
};
clui_om.kioo_om_tut.gamma_snippet = function gamma_snippet(toggled, owner) {
  var ch17266 = kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, om.dom.div, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "id", "id", -1388402092), "gamma"], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 
  6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n   ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.content.call(null, cljs.core.truth_(toggled) ? "ATHENS" : "SPARTA").call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", 
  "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "id", "id", -1388402092), "output"], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["placeholder text"], null)), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.p], null))), "\n   ", cljs.core.apply.call(null, om.dom.p, 
  cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n      ", kioo.core.handle_wrapper.call(null, kioo.om.make_dom).call(null, kioo.om.listen.call(null, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), 
  function(p1__17265_SHARP_) {
    return clui_om.kioo_om_tut.gamma_handler.call(null, p1__17265_SHARP_, owner);
  }).call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "className", "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null, new cljs.core.Keyword(null, "value", "value", 305978217), "Toggle", new cljs.core.Keyword(null, 
  "id", "id", -1388402092), "toggle", new cljs.core.Keyword(null, "type", "type", 1174270348), "button"], null), new cljs.core.Keyword(null, "content", "content", 15833224), kioo.util.flatten_nodes.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "sym", "sym", -1444860305), om.dom.input], null))), "\n   "], null))), "\n", cljs.core.apply.call(null, om.dom.div, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", 
  "className", -1983287057), null, new cljs.core.Keyword(null, "style", "style", -496642736), null], null)), kioo.util.flatten_nodes.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n\n"], null)))], null)))], null));
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ch17266))) {
    return cljs.core.first.call(null, ch17266);
  } else {
    return cljs.core.apply.call(null, om.dom.span, null, ch17266);
  }
};
clui_om.kioo_om_tut.gamma_component = function gamma_component(app, owner, opts) {
  if (typeof clui_om.kioo_om_tut.t17272 !== "undefined") {
  } else {
    clui_om.kioo_om_tut.t17272 = function(opts, owner, app, gamma_component, meta17273) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.gamma_component = gamma_component;
      this.meta17273 = meta17273;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.kioo_om_tut.t17272.prototype.om$core$IRenderState$ = true;
    clui_om.kioo_om_tut.t17272.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__17275) {
      var self__ = this;
      var map__17276 = p__17275;
      var map__17276__$1 = cljs.core.seq_QMARK_.call(null, map__17276) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17276) : map__17276;
      var toggled = cljs.core.get.call(null, map__17276__$1, new cljs.core.Keyword(null, "toggled", "toggled", 1679391819));
      var ___$1 = this;
      return clui_om.kioo_om_tut.gamma_snippet.call(null, toggled, self__.owner);
    };
    clui_om.kioo_om_tut.t17272.prototype.om$core$IInitState$ = true;
    clui_om.kioo_om_tut.t17272.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "toggled", "toggled", 1679391819), false], null);
    };
    clui_om.kioo_om_tut.t17272.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17274) {
      var self__ = this;
      var _17274__$1 = this;
      return self__.meta17273;
    };
    clui_om.kioo_om_tut.t17272.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17274, meta17273__$1) {
      var self__ = this;
      var _17274__$1 = this;
      return new clui_om.kioo_om_tut.t17272(self__.opts, self__.owner, self__.app, self__.gamma_component, meta17273__$1);
    };
    clui_om.kioo_om_tut.t17272.cljs$lang$type = true;
    clui_om.kioo_om_tut.t17272.cljs$lang$ctorStr = "clui-om.kioo-om-tut/t17272";
    clui_om.kioo_om_tut.t17272.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.kioo-om-tut/t17272");
    };
    clui_om.kioo_om_tut.__GT_t17272 = function __GT_t17272(opts__$1, owner__$1, app__$1, gamma_component__$1, meta17273) {
      return new clui_om.kioo_om_tut.t17272(opts__$1, owner__$1, app__$1, gamma_component__$1, meta17273);
    };
  }
  return new clui_om.kioo_om_tut.t17272(opts, owner, app, gamma_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 42, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 95, new cljs.core.Keyword(null, "column", "column", 2078222095), 4, new cljs.core.Keyword(null, "line", "line", 212345235), 89, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/kioo_om_tut.cljs"], 
  null));
};
clui_om.kioo_om_tut.main = function main() {
  console.log("Hello from kioo-om-tut!");
  om.core.root.call(null, clui_om.kioo_om_tut.init, clui_om.kioo_om_tut.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.kioo_om_tut.APP_ROOT], null));
  om.core.root.call(null, clui_om.kioo_om_tut.other_init, clui_om.kioo_om_tut.other_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.kioo_om_tut.OTHER_ROOT], null));
  return om.core.root.call(null, clui_om.kioo_om_tut.gamma_component, clui_om.kioo_om_tut.gamma_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.kioo_om_tut.GAMMA_ROOT], null));
};
goog.exportSymbol("clui_om.kioo_om_tut.main", clui_om.kioo_om_tut.main);
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.format");
schema.utils.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
    }
    return cljs.core.into.call(null, function() {
      var or__3628__auto__ = m;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4384__auto__ = function iter__26900(s__26901) {
        return new cljs.core.LazySeq(null, function() {
          var s__26901__$1 = s__26901;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__26901__$1);
            if (temp__4126__auto__) {
              var s__26901__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__26901__$2)) {
                var c__4382__auto__ = cljs.core.chunk_first.call(null, s__26901__$2);
                var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                var b__26903 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                if (function() {
                  var i__26902 = 0;
                  while (true) {
                    if (i__26902 < size__4383__auto__) {
                      var vec__26906 = cljs.core._nth.call(null, c__4382__auto__, i__26902);
                      var k = cljs.core.nth.call(null, vec__26906, 0, null);
                      var v = cljs.core.nth.call(null, vec__26906, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__26903, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__26908 = i__26902 + 1;
                        i__26902 = G__26908;
                        continue;
                      } else {
                        var G__26909 = i__26902 + 1;
                        i__26902 = G__26909;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26903), iter__26900.call(null, cljs.core.chunk_rest.call(null, s__26901__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26903), null);
                }
              } else {
                var vec__26907 = cljs.core.first.call(null, s__26901__$2);
                var k = cljs.core.nth.call(null, vec__26907, 0, null);
                var v = cljs.core.nth.call(null, vec__26907, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__26900.call(null, cljs.core.rest.call(null, s__26901__$2)));
                } else {
                  var G__26910 = cljs.core.rest.call(null, s__26901__$2);
                  s__26901__$1 = G__26910;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4384__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__26911) {
    var m = cljs.core.first(arglist__26911);
    var kvs = cljs.core.rest(arglist__26911);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
schema.utils.type_of = function type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function() {
  var format_STAR___delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format_STAR_ = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format_STAR___delegate.call(this, fmt, args);
  };
  format_STAR_.cljs$lang$maxFixedArity = 1;
  format_STAR_.cljs$lang$applyTo = function(arglist__26912) {
    var fmt = cljs.core.first(arglist__26912);
    var args = cljs.core.rest(arglist__26912);
    return format_STAR___delegate(fmt, args);
  };
  format_STAR_.cljs$core$IFn$_invoke$arity$variadic = format_STAR___delegate;
  return format_STAR_;
}();
schema.utils.value_name = function value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, [cljs.core.str(value)].join("")) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, [cljs.core.str("a-"), cljs.core.str(t)].join(""));
  }
};
schema.utils.memoize_id = function memoize_id(f) {
  return cljs.core.memoize.call(null, f);
};
schema.utils.record_QMARK_ = function record_QMARK_(x) {
  var G__26914 = x;
  if (G__26914) {
    var bit__4309__auto__ = G__26914.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4309__auto__ || G__26914.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__26914.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__26914);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__26914);
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "schema.utils/ValidationError");
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__3628__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "schema.utils/NamedError");
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap, __hash) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k26916, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__26918 = k26916 instanceof cljs.core.Keyword ? k26916.fqn : null;
  switch(G__26918) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k26916, else__4234__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__26915) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__26919 = cljs.core.keyword_identical_QMARK_;
  var expr__26920 = k__4239__auto__;
  if (cljs.core.truth_(pred__26919.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__26920))) {
    return new schema.utils.ErrorContainer(G__26915, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__26915), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__26915) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__26915, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function __GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error, null, null, null);
};
schema.utils.map__GT_ErrorContainer = function map__GT_ErrorContainer(G__26917) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__26917), null, cljs.core.dissoc.call(null, G__26917, new cljs.core.Keyword(null, "error", "error", -978969032)), null);
};
schema.utils.error = function error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null)))].join(""));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function error_val(x) {
  if (schema.utils.error_QMARK_.call(null, x)) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function wrap_error_name(name, maybe_error) {
  var temp__4124__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function result_builder(lift_to_error) {
  return function conjer(m, e) {
    var temp__4124__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var err = temp__4124__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__3628__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4124__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var merr = temp__4124__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
  var obj26924 = {};
  return obj26924;
}();
schema.utils.get_cell = function get_cell(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.schema$utils$PSimpleCell$get_cell$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = schema.utils.get_cell[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = schema.utils.get_cell["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.utils.set_cell = function set_cell(this$, x) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.schema$utils$PSimpleCell$set_cell$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = schema.utils.set_cell[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = schema.utils.set_cell["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
        }
      }
    }().call(null, this$, x);
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "schema.utils/SimpleVCell");
};
schema.utils.__GT_SimpleVCell = function __GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("clojure.string");
schema.core.Schema = function() {
  var obj27174 = {};
  return obj27174;
}();
schema.core.walker = function walker(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.schema$core$Schema$walker$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = schema.core.walker[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = schema.core.walker["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.explain = function explain(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.schema$core$Schema$explain$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = schema.core.explain[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = schema.core.explain["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.subschema_walker = function subschema_walker(s) {
  throw new Error([cljs.core.str("Walking is unsupported outside of start-walker; "), cljs.core.str("all composite schemas must eagerly bind subschema-walkers "), cljs.core.str("outside the returned walker.")].join(""));
};
schema.core.start_walker = function start_walker(sub_walker, schema__$1) {
  var subschema_walker27176 = schema.core.subschema_walker;
  try {
    schema.core.subschema_walker = sub_walker;
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker27176;
  }
};
schema.core.checker = function checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.utils.memoize_id.call(null, schema.core.walker), schema__$1));
};
schema.core.check = function check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function validate(schema__$1, value) {
  var temp__4126__auto___27177 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4126__auto___27177)) {
    var error_27178 = temp__4126__auto___27177;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_27178)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error_27178, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", 
    "error", "schema.core/error", 1991454308)], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var more_schema = temp__4124__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__3628__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__3628__auto__ = this$ === x.constructor;
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var more_schema = temp__4124__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap, __hash) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27180, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27182 = k27180 instanceof cljs.core.Keyword ? k27180.fqn : null;
  switch(G__27182) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27180, else__4234__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27179) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27183 = cljs.core.keyword_identical_QMARK_;
  var expr__27184 = k__4239__auto__;
  if (cljs.core.truth_(pred__27183.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__27184))) {
    return new schema.core.AnythingSchema(G__27179, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27179), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27179) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__27179, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function __GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_, null, null, null);
};
schema.core.map__GT_AnythingSchema = function map__GT_AnythingSchema(G__27181) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__27181), null, cljs.core.dissoc.call(null, G__27181, new cljs.core.Keyword(null, "_", "_", 1453416199)), null);
};
schema.core.Any = new schema.core.AnythingSchema(null, null, null, null);
schema.core.EqSchema = function(v, __meta, __extmap, __hash) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27188, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27190 = k27188 instanceof cljs.core.Keyword ? k27188.fqn : null;
  switch(G__27190) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27188, else__4234__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.EqSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27187) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27191 = cljs.core.keyword_identical_QMARK_;
  var expr__27192 = k__4239__auto__;
  if (cljs.core.truth_(pred__27191.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__27192))) {
    return new schema.core.EqSchema(G__27187, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27187), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27187) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__27187, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function __GT_EqSchema(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.map__GT_EqSchema = function map__GT_EqSchema(G__27189) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__27189), null, cljs.core.dissoc.call(null, G__27189, new cljs.core.Keyword(null, "v", "v", 21465059)), null);
};
schema.core.eq = function eq(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.Isa = function(h, parent, __meta, __extmap, __hash) {
  this.h = h;
  this.parent = parent;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27196, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27198 = k27196 instanceof cljs.core.Keyword ? k27196.fqn : null;
  switch(G__27198) {
    case "parent":
      return self__.parent;
      break;
    case "h":
      return self__.h;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27196, else__4234__auto__);
  }
};
schema.core.Isa.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Isa{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Isa.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Isa.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Isa.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Isa.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "h", "h", 1109658740), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Isa.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27195) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27199 = cljs.core.keyword_identical_QMARK_;
  var expr__27200 = k__4239__auto__;
  if (cljs.core.truth_(pred__27199.call(null, new cljs.core.Keyword(null, "h", "h", 1109658740), expr__27200))) {
    return new schema.core.Isa(G__27195, self__.parent, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27199.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__27200))) {
      return new schema.core.Isa(self__.h, G__27195, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27195), null);
    }
  }
};
schema.core.Isa.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27195) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, G__27195, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Isa.prototype.schema$core$Schema$ = true;
schema.core.Isa.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(child) {
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = function() {
          var and__3616__auto__ = self__.h;
          if (cljs.core.truth_(and__3616__auto__)) {
            return cljs.core.isa_QMARK_.call(null, self__.h, child, self__.parent);
          } else {
            return and__3616__auto__;
          }
        }();
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return cljs.core.isa_QMARK_.call(null, child, self__.parent);
        }
      }())) {
        return child;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, child, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), child), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Isa.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
};
schema.core.Isa.cljs$lang$type = true;
schema.core.Isa.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Isa");
};
schema.core.Isa.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Isa");
};
schema.core.__GT_Isa = function __GT_Isa(h, parent) {
  return new schema.core.Isa(h, parent, null, null, null);
};
schema.core.map__GT_Isa = function map__GT_Isa(G__27197) {
  return new schema.core.Isa((new cljs.core.Keyword(null, "h", "h", 1109658740)).cljs$core$IFn$_invoke$arity$1(G__27197), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__27197), null, cljs.core.dissoc.call(null, G__27197, new cljs.core.Keyword(null, "h", "h", 1109658740), new cljs.core.Keyword(null, "parent", "parent", -878878779)), null);
};
schema.core.isa = function() {
  var isa = null;
  var isa__1 = function(parent) {
    return new schema.core.Isa(null, parent, null, null, null);
  };
  var isa__2 = function(h, parent) {
    return new schema.core.Isa(h, parent, null, null, null);
  };
  isa = function(h, parent) {
    switch(arguments.length) {
      case 1:
        return isa__1.call(this, h);
      case 2:
        return isa__2.call(this, h, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa.cljs$core$IFn$_invoke$arity$1 = isa__1;
  isa.cljs$core$IFn$_invoke$arity$2 = isa__2;
  return isa;
}();
schema.core.EnumSchema = function(vs, __meta, __extmap, __hash) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27204, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27206 = k27204 instanceof cljs.core.Keyword ? k27204.fqn : null;
  switch(G__27206) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27204, else__4234__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27203) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27207 = cljs.core.keyword_identical_QMARK_;
  var expr__27208 = k__4239__auto__;
  if (cljs.core.truth_(pred__27207.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__27208))) {
    return new schema.core.EnumSchema(G__27203, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27203), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27203) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__27203, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function __GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs, null, null, null);
};
schema.core.map__GT_EnumSchema = function map__GT_EnumSchema(G__27205) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__27205), null, cljs.core.dissoc.call(null, G__27205, new cljs.core.Keyword(null, "vs", "vs", -2022097090)), null);
};
schema.core.enum$ = function() {
  var enum$__delegate = function(vs) {
    return new schema.core.EnumSchema(cljs.core.set.call(null, vs), null, null, null);
  };
  var enum$ = function(var_args) {
    var vs = null;
    if (arguments.length > 0) {
      vs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return enum$__delegate.call(this, vs);
  };
  enum$.cljs$lang$maxFixedArity = 0;
  enum$.cljs$lang$applyTo = function(arglist__27211) {
    var vs = cljs.core.seq(arglist__27211);
    return enum$__delegate(vs);
  };
  enum$.cljs$core$IFn$_invoke$arity$variadic = enum$__delegate;
  return enum$;
}();
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap, __hash) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27213, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27215 = k27213 instanceof cljs.core.Keyword ? k27213.fqn : null;
  switch(G__27215) {
    case "pred-name":
      return self__.pred_name;
      break;
    case "p?":
      return self__.p_QMARK_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27213, else__4234__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Predicate{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27212) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27216 = cljs.core.keyword_identical_QMARK_;
  var expr__27217 = k__4239__auto__;
  if (cljs.core.truth_(pred__27216.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__27217))) {
    return new schema.core.Predicate(G__27212, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27216.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__27217))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__27212, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27212), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27212) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__27212, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4124__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e27219) {
          if (e27219 instanceof Object) {
            var e = e27219;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e27219;
          }
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var reason = temp__4124__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4124__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4124__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.string_QMARK_)) {
          return new cljs.core.Symbol(null, "Str", "Str", 907970895, null);
        } else {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
        }
      }
    }
  }
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function __GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
};
schema.core.map__GT_Predicate = function map__GT_Predicate(G__27214) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__27214), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__27214), null, cljs.core.dissoc.call(null, G__27214, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)), null);
};
schema.core.pred = function() {
  var pred = null;
  var pred__1 = function(p_QMARK_) {
    return pred.call(null, p_QMARK_, p_QMARK_);
  };
  var pred__2 = function(p_QMARK_, pred_name) {
    if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
    }
    return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
  };
  pred = function(p_QMARK_, pred_name) {
    switch(arguments.length) {
      case 1:
        return pred__1.call(this, p_QMARK_);
      case 2:
        return pred__2.call(this, p_QMARK_, pred_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pred.cljs$core$IFn$_invoke$arity$1 = pred__1;
  pred.cljs$core$IFn$_invoke$arity$2 = pred__2;
  return pred;
}();
schema.core.protocol_name = function protocol_name(protocol) {
  return(new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap, __hash) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27222, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27224 = k27222 instanceof cljs.core.Keyword ? k27222.fqn : null;
  switch(G__27224) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27222, else__4234__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Protocol{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27221) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27225 = cljs.core.keyword_identical_QMARK_;
  var expr__27226 = k__4239__auto__;
  if (cljs.core.truth_(pred__27225.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__27226))) {
    return new schema.core.Protocol(G__27221, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27221), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27221) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__27221, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function __GT_Protocol(p) {
  return new schema.core.Protocol(p, null, null, null);
};
schema.core.map__GT_Protocol = function map__GT_Protocol(G__27223) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__27223), null, cljs.core.dissoc.call(null, G__27223, new cljs.core.Keyword(null, "p", "p", 151049309)), null);
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, [cljs.core.str('#"'), cljs.core.str([cljs.core.str(this$__$1)].join("").slice(1, -1)), cljs.core.str('"')].join(""));
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = RegExp;
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap, __hash) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27230, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27232 = k27230 instanceof cljs.core.Keyword ? k27230.fqn : null;
  switch(G__27232) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27230, else__4234__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Maybe{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27229) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27233 = cljs.core.keyword_identical_QMARK_;
  var expr__27234 = k__4239__auto__;
  if (cljs.core.truth_(pred__27233.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__27234))) {
    return new schema.core.Maybe(G__27229, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27229), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27229) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__27229, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function __GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.map__GT_Maybe = function map__GT_Maybe(G__27231) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__27231), null, cljs.core.dissoc.call(null, G__27231, new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.maybe = function maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27238, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27240 = k27238 instanceof cljs.core.Keyword ? k27238.fqn : null;
  switch(G__27240) {
    case "name":
      return self__.name;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27238, else__4234__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27237) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27241 = cljs.core.keyword_identical_QMARK_;
  var expr__27242 = k__4239__auto__;
  if (cljs.core.truth_(pred__27241.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__27242))) {
    return new schema.core.NamedSchema(G__27237, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27241.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__27242))) {
      return new schema.core.NamedSchema(self__.schema, G__27237, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27237), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27237) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__27237, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function __GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.map__GT_NamedSchema = function map__GT_NamedSchema(G__27239) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__27239), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__27239), null, cljs.core.dissoc.call(null, G__27239, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.named = function named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.Either = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27246, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27248 = k27246 instanceof cljs.core.Keyword ? k27246.fqn : null;
  switch(G__27248) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27246, else__4234__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Either{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27245) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27249 = cljs.core.keyword_identical_QMARK_;
  var expr__27250 = k__4239__auto__;
  if (cljs.core.truth_(pred__27249.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__27250))) {
    return new schema.core.Either(G__27245, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27245), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27245) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__27245, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (!schema.utils.error_QMARK_.call(null, res)) {
            return res;
          } else {
            var G__27253 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__27253;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function __GT_Either(schemas) {
  return new schema.core.Either(schemas, null, null, null);
};
schema.core.map__GT_Either = function map__GT_Either(G__27247) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__27247), null, cljs.core.dissoc.call(null, G__27247, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.either = function() {
  var either__delegate = function(schemas) {
    return new schema.core.Either(schemas, null, null, null);
  };
  var either = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return either__delegate.call(this, schemas);
  };
  either.cljs$lang$maxFixedArity = 0;
  either.cljs$lang$applyTo = function(arglist__27254) {
    var schemas = cljs.core.seq(arglist__27254);
    return either__delegate(schemas);
  };
  either.cljs$core$IFn$_invoke$arity$variadic = either__delegate;
  return either;
}();
schema.core.Both = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27256, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27258 = k27256 instanceof cljs.core.Keyword ? k27256.fqn : null;
  switch(G__27258) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27256, else__4234__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Both{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27255) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27259 = cljs.core.keyword_identical_QMARK_;
  var expr__27260 = k__4239__auto__;
  if (cljs.core.truth_(pred__27259.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__27260))) {
    return new schema.core.Both(G__27255, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27255), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27255) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__27255, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (schema.utils.error_QMARK_.call(null, x__$1)) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function __GT_Both(schemas) {
  return new schema.core.Both(schemas, null, null, null);
};
schema.core.map__GT_Both = function map__GT_Both(G__27257) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__27257), null, cljs.core.dissoc.call(null, G__27257, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.both = function() {
  var both__delegate = function(schemas) {
    return new schema.core.Both(schemas, null, null, null);
  };
  var both = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return both__delegate.call(this, schemas);
  };
  both.cljs$lang$maxFixedArity = 0;
  both.cljs$lang$applyTo = function(arglist__27263) {
    var schemas = cljs.core.seq(arglist__27263);
    return both__delegate(schemas);
  };
  both.cljs$core$IFn$_invoke$arity$variadic = both__delegate;
  return both;
}();
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap, __hash) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27265, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27267 = k27265 instanceof cljs.core.Keyword ? k27265.fqn : null;
  switch(G__27267) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27265, else__4234__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27264) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27268 = cljs.core.keyword_identical_QMARK_;
  var expr__27269 = k__4239__auto__;
  if (cljs.core.truth_(pred__27268.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__27269))) {
    return new schema.core.ConditionalSchema(G__27264, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27264), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27264) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__27264, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__27271) {
      var vec__27272 = p__27271;
      var pred = cljs.core.nth.call(null, vec__27272, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__27272, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__27273) {
          var vec__27274 = p__27273;
          var pred = cljs.core.nth.call(null, vec__27274, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__27275 = temp__4124__auto__;
        var _ = cljs.core.nth.call(null, vec__27275, 0, null);
        var match = cljs.core.nth.call(null, vec__27275, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4124__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4124__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__27276) {
      var vec__27277 = p__27276;
      var pred = cljs.core.nth.call(null, vec__27277, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__27277, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function __GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas, null, null, null);
};
schema.core.map__GT_ConditionalSchema = function map__GT_ConditionalSchema(G__27266) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__27266), null, cljs.core.dissoc.call(null, G__27266, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)), null);
};
schema.core.conditional = function() {
  var conditional__delegate = function(preds_and_schemas) {
    if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
    }
    return new schema.core.ConditionalSchema(function() {
      var iter__4384__auto__ = function iter__27287(s__27288) {
        return new cljs.core.LazySeq(null, function() {
          var s__27288__$1 = s__27288;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__27288__$1);
            if (temp__4126__auto__) {
              var s__27288__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__27288__$2)) {
                var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27288__$2);
                var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                var b__27290 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                if (function() {
                  var i__27289 = 0;
                  while (true) {
                    if (i__27289 < size__4383__auto__) {
                      var vec__27293 = cljs.core._nth.call(null, c__4382__auto__, i__27289);
                      var pred = cljs.core.nth.call(null, vec__27293, 0, null);
                      var schema__$1 = cljs.core.nth.call(null, vec__27293, 1, null);
                      cljs.core.chunk_append.call(null, b__27290, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                      var G__27295 = i__27289 + 1;
                      i__27289 = G__27295;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27290), iter__27287.call(null, cljs.core.chunk_rest.call(null, s__27288__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27290), null);
                }
              } else {
                var vec__27294 = cljs.core.first.call(null, s__27288__$2);
                var pred = cljs.core.nth.call(null, vec__27294, 0, null);
                var schema__$1 = cljs.core.nth.call(null, vec__27294, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), iter__27287.call(null, cljs.core.rest.call(null, s__27288__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4384__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
    }(), null, null, null);
  };
  var conditional = function(var_args) {
    var preds_and_schemas = null;
    if (arguments.length > 0) {
      preds_and_schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return conditional__delegate.call(this, preds_and_schemas);
  };
  conditional.cljs$lang$maxFixedArity = 0;
  conditional.cljs$lang$applyTo = function(arglist__27296) {
    var preds_and_schemas = cljs.core.seq(arglist__27296);
    return conditional__delegate(preds_and_schemas);
  };
  conditional.cljs$core$IFn$_invoke$arity$variadic = conditional__delegate;
  return conditional;
}();
schema.core.if$ = function if$(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27298, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27300 = k27298 instanceof cljs.core.Keyword ? k27298.fqn : null;
  switch(G__27300) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27298, else__4234__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27297) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27301 = cljs.core.keyword_identical_QMARK_;
  var expr__27302 = k__4239__auto__;
  if (cljs.core.truth_(pred__27301.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__27302))) {
    return new schema.core.RequiredKey(G__27297, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27297), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27297) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__27297, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function __GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k, null, null, null);
};
schema.core.map__GT_RequiredKey = function map__GT_RequiredKey(G__27299) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__27299), null, cljs.core.dissoc.call(null, G__27299, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.required_key = function required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k, null, null, null);
  }
};
schema.core.required_key_QMARK_ = function required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27306, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27308 = k27306 instanceof cljs.core.Keyword ? k27306.fqn : null;
  switch(G__27308) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27306, else__4234__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27305) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27309 = cljs.core.keyword_identical_QMARK_;
  var expr__27310 = k__4239__auto__;
  if (cljs.core.truth_(pred__27309.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__27310))) {
    return new schema.core.OptionalKey(G__27305, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27305), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27305) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__27305, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function __GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.map__GT_OptionalKey = function map__GT_OptionalKey(G__27307) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__27307), null, cljs.core.dissoc.call(null, G__27307, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.optional_key = function optional_key(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.optional_key_QMARK_ = function optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (schema.core.optional_key_QMARK_.call(null, ks)) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function specific_key_QMARK_(ks) {
  return schema.core.required_key_QMARK_.call(null, ks) || schema.core.optional_key_QMARK_.call(null, ks);
};
schema.core.explain_kspec = function explain_kspec(kspec) {
  if (schema.core.specific_key_QMARK_.call(null, kspec)) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), schema.core.required_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : schema.core.optional_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap, __hash) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27314, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27316 = k27314 instanceof cljs.core.Keyword ? k27314.fqn : null;
  switch(G__27316) {
    case "val-schema":
      return self__.val_schema;
      break;
    case "kspec":
      return self__.kspec;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27314, else__4234__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.MapEntry{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27313) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27317 = cljs.core.keyword_identical_QMARK_;
  var expr__27318 = k__4239__auto__;
  if (cljs.core.truth_(pred__27317.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__27318))) {
    return new schema.core.MapEntry(G__27313, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27317.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__27318))) {
      return new schema.core.MapEntry(self__.kspec, G__27313, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27313), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27313) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__27313, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (schema.core.specific_key_QMARK_.call(null, self__.kspec)) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (optional_QMARK_) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__27320 = x;
            var xk = cljs.core.nth.call(null, vec__27320, 0, null);
            var xv = cljs.core.nth.call(null, vec__27320, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null))))].join(""));
            }
            var vres = val_walker.call(null, xv);
            var temp__4124__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var ve = temp__4124__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__3628__auto__ = out_ke;
            if (cljs.core.truth_(or__3628__auto__)) {
              return or__3628__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__3628__auto__ = out_ke;
              if (cljs.core.truth_(or__3628__auto__)) {
                return or__3628__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__3628__auto__ = out_ve;
              if (cljs.core.truth_(or__3628__auto__)) {
                return or__3628__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function __GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema, null, null, null);
};
schema.core.map__GT_MapEntry = function map__GT_MapEntry(G__27315) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__27315), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__27315), null, cljs.core.dissoc.call(null, G__27315, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)), null);
};
schema.core.map_entry = function map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema, null, null, null);
};
schema.core.find_extra_keys_schema = function find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.preserve_map_type = function preserve_map_type(original, walker_result) {
  if (schema.utils.record_QMARK_.call(null, original) && !schema.utils.error_QMARK_.call(null, walker_result)) {
    return cljs.core.into.call(null, original, walker_result);
  } else {
    return walker_result;
  }
};
schema.core.map_walker = function map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4384__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function iter__27336(s__27337) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__27337__$1 = s__27337;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__27337__$1);
              if (temp__4126__auto__) {
                var s__27337__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__27337__$2)) {
                  var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27337__$2);
                  var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                  var b__27339 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                  if (function() {
                    var i__27338 = 0;
                    while (true) {
                      if (i__27338 < size__4383__auto__) {
                        var vec__27342 = cljs.core._nth.call(null, c__4382__auto__, i__27338);
                        var k = cljs.core.nth.call(null, vec__27342, 0, null);
                        var v = cljs.core.nth.call(null, vec__27342, 1, null);
                        cljs.core.chunk_append.call(null, b__27339, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__27349 = i__27338 + 1;
                        i__27338 = G__27349;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27339), iter__27336.call(null, cljs.core.chunk_rest.call(null, s__27337__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27339), null);
                  }
                } else {
                  var vec__27343 = cljs.core.first.call(null, s__27337__$2);
                  var k = cljs.core.nth.call(null, vec__27343, 0, null);
                  var v = cljs.core.nth.call(null, vec__27343, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), iter__27336.call(null, cljs.core.rest.call(null, s__27337__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__4384__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__27322_SHARP_) {
        return cljs.core.count.call(null, p1__27322_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        return schema.core.preserve_map_type.call(null, x, function() {
          var ok_key = cljs.core.PersistentHashSet.EMPTY;
          var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
          var out = cljs.core.PersistentArrayMap.EMPTY;
          while (true) {
            if (cljs.core.not.call(null, explicit_walkers__$1)) {
              return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(out__$1, e) {
                  return err_conj.call(null, out__$1, extra_walker.call(null, e));
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(out__$1, p__27344) {
                  var vec__27345 = p__27344;
                  var k = cljs.core.nth.call(null, vec__27345, 0, null);
                  var _ = cljs.core.nth.call(null, vec__27345, 1, null);
                  return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, cljs.core.remove.call(null, function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(p__27346) {
                  var vec__27347 = p__27346;
                  var k = cljs.core.nth.call(null, vec__27347, 0, null);
                  var v = cljs.core.nth.call(null, vec__27347, 1, null);
                  return ok_key.call(null, k);
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), x));
            } else {
              var vec__27348 = cljs.core.first.call(null, explicit_walkers__$1);
              var wk = cljs.core.nth.call(null, vec__27348, 0, null);
              var wv = cljs.core.nth.call(null, vec__27348, 1, null);
              var G__27350 = cljs.core.conj.call(null, ok_key, wk);
              var G__27351 = cljs.core.next.call(null, explicit_walkers__$1);
              var G__27352 = err_conj.call(null, out, wv.call(null, function() {
                var or__3628__auto__ = cljs.core.find.call(null, x, wk);
                if (cljs.core.truth_(or__3628__auto__)) {
                  return or__3628__auto__;
                } else {
                  return schema.core._PLUS_missing_PLUS_;
                }
              }()));
              ok_key = G__27350;
              explicit_walkers__$1 = G__27351;
              out = G__27352;
              continue;
            }
            break;
          }
        }());
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4384__auto__ = function iter__27361(s__27362) {
      return new cljs.core.LazySeq(null, function() {
        var s__27362__$1 = s__27362;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27362__$1);
          if (temp__4126__auto__) {
            var s__27362__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27362__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27362__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__27364 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__27363 = 0;
                while (true) {
                  if (i__27363 < size__4383__auto__) {
                    var vec__27367 = cljs.core._nth.call(null, c__4382__auto__, i__27363);
                    var k = cljs.core.nth.call(null, vec__27367, 0, null);
                    var v = cljs.core.nth.call(null, vec__27367, 1, null);
                    cljs.core.chunk_append.call(null, b__27364, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__27369 = i__27363 + 1;
                    i__27363 = G__27369;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27364), iter__27361.call(null, cljs.core.chunk_rest.call(null, s__27362__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27364), null);
              }
            } else {
              var vec__27368 = cljs.core.first.call(null, s__27362__$2);
              var k = cljs.core.nth.call(null, vec__27368, 0, null);
              var v = cljs.core.nth.call(null, vec__27368, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), iter__27361.call(null, cljs.core.rest.call(null, s__27362__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, this$);
  }());
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__3628__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        var vec__27370 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__27370, 0, null);
        var bad = cljs.core.nth.call(null, vec__27370, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27372, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27374 = k27372 instanceof cljs.core.Keyword ? k27372.fqn : null;
  switch(G__27374) {
    case "name":
      return self__.name;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27372, else__4234__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.One{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27371) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27375 = cljs.core.keyword_identical_QMARK_;
  var expr__27376 = k__4239__auto__;
  if (cljs.core.truth_(pred__27375.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__27376))) {
    return new schema.core.One(G__27371, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27375.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__27376))) {
      return new schema.core.One(self__.schema, G__27371, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__27375.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__27376))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__27371, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27371), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27371) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__27371, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/One");
};
schema.core.__GT_One = function __GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name, null, null, null);
};
schema.core.map__GT_One = function map__GT_One(G__27373) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__27373), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__27373), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__27373), null, cljs.core.dissoc.call(null, G__27373, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.one = function one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name, null, null, null);
};
schema.core.optional = function optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name, null, null, null);
};
schema.core.parse_sequence_schema = function parse_sequence_schema(s) {
  var vec__27384 = cljs.core.split_with.call(null, function(p1__27379_SHARP_) {
    return p1__27379_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__27379_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__27384, 0, null);
  var more = cljs.core.nth.call(null, vec__27384, 1, null);
  var vec__27385 = cljs.core.split_with.call(null, function(vec__27384, required, more) {
    return function(p1__27380_SHARP_) {
      var and__3616__auto__ = p1__27380_SHARP_ instanceof schema.core.One;
      if (and__3616__auto__) {
        return(new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__27380_SHARP_);
      } else {
        return and__3616__auto__;
      }
    };
  }(vec__27384, required, more), more);
  var optional = cljs.core.nth.call(null, vec__27385, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__27385, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__27384, required, more, vec__27385, optional, more__$1) {
    return function(p1__27381_SHARP_) {
      return!(p1__27381_SHARP_ instanceof schema.core.One);
    };
  }(vec__27384, required, more, vec__27385, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__27386 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__27386, 0, null);
  var multi = cljs.core.nth.call(null, vec__27386, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__4384__auto__ = function(vec__27386, singles, multi, this$__$1) {
      return function iter__27387(s__27388) {
        return new cljs.core.LazySeq(null, function(vec__27386, singles, multi, this$__$1) {
          return function() {
            var s__27388__$1 = s__27388;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__27388__$1);
              if (temp__4126__auto__) {
                var s__27388__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__27388__$2)) {
                  var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27388__$2);
                  var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                  var b__27390 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                  if (function() {
                    var i__27389 = 0;
                    while (true) {
                      if (i__27389 < size__4383__auto__) {
                        var s = cljs.core._nth.call(null, c__4382__auto__, i__27389);
                        cljs.core.chunk_append.call(null, b__27390, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__27405 = i__27389 + 1;
                        i__27389 = G__27405;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27390), iter__27387.call(null, cljs.core.chunk_rest.call(null, s__27388__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27390), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__27388__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), iter__27387.call(null, cljs.core.rest.call(null, s__27388__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__27386, singles, multi, this$__$1), null, null);
      };
    }(vec__27386, singles, multi, this$__$1);
    return iter__4384__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__27386, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__27386, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__3628__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4124__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var vec__27391 = temp__4124__auto__;
            var first_single = cljs.core.nth.call(null, vec__27391, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__27391, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__4384__auto__ = function(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function iter__27392(s__27393) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__27393__$1 = s__27393;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__27393__$1);
                                if (temp__4126__auto__) {
                                  var s__27393__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__27393__$2)) {
                                    var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27393__$2);
                                    var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                                    var b__27395 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                                    if (function() {
                                      var i__27394 = 0;
                                      while (true) {
                                        if (i__27394 < size__4383__auto__) {
                                          var vec__27398 = cljs.core._nth.call(null, c__4382__auto__, i__27394);
                                          var single = cljs.core.nth.call(null, vec__27398, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__27395, single.name);
                                            var G__27406 = i__27394 + 1;
                                            i__27394 = G__27406;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27395), iter__27392.call(null, cljs.core.chunk_rest.call(null, s__27393__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27395), null);
                                    }
                                  } else {
                                    var vec__27399 = cljs.core.first.call(null, s__27393__$2);
                                    var single = cljs.core.nth.call(null, vec__27399, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, iter__27392.call(null, cljs.core.rest.call(null, s__27393__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__4384__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__27391, first_single, single_walker, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__27407 = cljs.core.next.call(null, single_walkers__$1);
              var G__27408 = cljs.core.rest.call(null, x__$1);
              var G__27409 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__27407;
              x__$1 = G__27408;
              out = G__27409;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3628__auto__, vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__27386, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__27400 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__27400, 0, null);
  var multi = cljs.core.nth.call(null, vec__27400, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__4384__auto__ = function(vec__27400, singles, multi, this$__$1) {
      return function iter__27401(s__27402) {
        return new cljs.core.LazySeq(null, function(vec__27400, singles, multi, this$__$1) {
          return function() {
            var s__27402__$1 = s__27402;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__27402__$1);
              if (temp__4126__auto__) {
                var s__27402__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__27402__$2)) {
                  var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27402__$2);
                  var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                  var b__27404 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                  if (function() {
                    var i__27403 = 0;
                    while (true) {
                      if (i__27403 < size__4383__auto__) {
                        var s = cljs.core._nth.call(null, c__4382__auto__, i__27403);
                        cljs.core.chunk_append.call(null, b__27404, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__27410 = i__27403 + 1;
                        i__27403 = G__27410;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27404), iter__27401.call(null, cljs.core.chunk_rest.call(null, s__27402__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27404), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__27402__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), iter__27401.call(null, cljs.core.rest.call(null, s__27402__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__27400, singles, multi, this$__$1), null, null);
      };
    }(vec__27400, singles, multi, this$__$1);
    return iter__4384__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap, __hash) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27412, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27414 = k27412 instanceof cljs.core.Keyword ? k27412.fqn : null;
  switch(G__27414) {
    case "schema":
      return self__.schema;
      break;
    case "klass":
      return self__.klass;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27412, else__4234__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.Record{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27411) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27415 = cljs.core.keyword_identical_QMARK_;
  var expr__27416 = k__4239__auto__;
  if (cljs.core.truth_(pred__27415.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__27416))) {
    return new schema.core.Record(G__27411, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27415.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__27416))) {
      return new schema.core.Record(self__.klass, G__27411, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27411), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27411) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__27411, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var evf = temp__4126__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__3628__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (schema.utils.error_QMARK_.call(null, res)) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (schema.utils.error_QMARK_.call(null, pred_res)) {
            return pred_res;
          } else {
            return res;
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function __GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1, null, null, null);
};
schema.core.map__GT_Record = function map__GT_Record(G__27413) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__27413), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__27413), null, cljs.core.dissoc.call(null, G__27413, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.record = function record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1, null, null, null);
};
schema.core.explain_input_schema = function explain_input_schema(input_schema) {
  var vec__27422 = cljs.core.split_with.call(null, function(p1__27419_SHARP_) {
    return p1__27419_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__27422, 0, null);
  var more = cljs.core.nth.call(null, vec__27422, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__27422, required, more) {
    return function(p1__27420_SHARP_) {
      return schema.core.explain.call(null, p1__27420_SHARP_.schema);
    };
  }(vec__27422, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap, __hash) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k27424, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__27426 = k27424 instanceof cljs.core.Keyword ? k27424.fqn : null;
  switch(G__27426) {
    case "input-schemas":
      return self__.input_schemas;
      break;
    case "output-schema":
      return self__.output_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27424, else__4234__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#schema.core.FnSchema{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__27423) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__27427 = cljs.core.keyword_identical_QMARK_;
  var expr__27428 = k__4239__auto__;
  if (cljs.core.truth_(pred__27427.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__27428))) {
    return new schema.core.FnSchema(G__27423, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27427.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__27428))) {
      return new schema.core.FnSchema(self__.output_schema, G__27423, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__27423), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__27423) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__27423, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.ifn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function __GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas, null, null, null);
};
schema.core.map__GT_FnSchema = function map__GT_FnSchema(G__27425) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__27425), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__27425), null, cljs.core.dissoc.call(null, G__27425, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)), null);
};
schema.core.arity = function arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas), null, null, null);
};
schema.core.schema_with_name = function schema_with_name(schema__$1, name) {
  return cljs.core.with_meta.call(null, schema__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), name], null));
};
schema.core.schema_name = function schema_name(schema__$1) {
  return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
schema.core.fn_validation_QMARK_ = function fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__3628__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    var m__10749__auto__ = cljs.core.meta.call(null, f);
    var k__10750__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4124__auto__ = cljs.core.find.call(null, m__10749__auto__, k__10750__auto__);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pair__10751__auto__ = temp__4124__auto__;
      return cljs.core.val.call(null, pair__10751__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__10750__auto__, m__10749__auto__));
    }
  }
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.core");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__10857__10858__auto__) {
  var G__26597 = p1__10857__10858__auto__;
  if (G__26597) {
    var bit__4309__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = bit__4309__auto__;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return G__26597.schema$core$Schema$;
      }
    }())) {
      return true;
    } else {
      if (!G__26597.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__26597);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__26597);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__26598_SHARP_) {
    return cljs.core.val.call(null, p1__26598_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__26600 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__26600, 0, null);
  var v = cljs.core.nth.call(null, vec__26600, 1, null);
  var p = vec__26600;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___26606 = schema.utils.use_fn_validation;
var output_schema26601_26607 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema26602_26608 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "k", "k", -505765866, null))], null);
var input_checker26603_26609 = schema.core.checker.call(null, input_schema26602_26608);
var output_checker26604_26610 = schema.core.checker.call(null, output_schema26601_26607);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___26606, output_schema26601_26607, input_schema26602_26608, input_checker26603_26609, output_checker26604_26610) {
  return function unwrap_schema_form_key(G__26605) {
    var validate__10827__auto__ = ufv___26606.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26605], null);
      var temp__4126__auto___26612 = input_checker26603_26609.call(null, args__10828__auto___26611);
      if (cljs.core.truth_(temp__4126__auto___26612)) {
        var error__10829__auto___26613 = temp__4126__auto___26612;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__10829__auto___26613)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26613, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26611, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26602_26608, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var k = G__26605;
      while (true) {
        if (schema.core.specific_key_QMARK_.call(null, k)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26614 = output_checker26604_26610.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26614)) {
        var error__10829__auto___26615 = temp__4126__auto___26614;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__10829__auto___26615)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26615, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26601_26607, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26606, output_schema26601_26607, input_schema26602_26608, input_checker26603_26609, output_checker26604_26610);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema26601_26607, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26602_26608], null)));
var ufv___26621 = schema.utils.use_fn_validation;
var output_schema26616_26622 = schema.core.Any;
var input_schema26617_26623 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker26618_26624 = schema.core.checker.call(null, input_schema26617_26623);
var output_checker26619_26625 = schema.core.checker.call(null, output_schema26616_26622);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___26621, output_schema26616_26622, input_schema26617_26623, input_checker26618_26624, output_checker26619_26625) {
  return function explicit_schema_key_map(G__26620) {
    var validate__10827__auto__ = ufv___26621.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26626 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26620], null);
      var temp__4126__auto___26627 = input_checker26618_26624.call(null, args__10828__auto___26626);
      if (cljs.core.truth_(temp__4126__auto___26627)) {
        var error__10829__auto___26628 = temp__4126__auto___26627;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__10829__auto___26628)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26628, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26626, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26617_26623, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var s = G__26620;
      while (true) {
        new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26629 = output_checker26619_26625.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26629)) {
        var error__10829__auto___26630 = temp__4126__auto___26629;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__10829__auto___26630)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26630, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26616_26622, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26621, output_schema26616_26622, input_schema26617_26623, input_checker26618_26624, output_checker26619_26625);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema26616_26622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26617_26623], null)));
var ufv___26636 = schema.utils.use_fn_validation;
var output_schema26631_26637 = schema.core.Any;
var input_schema26632_26638 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker26633_26639 = schema.core.checker.call(null, input_schema26632_26638);
var output_checker26634_26640 = schema.core.checker.call(null, output_schema26631_26637);
plumbing.fnk.schema.split_schema_keys = function(ufv___26636, output_schema26631_26637, input_schema26632_26638, input_checker26633_26639, output_checker26634_26640) {
  return function split_schema_keys(G__26635) {
    var validate__10827__auto__ = ufv___26636.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26635], null);
      var temp__4126__auto___26642 = input_checker26633_26639.call(null, args__10828__auto___26641);
      if (cljs.core.truth_(temp__4126__auto___26642)) {
        var error__10829__auto___26643 = temp__4126__auto___26642;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__10829__auto___26643)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26643, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26641, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26632_26638, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var s = G__26635;
      while (true) {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", "optional", -600484260, 
        null))], null);
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26644 = output_checker26634_26640.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26644)) {
        var error__10829__auto___26645 = temp__4126__auto___26644;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__10829__auto___26645)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26645, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26631_26637, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26636, output_schema26631_26637, input_schema26632_26638, input_checker26633_26639, output_checker26634_26640);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema26631_26637, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26632_26638], null)));
plumbing.fnk.schema.merge_on_with = function() {
  var merge_on_with__delegate = function(key_project, key_combine, val_combine, maps) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__26649) {
      var vec__26650 = p__26649;
      var k = cljs.core.nth.call(null, vec__26650, 0, null);
      var v = cljs.core.nth.call(null, vec__26650, 1, null);
      var pk = key_project.call(null, k);
      var temp__4124__auto__ = cljs.core.get.call(null, m, pk);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__26651 = temp__4124__auto__;
        var ok = cljs.core.nth.call(null, vec__26651, 0, null);
        var ov = cljs.core.nth.call(null, vec__26651, 1, null);
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
      } else {
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
  };
  var merge_on_with = function(key_project, key_combine, val_combine, var_args) {
    var maps = null;
    if (arguments.length > 3) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return merge_on_with__delegate.call(this, key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$lang$maxFixedArity = 3;
  merge_on_with.cljs$lang$applyTo = function(arglist__26652) {
    var key_project = cljs.core.first(arglist__26652);
    arglist__26652 = cljs.core.next(arglist__26652);
    var key_combine = cljs.core.first(arglist__26652);
    arglist__26652 = cljs.core.next(arglist__26652);
    var val_combine = cljs.core.first(arglist__26652);
    var maps = cljs.core.rest(arglist__26652);
    return merge_on_with__delegate(key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$core$IFn$_invoke$arity$variadic = merge_on_with__delegate;
  return merge_on_with;
}();
var ufv___26660 = schema.utils.use_fn_validation;
var output_schema26654_26661 = plumbing.fnk.schema.InputSchema;
var input_schema26655_26662 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i1", "i1", -572470430, null)), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i2", "i2", 850408895, null))], null);
var input_checker26656_26663 = schema.core.checker.call(null, input_schema26655_26662);
var output_checker26657_26664 = schema.core.checker.call(null, output_schema26654_26661);
plumbing.fnk.schema.union_input_schemata = function(ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664) {
  return function union_input_schemata(G__26658, G__26659) {
    var validate__10827__auto__ = ufv___26660.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26665 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26658, G__26659], null);
      var temp__4126__auto___26666 = input_checker26656_26663.call(null, args__10828__auto___26665);
      if (cljs.core.truth_(temp__4126__auto___26666)) {
        var error__10829__auto___26667 = temp__4126__auto___26666;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__10829__auto___26667)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26667, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26665, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26655_26662, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var i1 = G__26658;
      var i2 = G__26659;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664) {
          return function(p1__26653_SHARP_) {
            if (schema.core.specific_key_QMARK_.call(null, p1__26653_SHARP_)) {
              return schema.core.explicit_schema_key.call(null, p1__26653_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664), function(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664) {
          return function(k1, k2) {
            if (schema.core.required_key_QMARK_.call(null, k1)) {
              return k1;
            } else {
              if (schema.core.required_key_QMARK_.call(null, k2)) {
                return k2;
              } else {
                if (schema.core.optional_key_QMARK_.call(null, k1)) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null))))].join(""));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664), function(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664) {
          return function(s1, s2) {
            if (plumbing.fnk.schema.map_schema_QMARK_.call(null, s1) && plumbing.fnk.schema.map_schema_QMARK_.call(null, s2)) {
              return union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__10827__auto__, ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26668 = output_checker26657_26664.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26668)) {
        var error__10829__auto___26669 = temp__4126__auto___26668;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__10829__auto___26669)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26669, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26654_26661, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26660, output_schema26654_26661, input_schema26655_26662, input_checker26656_26663, output_checker26657_26664);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema26654_26661, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26655_26662], null)));
var ufv___26675 = schema.utils.use_fn_validation;
var output_schema26670_26676 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema26671_26677 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null))], null);
var input_checker26672_26678 = schema.core.checker.call(null, input_schema26671_26677);
var output_checker26673_26679 = schema.core.checker.call(null, output_schema26670_26676);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___26675, output_schema26670_26676, input_schema26671_26677, input_checker26672_26678, output_checker26673_26679) {
  return function required_toplevel_keys(G__26674) {
    var validate__10827__auto__ = ufv___26675.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26680 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26674], null);
      var temp__4126__auto___26681 = input_checker26672_26678.call(null, args__10828__auto___26680);
      if (cljs.core.truth_(temp__4126__auto___26681)) {
        var error__10829__auto___26682 = temp__4126__auto___26681;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__10829__auto___26682)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26682, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26680, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26671_26677, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var input_schema = G__26674;
      while (true) {
        return cljs.core.keep.call(null, function(validate__10827__auto__, ufv___26675, output_schema26670_26676, input_schema26671_26677, input_checker26672_26678, output_checker26673_26679) {
          return function(k) {
            if (schema.core.required_key_QMARK_.call(null, k)) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__10827__auto__, ufv___26675, output_schema26670_26676, input_schema26671_26677, input_checker26672_26678, output_checker26673_26679), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26683 = output_checker26673_26679.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26683)) {
        var error__10829__auto___26684 = temp__4126__auto___26683;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__10829__auto___26684)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26684, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26670_26676, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26675, output_schema26670_26676, input_schema26671_26677, input_checker26672_26678, output_checker26673_26679);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema26670_26676, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26671_26677], null)));
plumbing.fnk.schema.guess_expr_output_schema = function guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4384__auto__ = function iter__26693(s__26694) {
        return new cljs.core.LazySeq(null, function() {
          var s__26694__$1 = s__26694;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__26694__$1);
            if (temp__4126__auto__) {
              var s__26694__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__26694__$2)) {
                var c__4382__auto__ = cljs.core.chunk_first.call(null, s__26694__$2);
                var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                var b__26696 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                if (function() {
                  var i__26695 = 0;
                  while (true) {
                    if (i__26695 < size__4383__auto__) {
                      var vec__26699 = cljs.core._nth.call(null, c__4382__auto__, i__26695);
                      var k = cljs.core.nth.call(null, vec__26699, 0, null);
                      var v = cljs.core.nth.call(null, vec__26699, 1, null);
                      cljs.core.chunk_append.call(null, b__26696, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null));
                      var G__26701 = i__26695 + 1;
                      i__26695 = G__26701;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26696), iter__26693.call(null, cljs.core.chunk_rest.call(null, s__26694__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26696), null);
                }
              } else {
                var vec__26700 = cljs.core.first.call(null, s__26694__$2);
                var k = cljs.core.nth.call(null, vec__26700, 0, null);
                var v = cljs.core.nth.call(null, vec__26700, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null), iter__26693.call(null, cljs.core.rest.call(null, s__26694__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4384__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function schema_diff(input_schema, output_schema) {
  if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema)) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema)) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4384__auto__ = function iter__26710(s__26711) {
          return new cljs.core.LazySeq(null, function() {
            var s__26711__$1 = s__26711;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__26711__$1);
              if (temp__4126__auto__) {
                var s__26711__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__26711__$2)) {
                  var c__4382__auto__ = cljs.core.chunk_first.call(null, s__26711__$2);
                  var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                  var b__26713 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                  if (function() {
                    var i__26712 = 0;
                    while (true) {
                      if (i__26712 < size__4383__auto__) {
                        var vec__26716 = cljs.core._nth.call(null, c__4382__auto__, i__26712);
                        var k = cljs.core.nth.call(null, vec__26716, 0, null);
                        var v = cljs.core.nth.call(null, vec__26716, 1, null);
                        if (schema.core.specific_key_QMARK_.call(null, k)) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (required_QMARK_ || present_QMARK_) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__26713, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__26718 = i__26712 + 1;
                              i__26712 = G__26718;
                              continue;
                            } else {
                              var G__26719 = i__26712 + 1;
                              i__26712 = G__26719;
                              continue;
                            }
                          } else {
                            var G__26720 = i__26712 + 1;
                            i__26712 = G__26720;
                            continue;
                          }
                        } else {
                          var G__26721 = i__26712 + 1;
                          i__26712 = G__26721;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26713), iter__26710.call(null, cljs.core.chunk_rest.call(null, s__26711__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26713), null);
                  }
                } else {
                  var vec__26717 = cljs.core.first.call(null, s__26711__$2);
                  var k = cljs.core.nth.call(null, vec__26717, 0, null);
                  var v = cljs.core.nth.call(null, vec__26717, 1, null);
                  if (schema.core.specific_key_QMARK_.call(null, k)) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (required_QMARK_ || present_QMARK_) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), iter__26710.call(null, cljs.core.rest.call(null, s__26711__$2)));
                      } else {
                        var G__26722 = cljs.core.rest.call(null, s__26711__$2);
                        s__26711__$1 = G__26722;
                        continue;
                      }
                    } else {
                      var G__26723 = cljs.core.rest.call(null, s__26711__$2);
                      s__26711__$1 = G__26723;
                      continue;
                    }
                  } else {
                    var G__26724 = cljs.core.rest.call(null, s__26711__$2);
                    s__26711__$1 = G__26724;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4384__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(fails)].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___26747 = schema.utils.use_fn_validation;
var output_schema26725_26748 = schema.core.Any;
var input_schema26726_26749 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker26727_26750 = schema.core.checker.call(null, input_schema26726_26749);
var output_checker26728_26751 = schema.core.checker.call(null, output_schema26725_26748);
plumbing.fnk.schema.compose_schemata = function(ufv___26747, output_schema26725_26748, input_schema26726_26749, input_checker26727_26750, output_checker26728_26751) {
  return function compose_schemata(G__26729, G__26730) {
    var validate__10827__auto__ = true;
    if (validate__10827__auto__) {
      var args__10828__auto___26752 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26729, G__26730], null);
      var temp__4126__auto___26753 = input_checker26727_26750.call(null, args__10828__auto___26752);
      if (cljs.core.truth_(temp__4126__auto___26753)) {
        var error__10829__auto___26754 = temp__4126__auto___26753;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__10829__auto___26754)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26754, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26752, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26726_26749, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var G__26741 = G__26729;
      var vec__26743 = G__26741;
      var i2 = cljs.core.nth.call(null, vec__26743, 0, null);
      var o2 = cljs.core.nth.call(null, vec__26743, 1, null);
      var G__26742 = G__26730;
      var vec__26744 = G__26742;
      var i1 = cljs.core.nth.call(null, vec__26744, 0, null);
      var o1 = cljs.core.nth.call(null, vec__26744, 1, null);
      var G__26741__$1 = G__26741;
      var G__26742__$1 = G__26742;
      while (true) {
        var vec__26745 = G__26741__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__26745, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__26745, 1, null);
        var vec__26746 = G__26742__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__26746, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__26746, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__10827__auto__) {
      var temp__4126__auto___26755 = output_checker26728_26751.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26755)) {
        var error__10829__auto___26756 = temp__4126__auto___26755;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__10829__auto___26756)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26756, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26725_26748, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26747, output_schema26725_26748, input_schema26726_26749, input_checker26727_26750, output_checker26728_26751);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema26725_26748, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26726_26749], null)));
plumbing.fnk.schema.schema_key = function schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___26835 = schema.utils.use_fn_validation;
var output_schema26757_26836 = schema.core.Any;
var input_schema26758_26837 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "s", "s", -948495851, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "ks", "ks", -754231827, null))], null);
var input_checker26759_26838 = schema.core.checker.call(null, input_schema26758_26837);
var output_checker26760_26839 = schema.core.checker.call(null, output_schema26757_26836);
plumbing.fnk.schema.split_schema = function(ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
  return function split_schema(G__26761, G__26762) {
    var validate__10827__auto__ = ufv___26835.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26840 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26761, G__26762], null);
      var temp__4126__auto___26841 = input_checker26759_26838.call(null, args__10828__auto___26840);
      if (cljs.core.truth_(temp__4126__auto___26841)) {
        var error__10829__auto___26842 = temp__4126__auto___26841;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__10829__auto___26842)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26842, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26840, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), input_schema26758_26837, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var s = G__26761;
      var ks = G__26762;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__4384__auto__ = function(ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
          return function iter__26799(s__26800) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
              return function() {
                var s__26800__$1 = s__26800;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__26800__$1);
                  if (temp__4126__auto__) {
                    var s__26800__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__26800__$2)) {
                      var c__4382__auto__ = cljs.core.chunk_first.call(null, s__26800__$2);
                      var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                      var b__26802 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                      if (function() {
                        var i__26801 = 0;
                        while (true) {
                          if (i__26801 < size__4383__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__4382__auto__, i__26801);
                            cljs.core.chunk_append.call(null, b__26802, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__4384__auto__ = function(i__26801, in_QMARK_, c__4382__auto__, size__4383__auto__, b__26802, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
                                return function iter__26819(s__26820) {
                                  return new cljs.core.LazySeq(null, function(i__26801, in_QMARK_, c__4382__auto__, size__4383__auto__, b__26802, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
                                    return function() {
                                      var s__26820__$1 = s__26820;
                                      while (true) {
                                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__26820__$1);
                                        if (temp__4126__auto____$1) {
                                          var s__26820__$2 = temp__4126__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__26820__$2)) {
                                            var c__4382__auto____$1 = cljs.core.chunk_first.call(null, s__26820__$2);
                                            var size__4383__auto____$1 = cljs.core.count.call(null, c__4382__auto____$1);
                                            var b__26822 = cljs.core.chunk_buffer.call(null, size__4383__auto____$1);
                                            if (function() {
                                              var i__26821 = 0;
                                              while (true) {
                                                if (i__26821 < size__4383__auto____$1) {
                                                  var vec__26825 = cljs.core._nth.call(null, c__4382__auto____$1, i__26821);
                                                  var k = cljs.core.nth.call(null, vec__26825, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__26825, 1, null);
                                                  if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                                    cljs.core.chunk_append.call(null, b__26822, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__26843 = i__26821 + 1;
                                                    i__26821 = G__26843;
                                                    continue;
                                                  } else {
                                                    var G__26844 = i__26821 + 1;
                                                    i__26821 = G__26844;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26822), iter__26819.call(null, cljs.core.chunk_rest.call(null, s__26820__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26822), null);
                                            }
                                          } else {
                                            var vec__26826 = cljs.core.first.call(null, s__26820__$2);
                                            var k = cljs.core.nth.call(null, vec__26826, 0, null);
                                            var v = cljs.core.nth.call(null, vec__26826, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__26819.call(null, cljs.core.rest.call(null, s__26820__$2)));
                                            } else {
                                              var G__26845 = cljs.core.rest.call(null, s__26820__$2);
                                              s__26820__$1 = G__26845;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__26801, in_QMARK_, c__4382__auto__, size__4383__auto__, b__26802, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839), null, null);
                                };
                              }(i__26801, in_QMARK_, c__4382__auto__, size__4383__auto__, b__26802, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839);
                              return iter__4384__auto__.call(null, s);
                            }()));
                            var G__26846 = i__26801 + 1;
                            i__26801 = G__26846;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26802), iter__26799.call(null, cljs.core.chunk_rest.call(null, s__26800__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26802), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__26800__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4384__auto__ = function(in_QMARK_, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
                          return function iter__26827(s__26828) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839) {
                              return function() {
                                var s__26828__$1 = s__26828;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__26828__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__26828__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__26828__$2)) {
                                      var c__4382__auto__ = cljs.core.chunk_first.call(null, s__26828__$2);
                                      var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                                      var b__26830 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                                      if (function() {
                                        var i__26829 = 0;
                                        while (true) {
                                          if (i__26829 < size__4383__auto__) {
                                            var vec__26833 = cljs.core._nth.call(null, c__4382__auto__, i__26829);
                                            var k = cljs.core.nth.call(null, vec__26833, 0, null);
                                            var v = cljs.core.nth.call(null, vec__26833, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              cljs.core.chunk_append.call(null, b__26830, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__26847 = i__26829 + 1;
                                              i__26829 = G__26847;
                                              continue;
                                            } else {
                                              var G__26848 = i__26829 + 1;
                                              i__26829 = G__26848;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26830), iter__26827.call(null, cljs.core.chunk_rest.call(null, s__26828__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26830), null);
                                      }
                                    } else {
                                      var vec__26834 = cljs.core.first.call(null, s__26828__$2);
                                      var k = cljs.core.nth.call(null, vec__26834, 0, null);
                                      var v = cljs.core.nth.call(null, vec__26834, 1, null);
                                      if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__26827.call(null, cljs.core.rest.call(null, s__26828__$2)));
                                      } else {
                                        var G__26849 = cljs.core.rest.call(null, s__26828__$2);
                                        s__26828__$1 = G__26849;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839), null, null);
                          };
                        }(in_QMARK_, s__26800__$2, temp__4126__auto__, ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839);
                        return iter__4384__auto__.call(null, s);
                      }()), iter__26799.call(null, cljs.core.rest.call(null, s__26800__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839), null, null);
          };
        }(ks__$1, validate__10827__auto__, ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839);
        return iter__4384__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26850 = output_checker26760_26839.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26850)) {
        var error__10829__auto___26851 = temp__4126__auto___26850;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__10829__auto___26851)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26851, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26757_26836, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26835, output_schema26757_26836, input_schema26758_26837, input_checker26759_26838, output_checker26760_26839);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema26757_26836, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26758_26837], null)));
var ufv___26882 = schema.utils.use_fn_validation;
var output_schema26852_26883 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema26853_26884 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker26854_26885 = schema.core.checker.call(null, input_schema26853_26884);
var output_checker26855_26886 = schema.core.checker.call(null, output_schema26852_26883);
plumbing.fnk.schema.sequence_schemata = function(ufv___26882, output_schema26852_26883, input_schema26853_26884, input_checker26854_26885, output_checker26855_26886) {
  return function sequence_schemata(G__26856, G__26857) {
    var validate__10827__auto__ = ufv___26882.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26887 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26856, G__26857], null);
      var temp__4126__auto___26888 = input_checker26854_26885.call(null, args__10828__auto___26887);
      if (cljs.core.truth_(temp__4126__auto___26888)) {
        var error__10829__auto___26889 = temp__4126__auto___26888;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__10829__auto___26889)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26889, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26887, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26853_26884, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var G__26873 = G__26856;
      var vec__26875 = G__26873;
      var i1 = cljs.core.nth.call(null, vec__26875, 0, null);
      var o1 = cljs.core.nth.call(null, vec__26875, 1, null);
      var G__26874 = G__26857;
      var vec__26876 = G__26874;
      var k = cljs.core.nth.call(null, vec__26876, 0, null);
      var vec__26877 = cljs.core.nth.call(null, vec__26876, 1, null);
      var i2 = cljs.core.nth.call(null, vec__26877, 0, null);
      var o2 = cljs.core.nth.call(null, vec__26877, 1, null);
      var G__26873__$1 = G__26873;
      var G__26874__$1 = G__26874;
      while (true) {
        var vec__26878 = G__26873__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__26878, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__26878, 1, null);
        var vec__26879 = G__26874__$1;
        var k__$1 = cljs.core.nth.call(null, vec__26879, 0, null);
        var vec__26880 = cljs.core.nth.call(null, vec__26879, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__26880, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__26880, 1, null);
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__26881 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__26881, 0, null);
        var unused = cljs.core.nth.call(null, vec__26881, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26890 = output_checker26855_26886.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26890)) {
        var error__10829__auto___26891 = temp__4126__auto___26890;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__10829__auto___26891)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26891, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26852_26883, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26882, output_schema26852_26883, input_schema26853_26884, input_checker26854_26885, output_checker26855_26886);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema26852_26883, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26853_26884], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("plumbing.fnk.schema");
goog.require("schema.utils");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x1) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
  };
  var update__5 = function(m, k, f, x1, x2) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
  };
  var update__6 = function() {
    var G__26925__delegate = function(m, k, f, x1, x2, xs) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
    };
    var G__26925 = function(m, k, f, x1, x2, var_args) {
      var xs = null;
      if (arguments.length > 5) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__26925__delegate.call(this, m, k, f, x1, x2, xs);
    };
    G__26925.cljs$lang$maxFixedArity = 5;
    G__26925.cljs$lang$applyTo = function(arglist__26926) {
      var m = cljs.core.first(arglist__26926);
      arglist__26926 = cljs.core.next(arglist__26926);
      var k = cljs.core.first(arglist__26926);
      arglist__26926 = cljs.core.next(arglist__26926);
      var f = cljs.core.first(arglist__26926);
      arglist__26926 = cljs.core.next(arglist__26926);
      var x1 = cljs.core.first(arglist__26926);
      arglist__26926 = cljs.core.next(arglist__26926);
      var x2 = cljs.core.first(arglist__26926);
      var xs = cljs.core.rest(arglist__26926);
      return G__26925__delegate(m, k, f, x1, x2, xs);
    };
    G__26925.cljs$core$IFn$_invoke$arity$variadic = G__26925__delegate;
    return G__26925;
  }();
  update = function(m, k, f, x1, x2, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x1);
      case 5:
        return update__5.call(this, m, k, f, x1, x2);
      default:
        return update__6.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x1, x2, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 5;
  update.cljs$lang$applyTo = update__6.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$variadic = update__6.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
plumbing.core.map_vals = function map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__12768__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__26935_26941 = cljs.core.seq.call(null, m);
      var chunk__26936_26942 = null;
      var count__26937_26943 = 0;
      var i__26938_26944 = 0;
      while (true) {
        if (i__26938_26944 < count__26937_26943) {
          var vec__26939_26945 = cljs.core._nth.call(null, chunk__26936_26942, i__26938_26944);
          var k_26946 = cljs.core.nth.call(null, vec__26939_26945, 0, null);
          var v_26947 = cljs.core.nth.call(null, vec__26939_26945, 1, null);
          var m26934_26948 = cljs.core.deref.call(null, m_atom__12768__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m26934_26948, k_26946, f.call(null, v_26947)));
          var G__26949 = seq__26935_26941;
          var G__26950 = chunk__26936_26942;
          var G__26951 = count__26937_26943;
          var G__26952 = i__26938_26944 + 1;
          seq__26935_26941 = G__26949;
          chunk__26936_26942 = G__26950;
          count__26937_26943 = G__26951;
          i__26938_26944 = G__26952;
          continue;
        } else {
          var temp__4126__auto___26953 = cljs.core.seq.call(null, seq__26935_26941);
          if (temp__4126__auto___26953) {
            var seq__26935_26954__$1 = temp__4126__auto___26953;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__26935_26954__$1)) {
              var c__4415__auto___26955 = cljs.core.chunk_first.call(null, seq__26935_26954__$1);
              var G__26956 = cljs.core.chunk_rest.call(null, seq__26935_26954__$1);
              var G__26957 = c__4415__auto___26955;
              var G__26958 = cljs.core.count.call(null, c__4415__auto___26955);
              var G__26959 = 0;
              seq__26935_26941 = G__26956;
              chunk__26936_26942 = G__26957;
              count__26937_26943 = G__26958;
              i__26938_26944 = G__26959;
              continue;
            } else {
              var vec__26940_26960 = cljs.core.first.call(null, seq__26935_26954__$1);
              var k_26961 = cljs.core.nth.call(null, vec__26940_26960, 0, null);
              var v_26962 = cljs.core.nth.call(null, vec__26940_26960, 1, null);
              var m26934_26963 = cljs.core.deref.call(null, m_atom__12768__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m26934_26963, k_26961, f.call(null, v_26962)));
              var G__26964 = cljs.core.next.call(null, seq__26935_26954__$1);
              var G__26965 = null;
              var G__26966 = 0;
              var G__26967 = 0;
              seq__26935_26941 = G__26964;
              chunk__26936_26942 = G__26965;
              count__26937_26943 = G__26966;
              i__26938_26944 = G__26967;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12768__auto__));
    }
  }
};
plumbing.core.map_keys = function map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__12768__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__26976_26982 = cljs.core.seq.call(null, m);
    var chunk__26977_26983 = null;
    var count__26978_26984 = 0;
    var i__26979_26985 = 0;
    while (true) {
      if (i__26979_26985 < count__26978_26984) {
        var vec__26980_26986 = cljs.core._nth.call(null, chunk__26977_26983, i__26979_26985);
        var k_26987 = cljs.core.nth.call(null, vec__26980_26986, 0, null);
        var v_26988 = cljs.core.nth.call(null, vec__26980_26986, 1, null);
        var m26975_26989 = cljs.core.deref.call(null, m_atom__12768__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m26975_26989, f.call(null, k_26987), v_26988));
        var G__26990 = seq__26976_26982;
        var G__26991 = chunk__26977_26983;
        var G__26992 = count__26978_26984;
        var G__26993 = i__26979_26985 + 1;
        seq__26976_26982 = G__26990;
        chunk__26977_26983 = G__26991;
        count__26978_26984 = G__26992;
        i__26979_26985 = G__26993;
        continue;
      } else {
        var temp__4126__auto___26994 = cljs.core.seq.call(null, seq__26976_26982);
        if (temp__4126__auto___26994) {
          var seq__26976_26995__$1 = temp__4126__auto___26994;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__26976_26995__$1)) {
            var c__4415__auto___26996 = cljs.core.chunk_first.call(null, seq__26976_26995__$1);
            var G__26997 = cljs.core.chunk_rest.call(null, seq__26976_26995__$1);
            var G__26998 = c__4415__auto___26996;
            var G__26999 = cljs.core.count.call(null, c__4415__auto___26996);
            var G__27000 = 0;
            seq__26976_26982 = G__26997;
            chunk__26977_26983 = G__26998;
            count__26978_26984 = G__26999;
            i__26979_26985 = G__27000;
            continue;
          } else {
            var vec__26981_27001 = cljs.core.first.call(null, seq__26976_26995__$1);
            var k_27002 = cljs.core.nth.call(null, vec__26981_27001, 0, null);
            var v_27003 = cljs.core.nth.call(null, vec__26981_27001, 1, null);
            var m26975_27004 = cljs.core.deref.call(null, m_atom__12768__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m26975_27004, f.call(null, k_27002), v_27003));
            var G__27005 = cljs.core.next.call(null, seq__26976_26995__$1);
            var G__27006 = null;
            var G__27007 = 0;
            var G__27008 = 0;
            seq__26976_26982 = G__27005;
            chunk__26977_26983 = G__27006;
            count__26978_26984 = G__27007;
            i__26979_26985 = G__27008;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12768__auto__));
  }
};
plumbing.core.map_from_keys = function map_from_keys(f, ks) {
  var m_atom__12768__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__27015_27019 = cljs.core.seq.call(null, ks);
  var chunk__27016_27020 = null;
  var count__27017_27021 = 0;
  var i__27018_27022 = 0;
  while (true) {
    if (i__27018_27022 < count__27017_27021) {
      var k_27023 = cljs.core._nth.call(null, chunk__27016_27020, i__27018_27022);
      var m27014_27024 = cljs.core.deref.call(null, m_atom__12768__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27014_27024, k_27023, f.call(null, k_27023)));
      var G__27025 = seq__27015_27019;
      var G__27026 = chunk__27016_27020;
      var G__27027 = count__27017_27021;
      var G__27028 = i__27018_27022 + 1;
      seq__27015_27019 = G__27025;
      chunk__27016_27020 = G__27026;
      count__27017_27021 = G__27027;
      i__27018_27022 = G__27028;
      continue;
    } else {
      var temp__4126__auto___27029 = cljs.core.seq.call(null, seq__27015_27019);
      if (temp__4126__auto___27029) {
        var seq__27015_27030__$1 = temp__4126__auto___27029;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27015_27030__$1)) {
          var c__4415__auto___27031 = cljs.core.chunk_first.call(null, seq__27015_27030__$1);
          var G__27032 = cljs.core.chunk_rest.call(null, seq__27015_27030__$1);
          var G__27033 = c__4415__auto___27031;
          var G__27034 = cljs.core.count.call(null, c__4415__auto___27031);
          var G__27035 = 0;
          seq__27015_27019 = G__27032;
          chunk__27016_27020 = G__27033;
          count__27017_27021 = G__27034;
          i__27018_27022 = G__27035;
          continue;
        } else {
          var k_27036 = cljs.core.first.call(null, seq__27015_27030__$1);
          var m27014_27037 = cljs.core.deref.call(null, m_atom__12768__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27014_27037, k_27036, f.call(null, k_27036)));
          var G__27038 = cljs.core.next.call(null, seq__27015_27030__$1);
          var G__27039 = null;
          var G__27040 = 0;
          var G__27041 = 0;
          seq__27015_27019 = G__27038;
          chunk__27016_27020 = G__27039;
          count__27017_27021 = G__27040;
          i__27018_27022 = G__27041;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12768__auto__));
};
plumbing.core.map_from_vals = function map_from_vals(f, vs) {
  var m_atom__12768__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__27048_27052 = cljs.core.seq.call(null, vs);
  var chunk__27049_27053 = null;
  var count__27050_27054 = 0;
  var i__27051_27055 = 0;
  while (true) {
    if (i__27051_27055 < count__27050_27054) {
      var v_27056 = cljs.core._nth.call(null, chunk__27049_27053, i__27051_27055);
      var m27047_27057 = cljs.core.deref.call(null, m_atom__12768__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27047_27057, f.call(null, v_27056), v_27056));
      var G__27058 = seq__27048_27052;
      var G__27059 = chunk__27049_27053;
      var G__27060 = count__27050_27054;
      var G__27061 = i__27051_27055 + 1;
      seq__27048_27052 = G__27058;
      chunk__27049_27053 = G__27059;
      count__27050_27054 = G__27060;
      i__27051_27055 = G__27061;
      continue;
    } else {
      var temp__4126__auto___27062 = cljs.core.seq.call(null, seq__27048_27052);
      if (temp__4126__auto___27062) {
        var seq__27048_27063__$1 = temp__4126__auto___27062;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27048_27063__$1)) {
          var c__4415__auto___27064 = cljs.core.chunk_first.call(null, seq__27048_27063__$1);
          var G__27065 = cljs.core.chunk_rest.call(null, seq__27048_27063__$1);
          var G__27066 = c__4415__auto___27064;
          var G__27067 = cljs.core.count.call(null, c__4415__auto___27064);
          var G__27068 = 0;
          seq__27048_27052 = G__27065;
          chunk__27049_27053 = G__27066;
          count__27050_27054 = G__27067;
          i__27051_27055 = G__27068;
          continue;
        } else {
          var v_27069 = cljs.core.first.call(null, seq__27048_27063__$1);
          var m27047_27070 = cljs.core.deref.call(null, m_atom__12768__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27047_27070, f.call(null, v_27069), v_27069));
          var G__27071 = cljs.core.next.call(null, seq__27048_27063__$1);
          var G__27072 = null;
          var G__27073 = 0;
          var G__27074 = 0;
          seq__27048_27052 = G__27071;
          chunk__27049_27053 = G__27072;
          count__27050_27054 = G__27073;
          i__27051_27055 = G__27074;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12768__auto__));
};
plumbing.core.dissoc_in = function dissoc_in(m, p__27075) {
  var vec__27077 = p__27075;
  var k = cljs.core.nth.call(null, vec__27077, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__27077, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__3616__auto__ = ks;
      if (and__3616__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3616__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__12768__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__27086_27092 = cljs.core.seq.call(null, x);
    var chunk__27087_27093 = null;
    var count__27088_27094 = 0;
    var i__27089_27095 = 0;
    while (true) {
      if (i__27089_27095 < count__27088_27094) {
        var vec__27090_27096 = cljs.core._nth.call(null, chunk__27087_27093, i__27089_27095);
        var k_27097 = cljs.core.nth.call(null, vec__27090_27096, 0, null);
        var v_27098 = cljs.core.nth.call(null, vec__27090_27096, 1, null);
        var m27085_27099 = cljs.core.deref.call(null, m_atom__12768__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27085_27099, typeof k_27097 === "string" ? cljs.core.keyword.call(null, k_27097) : k_27097, keywordize_map.call(null, v_27098)));
        var G__27100 = seq__27086_27092;
        var G__27101 = chunk__27087_27093;
        var G__27102 = count__27088_27094;
        var G__27103 = i__27089_27095 + 1;
        seq__27086_27092 = G__27100;
        chunk__27087_27093 = G__27101;
        count__27088_27094 = G__27102;
        i__27089_27095 = G__27103;
        continue;
      } else {
        var temp__4126__auto___27104 = cljs.core.seq.call(null, seq__27086_27092);
        if (temp__4126__auto___27104) {
          var seq__27086_27105__$1 = temp__4126__auto___27104;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27086_27105__$1)) {
            var c__4415__auto___27106 = cljs.core.chunk_first.call(null, seq__27086_27105__$1);
            var G__27107 = cljs.core.chunk_rest.call(null, seq__27086_27105__$1);
            var G__27108 = c__4415__auto___27106;
            var G__27109 = cljs.core.count.call(null, c__4415__auto___27106);
            var G__27110 = 0;
            seq__27086_27092 = G__27107;
            chunk__27087_27093 = G__27108;
            count__27088_27094 = G__27109;
            i__27089_27095 = G__27110;
            continue;
          } else {
            var vec__27091_27111 = cljs.core.first.call(null, seq__27086_27105__$1);
            var k_27112 = cljs.core.nth.call(null, vec__27091_27111, 0, null);
            var v_27113 = cljs.core.nth.call(null, vec__27091_27111, 1, null);
            var m27085_27114 = cljs.core.deref.call(null, m_atom__12768__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12768__auto__, cljs.core.assoc_BANG_.call(null, m27085_27114, typeof k_27112 === "string" ? cljs.core.keyword.call(null, k_27112) : k_27112, keywordize_map.call(null, v_27113)));
            var G__27115 = cljs.core.next.call(null, seq__27086_27105__$1);
            var G__27116 = null;
            var G__27117 = 0;
            var G__27118 = 0;
            seq__27086_27092 = G__27115;
            chunk__27087_27093 = G__27116;
            count__27088_27094 = G__27117;
            i__27089_27095 = G__27118;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12768__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function safe_get(m, k) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var pair__12837__auto__ = temp__4124__auto__;
    return cljs.core.val.call(null, pair__12837__auto__);
  } else {
    var e = schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m));
    throw new Error(e);
  }
};
plumbing.core.safe_get_in = function safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__27119 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__27120 = cljs.core.next.call(null, ks);
      m = G__27119;
      ks = G__27120;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
    }
    return cljs.core.into.call(null, function() {
      var or__3628__auto__ = m;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4384__auto__ = function iter__27129(s__27130) {
        return new cljs.core.LazySeq(null, function() {
          var s__27130__$1 = s__27130;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__27130__$1);
            if (temp__4126__auto__) {
              var s__27130__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__27130__$2)) {
                var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27130__$2);
                var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                var b__27132 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                if (function() {
                  var i__27131 = 0;
                  while (true) {
                    if (i__27131 < size__4383__auto__) {
                      var vec__27135 = cljs.core._nth.call(null, c__4382__auto__, i__27131);
                      var k = cljs.core.nth.call(null, vec__27135, 0, null);
                      var v = cljs.core.nth.call(null, vec__27135, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__27132, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__27137 = i__27131 + 1;
                        i__27131 = G__27137;
                        continue;
                      } else {
                        var G__27138 = i__27131 + 1;
                        i__27131 = G__27138;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27132), iter__27129.call(null, cljs.core.chunk_rest.call(null, s__27130__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27132), null);
                }
              } else {
                var vec__27136 = cljs.core.first.call(null, s__27130__$2);
                var k = cljs.core.nth.call(null, vec__27136, 0, null);
                var v = cljs.core.nth.call(null, vec__27136, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__27129.call(null, cljs.core.rest.call(null, s__27130__$2)));
                } else {
                  var G__27139 = cljs.core.rest.call(null, s__27130__$2);
                  s__27130__$1 = G__27139;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4384__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__27140) {
    var m = cljs.core.first(arglist__27140);
    var kvs = cljs.core.rest(arglist__27140);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
plumbing.core.update_in_when = function() {
  var update_in_when__delegate = function(m, key_seq, f, args) {
    var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
    if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
      return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
    } else {
      return m;
    }
  };
  var update_in_when = function(m, key_seq, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return update_in_when__delegate.call(this, m, key_seq, f, args);
  };
  update_in_when.cljs$lang$maxFixedArity = 3;
  update_in_when.cljs$lang$applyTo = function(arglist__27141) {
    var m = cljs.core.first(arglist__27141);
    arglist__27141 = cljs.core.next(arglist__27141);
    var key_seq = cljs.core.first(arglist__27141);
    arglist__27141 = cljs.core.next(arglist__27141);
    var f = cljs.core.first(arglist__27141);
    var args = cljs.core.rest(arglist__27141);
    return update_in_when__delegate(m, key_seq, f, args);
  };
  update_in_when.cljs$core$IFn$_invoke$arity$variadic = update_in_when__delegate;
  return update_in_when;
}();
plumbing.core.grouped_map = function grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.next.call(null, s);
    if (temp__4126__auto__) {
      var n = temp__4126__auto__;
      return aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function() {
  var sum = null;
  var sum__1 = function(xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
  };
  var sum__2 = function(f, xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
  };
  sum = function(f, xs) {
    switch(arguments.length) {
      case 1:
        return sum__1.call(this, f);
      case 2:
        return sum__2.call(this, f, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sum.cljs$core$IFn$_invoke$arity$1 = sum__1;
  sum.cljs$core$IFn$_invoke$arity$2 = sum__2;
  return sum;
}();
plumbing.core.singleton = function singleton(xs) {
  var temp__4126__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4126__auto__) {
    var xs__$1 = temp__4126__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__4384__auto__ = function(s) {
    return function iter__27146(s__27147) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__27147__$1 = s__27147;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__27147__$1);
            if (temp__4126__auto__) {
              var s__27147__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__27147__$2)) {
                var c__4382__auto__ = cljs.core.chunk_first.call(null, s__27147__$2);
                var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                var b__27149 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                if (function() {
                  var i__27148 = 0;
                  while (true) {
                    if (i__27148 < size__4383__auto__) {
                      var x = cljs.core._nth.call(null, c__4382__auto__, i__27148);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__27149, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__27150 = i__27148 + 1;
                        i__27148 = G__27150;
                        continue;
                      } else {
                        var G__27151 = i__27148 + 1;
                        i__27148 = G__27151;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27149), iter__27146.call(null, cljs.core.chunk_rest.call(null, s__27147__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27149), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__27147__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), iter__27146.call(null, cljs.core.rest.call(null, s__27147__$2)));
                } else {
                  var G__27152 = cljs.core.rest.call(null, s__27147__$2);
                  s__27147__$1 = G__27152;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__4384__auto__.call(null, xs);
};
plumbing.core.interleave_all = function() {
  var interleave_all__delegate = function(colls) {
    return new cljs.core.LazySeq(null, function() {
      return function helper(seqs) {
        if (cljs.core.seq.call(null, seqs)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
            return helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
          }, null, null));
        } else {
          return null;
        }
      }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
    }, null, null);
  };
  var interleave_all = function(var_args) {
    var colls = null;
    if (arguments.length > 0) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interleave_all__delegate.call(this, colls);
  };
  interleave_all.cljs$lang$maxFixedArity = 0;
  interleave_all.cljs$lang$applyTo = function(arglist__27153) {
    var colls = cljs.core.seq(arglist__27153);
    return interleave_all__delegate(colls);
  };
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__delegate;
  return interleave_all;
}();
plumbing.core.count_when = function count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function() {
  var conj_when = null;
  var conj_when__2 = function(coll, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.conj.call(null, coll, x);
    } else {
      return coll;
    }
  };
  var conj_when__3 = function() {
    var G__27154__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__27155 = conj_when.call(null, coll, x);
          var G__27156 = cljs.core.first.call(null, xs);
          var G__27157 = cljs.core.next.call(null, xs);
          coll = G__27155;
          x = G__27156;
          xs = G__27157;
          continue;
        } else {
          return conj_when.call(null, coll, x);
        }
        break;
      }
    };
    var G__27154 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27154__delegate.call(this, coll, x, xs);
    };
    G__27154.cljs$lang$maxFixedArity = 2;
    G__27154.cljs$lang$applyTo = function(arglist__27158) {
      var coll = cljs.core.first(arglist__27158);
      arglist__27158 = cljs.core.next(arglist__27158);
      var x = cljs.core.first(arglist__27158);
      var xs = cljs.core.rest(arglist__27158);
      return G__27154__delegate(coll, x, xs);
    };
    G__27154.cljs$core$IFn$_invoke$arity$variadic = G__27154__delegate;
    return G__27154;
  }();
  conj_when = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_when__2.call(this, coll, x);
      default:
        return conj_when__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_when.cljs$lang$maxFixedArity = 2;
  conj_when.cljs$lang$applyTo = conj_when__3.cljs$lang$applyTo;
  conj_when.cljs$core$IFn$_invoke$arity$2 = conj_when__2;
  conj_when.cljs$core$IFn$_invoke$arity$variadic = conj_when__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_when;
}();
plumbing.core.cons_when = function cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function() {
  var swap_pair_BANG_ = null;
  var swap_pair_BANG___2 = function(a, f) {
    while (true) {
      var old_val = cljs.core.deref.call(null, a);
      var new_val = f.call(null, old_val);
      if (cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
      } else {
        continue;
      }
      break;
    }
  };
  var swap_pair_BANG___3 = function() {
    var G__27160__delegate = function(a, f, args) {
      return swap_pair_BANG_.call(null, a, function(p1__27159_SHARP_) {
        return cljs.core.apply.call(null, f, p1__27159_SHARP_, args);
      });
    };
    var G__27160 = function(a, f, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27160__delegate.call(this, a, f, args);
    };
    G__27160.cljs$lang$maxFixedArity = 2;
    G__27160.cljs$lang$applyTo = function(arglist__27161) {
      var a = cljs.core.first(arglist__27161);
      arglist__27161 = cljs.core.next(arglist__27161);
      var f = cljs.core.first(arglist__27161);
      var args = cljs.core.rest(arglist__27161);
      return G__27160__delegate(a, f, args);
    };
    G__27160.cljs$core$IFn$_invoke$arity$variadic = G__27160__delegate;
    return G__27160;
  }();
  swap_pair_BANG_ = function(a, f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return swap_pair_BANG___2.call(this, a, f);
      default:
        return swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic(a, f, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
  swap_pair_BANG_.cljs$lang$applyTo = swap_pair_BANG___3.cljs$lang$applyTo;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_pair_BANG___2;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return swap_pair_BANG_;
}();
plumbing.core.get_and_set_BANG_ = function get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function millis() {
  return(new Date).getTime();
};
plumbing.core.mapply = function() {
  var mapply = null;
  var mapply__2 = function(f, m) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
  };
  var mapply__3 = function() {
    var G__27162__delegate = function(f, arg, args) {
      return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
    };
    var G__27162 = function(f, arg, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__27162__delegate.call(this, f, arg, args);
    };
    G__27162.cljs$lang$maxFixedArity = 2;
    G__27162.cljs$lang$applyTo = function(arglist__27163) {
      var f = cljs.core.first(arglist__27163);
      arglist__27163 = cljs.core.next(arglist__27163);
      var arg = cljs.core.first(arglist__27163);
      var args = cljs.core.rest(arglist__27163);
      return G__27162__delegate(f, arg, args);
    };
    G__27162.cljs$core$IFn$_invoke$arity$variadic = G__27162__delegate;
    return G__27162;
  }();
  mapply = function(f, arg, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return mapply__2.call(this, f, arg);
      default:
        return mapply__3.cljs$core$IFn$_invoke$arity$variadic(f, arg, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapply.cljs$lang$maxFixedArity = 2;
  mapply.cljs$lang$applyTo = mapply__3.cljs$lang$applyTo;
  mapply.cljs$core$IFn$_invoke$arity$2 = mapply__2;
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapply;
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj25845 = {};
  return obj25845;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3616__auto__ = port;
    if (and__3616__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4272__auto__ = port == null ? null : port;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj25847 = {};
  return obj25847;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3616__auto__ = port;
    if (and__3616__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4272__auto__ = port == null ? null : port;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj25849 = {};
  return obj25849;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3616__auto__ = chan;
    if (and__3616__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4272__auto__ = chan == null ? null : chan;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3616__auto__ = chan;
    if (and__3616__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4272__auto__ = chan == null ? null : chan;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj25851 = {};
  return obj25851;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3616__auto__ = h;
    if (and__3616__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4272__auto__ = h == null ? null : h;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3616__auto__ = h;
    if (and__3616__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4272__auto__ = h == null ? null : h;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj25853 = {};
  return obj25853;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3616__auto__ = b;
    if (and__3616__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4272__auto__ = b == null ? null : b;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3616__auto__ = b;
    if (and__3616__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4272__auto__ = b == null ? null : b;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3616__auto__ = b;
    if (and__3616__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4272__auto__ = b == null ? null : b;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj25855 = {};
  return obj25855;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t25805 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t25805 = function(f, fn_handler, meta25806) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta25806 = meta25806;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t25805.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t25805.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t25805.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t25805.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25807) {
      var self__ = this;
      var _25807__$1 = this;
      return self__.meta25806;
    };
    cljs.core.async.impl.ioc_helpers.t25805.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25807, meta25806__$1) {
      var self__ = this;
      var _25807__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t25805(self__.f, self__.fn_handler, meta25806__$1);
    };
    cljs.core.async.impl.ioc_helpers.t25805.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t25805.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t25805";
    cljs.core.async.impl.ioc_helpers.t25805.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.ioc-helpers/t25805");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t25805 = function __GT_t25805(f__$1, fn_handler__$1, meta25806) {
      return new cljs.core.async.impl.ioc_helpers.t25805(f__$1, fn_handler__$1, meta25806);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t25805(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e25809) {
    if (e25809 instanceof Object) {
      var ex = e25809;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e25809;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_25812_25814 = state;
    statearr_25812_25814[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_25812_25814[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_25813_25815 = state;
    statearr_25813_25815[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_25813_25815[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_25818_25820 = state;
    statearr_25818_25820[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_25818_25820[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_25819_25821 = state;
    statearr_25819_25821[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_25819_25821[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k25823, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__25825 = k25823 instanceof cljs.core.Keyword ? k25823.fqn : null;
  switch(G__25825) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k25823, else__4234__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__25822) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__25826 = cljs.core.keyword_identical_QMARK_;
  var expr__25827 = k__4239__auto__;
  if (cljs.core.truth_(pred__25826.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__25827))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__25822, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__25826.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__25827))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__25822, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__25826.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__25827))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__25822, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__25826.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__25827))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__25822, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__25826.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__25827))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__25822, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__25822), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__25822) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__25822, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__25824) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__25824), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__25824), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__25824), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__25824), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__25824), null, cljs.core.dissoc.call(null, G__25824, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_25831 = state;
  statearr_25831[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_25831;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = exception;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3616__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = exception;
        if (cljs.core.truth_(and__3616__auto__)) {
          var and__3616__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3616__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3616__auto____$1;
          }
        } else {
          return and__3616__auto__;
        }
      }())) {
        var statearr_25837 = state;
        statearr_25837[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_25837[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_25837[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_25837[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_25837;
      } else {
        if (cljs.core.truth_(function() {
          var and__3616__auto__ = exception;
          if (cljs.core.truth_(and__3616__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3616__auto__;
          }
        }())) {
          var statearr_25838_25842 = state;
          statearr_25838_25842[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__25843 = state;
          state = G__25843;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3616__auto__ = exception;
            if (cljs.core.truth_(and__3616__auto__)) {
              var and__3616__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3616__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3616__auto____$1;
              }
            } else {
              return and__3616__auto__;
            }
          }())) {
            var statearr_25839 = state;
            statearr_25839[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_25839[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_25839;
          } else {
            if (cljs.core.truth_(function() {
              var and__3616__auto__ = cljs.core.not.call(null, exception);
              if (and__3616__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3616__auto__;
              }
            }())) {
              var statearr_25840 = state;
              statearr_25840[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_25840[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_25840;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_25841 = state;
                statearr_25841[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_25841[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_25841;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("hickory.hiccup_utils");
goog.require("cljs.core");
goog.require("clojure.string");
hickory.hiccup_utils.first_idx = function first_idx(a, b) {
  if (a === -1) {
    return b;
  } else {
    if (b === -1) {
      return a;
    } else {
      var x__3952__auto__ = a;
      var y__3953__auto__ = b;
      return x__3952__auto__ < y__3953__auto__ ? x__3952__auto__ : y__3953__auto__;
    }
  }
};
hickory.hiccup_utils.index_of = function() {
  var index_of = null;
  var index_of__2 = function(s, c) {
    return s.indexOf(c);
  };
  var index_of__3 = function(s, c, idx) {
    return s.indexOf(c, idx);
  };
  index_of = function(s, c, idx) {
    switch(arguments.length) {
      case 2:
        return index_of__2.call(this, s, c);
      case 3:
        return index_of__3.call(this, s, c, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  index_of.cljs$core$IFn$_invoke$arity$2 = index_of__2;
  index_of.cljs$core$IFn$_invoke$arity$3 = index_of__3;
  return index_of;
}();
hickory.hiccup_utils.split_keep_trailing_empty = function split_keep_trailing_empty(s, re) {
  return clojure.string.split.call(null, s, re, -1);
};
hickory.hiccup_utils.tag_well_formed_QMARK_ = function tag_well_formed_QMARK_(tag_elem) {
  var tag_elem__$1 = cljs.core.name.call(null, tag_elem);
  var hash_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, "#") | 0;
  var dot_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".") | 0;
  var tag_cutoff = hickory.hiccup_utils.first_idx.call(null, hash_idx, dot_idx);
  var and__3616__auto__ = 0 < cljs.core.count.call(null, tag_elem__$1);
  if (and__3616__auto__) {
    var and__3616__auto____$1 = tag_cutoff === -1 ? true : tag_cutoff > 0;
    if (and__3616__auto____$1) {
      var and__3616__auto____$2 = hash_idx === -1 ? true : -1 === hickory.hiccup_utils.index_of.call(null, tag_elem__$1, "#", hash_idx + 1) && hash_idx + 1 < hickory.hiccup_utils.first_idx.call(null, hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".", hash_idx + 1), cljs.core.count.call(null, tag_elem__$1));
      if (and__3616__auto____$2) {
        var and__3616__auto____$3 = cljs.core.not_EQ_.call(null, hash_idx, -1) && cljs.core.not_EQ_.call(null, dot_idx, -1) ? hash_idx < dot_idx : true;
        if (and__3616__auto____$3) {
          if (dot_idx === -1) {
            return true;
          } else {
            var classes = tag_elem__$1.substring(dot_idx + 1);
            return cljs.core.every_QMARK_.call(null, function(classes, and__3616__auto____$3, and__3616__auto____$2, and__3616__auto____$1, and__3616__auto__, tag_elem__$1, hash_idx, dot_idx, tag_cutoff) {
              return function(p1__28095_SHARP_) {
                return 0 < cljs.core.count.call(null, p1__28095_SHARP_);
              };
            }(classes, and__3616__auto____$3, and__3616__auto____$2, and__3616__auto____$1, and__3616__auto__, tag_elem__$1, hash_idx, dot_idx, tag_cutoff), hickory.hiccup_utils.split_keep_trailing_empty.call(null, classes, /\./));
          }
        } else {
          return and__3616__auto____$3;
        }
      } else {
        return and__3616__auto____$2;
      }
    } else {
      return and__3616__auto____$1;
    }
  } else {
    return and__3616__auto__;
  }
};
hickory.hiccup_utils.tag_name = function tag_name(tag_elem) {
  var tag_elem__$1 = cljs.core.name.call(null, tag_elem);
  var hash_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, "#") | 0;
  var dot_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".") | 0;
  var cutoff = hickory.hiccup_utils.first_idx.call(null, hash_idx, dot_idx);
  if (cutoff === -1) {
    return tag_elem__$1;
  } else {
    return tag_elem__$1.substring(0, cutoff);
  }
};
hickory.hiccup_utils.class_names = function class_names(tag_elem) {
  var tag_elem__$1 = cljs.core.name.call(null, tag_elem);
  var curr_dot = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".");
  var classes = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (curr_dot === -1) {
      return cljs.core.persistent_BANG_.call(null, classes);
    } else {
      var next_dot = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".", curr_dot + 1);
      var next_hash = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, "#", curr_dot + 1);
      var cutoff = hickory.hiccup_utils.first_idx.call(null, next_dot, next_hash);
      if (cutoff === -1) {
        var G__28096 = next_dot;
        var G__28097 = cljs.core.conj_BANG_.call(null, classes, tag_elem__$1.substring(curr_dot + 1));
        curr_dot = G__28096;
        classes = G__28097;
        continue;
      } else {
        var G__28098 = next_dot;
        var G__28099 = cljs.core.conj_BANG_.call(null, classes, tag_elem__$1.substring(curr_dot + 1, cutoff));
        curr_dot = G__28098;
        classes = G__28099;
        continue;
      }
    }
    break;
  }
};
hickory.hiccup_utils.id = function id(tag_elem) {
  var tag_elem__$1 = cljs.core.name.call(null, tag_elem);
  var hash_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, "#") | 0;
  var next_dot_idx = hickory.hiccup_utils.index_of.call(null, tag_elem__$1, ".", hash_idx) | 0;
  if (hash_idx === -1) {
    return null;
  } else {
    if (next_dot_idx === -1) {
      return tag_elem__$1.substring(hash_idx + 1);
    } else {
      return tag_elem__$1.substring(hash_idx + 1, next_dot_idx);
    }
  }
};
hickory.hiccup_utils.expand_content_seqs = function expand_content_seqs(content) {
  var remaining_content = content;
  var result = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (remaining_content == null) {
      return cljs.core.persistent_BANG_.call(null, result);
    } else {
      if (cljs.core.seq_QMARK_.call(null, cljs.core.first.call(null, remaining_content))) {
        var G__28100 = cljs.core.next.call(null, remaining_content);
        var G__28101 = function() {
          var remaining_seq = cljs.core.first.call(null, remaining_content);
          var result__$1 = result;
          while (true) {
            if (remaining_seq == null) {
              return result__$1;
            } else {
              var G__28102 = cljs.core.next.call(null, remaining_seq);
              var G__28103 = cljs.core.conj_BANG_.call(null, result__$1, cljs.core.first.call(null, remaining_seq));
              remaining_seq = G__28102;
              result__$1 = G__28103;
              continue;
            }
            break;
          }
        }();
        remaining_content = G__28100;
        result = G__28101;
        continue;
      } else {
        var G__28104 = cljs.core.next.call(null, remaining_content);
        var G__28105 = cljs.core.conj_BANG_.call(null, result, cljs.core.first.call(null, remaining_content));
        remaining_content = G__28104;
        result = G__28105;
        continue;
      }
    }
    break;
  }
};
hickory.hiccup_utils.normalize_element = function normalize_element(hiccup_form) {
  var vec__28108 = hiccup_form;
  var tag_elem = cljs.core.nth.call(null, vec__28108, 0, null);
  var content = cljs.core.nthnext.call(null, vec__28108, 1);
  if (!hickory.hiccup_utils.tag_well_formed_QMARK_.call(null, tag_elem)) {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid input: Tag element"), cljs.core.str(tag_elem), cljs.core.str("is not well-formed.")].join(""), cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var tag_name = cljs.core.keyword.call(null, clojure.string.lower_case.call(null, hickory.hiccup_utils.tag_name.call(null, tag_elem)));
  var tag_classes = hickory.hiccup_utils.class_names.call(null, tag_elem);
  var tag_id = hickory.hiccup_utils.id.call(null, tag_elem);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), tag_id, new cljs.core.Keyword(null, "class", "class", -2030961996), !cljs.core.empty_QMARK_.call(null, tag_classes) ? clojure.string.join.call(null, " ", tag_classes) : null], null);
  var vec__28109 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, content)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, content), cljs.core.rest.call(null, content)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, content], null);
  var map_attrs = cljs.core.nth.call(null, vec__28109, 0, null);
  var content__$1 = cljs.core.nth.call(null, vec__28109, 1, null);
  var attrs = cljs.core.merge.call(null, tag_attrs, map_attrs);
  return cljs.core.apply.call(null, cljs.core.vector, tag_name, attrs, content__$1);
};
hickory.hiccup_utils.normalize_form = function normalize_form(form) {
  if (typeof form === "string") {
    return form;
  } else {
    var vec__28112 = hickory.hiccup_utils.normalize_element.call(null, form);
    var tag = cljs.core.nth.call(null, vec__28112, 0, null);
    var attrs = cljs.core.nth.call(null, vec__28112, 1, null);
    var contents = cljs.core.nthnext.call(null, vec__28112, 2);
    return cljs.core.apply.call(null, cljs.core.vector, tag, attrs, cljs.core.map.call(null, function(vec__28112, tag, attrs, contents) {
      return function(p1__28110_SHARP_) {
        if (cljs.core.vector_QMARK_.call(null, p1__28110_SHARP_)) {
          return normalize_form.call(null, p1__28110_SHARP_);
        } else {
          return p1__28110_SHARP_;
        }
      };
    }(vec__28112, tag, attrs, contents), hickory.hiccup_utils.expand_content_seqs.call(null, contents)));
  }
};
goog.provide("hickory.render");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("hickory.utils");
goog.require("hickory.hiccup_utils");
hickory.render.render_hickory_attribute = function render_hickory_attribute(m) {
  return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, cljs.core.key.call(null, m))), cljs.core.str('\x3d"'), cljs.core.str(hickory.utils.html_escape.call(null, cljs.core.val.call(null, m))), cljs.core.str('"')].join("");
};
hickory.render.hickory_to_html = function hickory_to_html(dom) {
  if (typeof dom === "string") {
    return hickory.utils.html_escape.call(null, dom);
  } else {
    try {
      var G__28072 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(dom) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(dom).fqn : null;
      switch(G__28072) {
        case "comment":
          return[cljs.core.str("\x3c!--"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str("--\x3e")].join("");
          break;
        case "element":
          if (cljs.core.truth_(hickory.utils.void_element.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom)))) {
            return[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hickory.render.render_hickory_attribute, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(dom)))), cljs.core.str("\x3e")].join("");
          } else {
            if (cljs.core.truth_(hickory.utils.unescapable_content.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom)))) {
              return[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hickory.render.render_hickory_attribute, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(dom)))), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, (new cljs.core.Keyword(null, 
              "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str("\x3c/"), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str("\x3e")].join("");
            } else {
              return[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hickory.render.render_hickory_attribute, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(dom)))), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, 
              hickory_to_html, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(dom)))), cljs.core.str("\x3c/"), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(dom))), cljs.core.str("\x3e")].join("");
            }
          }
          break;
        case "document-type":
          return hickory.utils.render_doctype.call(null, cljs.core.get_in.call(null, dom, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "name", "name", 1843675177)], null)), cljs.core.get_in.call(null, dom, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, 
          "publicid", "publicid", 1557995850)], null)), cljs.core.get_in.call(null, dom, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "systemid", "systemid", -2052878192)], null)));
          break;
        case "document":
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hickory_to_html, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(dom)));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(dom))].join(""));;
      }
    } catch (e28071) {
      if (e28071 instanceof Error) {
        var e = e28071;
        throw cljs.core.truth_(hickory.utils.starts_with.call(null, e["message"], "No matching clause: ")) ? cljs.core.ex_info.call(null, [cljs.core.str("Not a valid node: "), cljs.core.str(cljs.core.pr_str.call(null, dom))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dom", "dom", -1236537922), dom], null)) : e;
      } else {
        throw e28071;
      }
    }
  }
};
hickory.render.render_hiccup_attrs = function render_hiccup_attrs(attrs) {
  var attrs_str = clojure.string.join.call(null, " ", cljs.core.sort.call(null, cljs.core.filter.call(null, function(p1__28074_SHARP_) {
    return!cljs.core.empty_QMARK_.call(null, p1__28074_SHARP_);
  }, function() {
    var iter__4384__auto__ = function iter__28083(s__28084) {
      return new cljs.core.LazySeq(null, function() {
        var s__28084__$1 = s__28084;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__28084__$1);
          if (temp__4126__auto__) {
            var s__28084__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28084__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__28084__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__28086 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__28085 = 0;
                while (true) {
                  if (i__28085 < size__4383__auto__) {
                    var vec__28089 = cljs.core._nth.call(null, c__4382__auto__, i__28085);
                    var k = cljs.core.nth.call(null, vec__28089, 0, null);
                    var v = cljs.core.nth.call(null, vec__28089, 1, null);
                    cljs.core.chunk_append.call(null, b__28086, v === true ? [cljs.core.str(cljs.core.name.call(null, k))].join("") : v == null ? "" : [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str('"'), cljs.core.str(hickory.utils.html_escape.call(null, v)), cljs.core.str('"')].join(""));
                    var G__28091 = i__28085 + 1;
                    i__28085 = G__28091;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28086), iter__28083.call(null, cljs.core.chunk_rest.call(null, s__28084__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28086), null);
              }
            } else {
              var vec__28090 = cljs.core.first.call(null, s__28084__$2);
              var k = cljs.core.nth.call(null, vec__28090, 0, null);
              var v = cljs.core.nth.call(null, vec__28090, 1, null);
              return cljs.core.cons.call(null, v === true ? [cljs.core.str(cljs.core.name.call(null, k))].join("") : v == null ? "" : [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str('"'), cljs.core.str(hickory.utils.html_escape.call(null, v)), cljs.core.str('"')].join(""), iter__28083.call(null, cljs.core.rest.call(null, s__28084__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, attrs);
  }())));
  if (!cljs.core.empty_QMARK_.call(null, attrs_str)) {
    return[cljs.core.str(" "), cljs.core.str(attrs_str)].join("");
  } else {
    return attrs_str;
  }
};
hickory.render.render_hiccup_element = function render_hiccup_element(n_element) {
  var vec__28093 = n_element;
  var tag = cljs.core.nth.call(null, vec__28093, 0, null);
  var attrs = cljs.core.nth.call(null, vec__28093, 1, null);
  var content = cljs.core.nthnext.call(null, vec__28093, 2);
  if (cljs.core.truth_(hickory.utils.void_element.call(null, tag))) {
    return[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, tag)), cljs.core.str(hickory.render.render_hiccup_attrs.call(null, attrs)), cljs.core.str("\x3e")].join("");
  } else {
    return[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, tag)), cljs.core.str(hickory.render.render_hiccup_attrs.call(null, attrs)), cljs.core.str("\x3e"), cljs.core.str(hickory.render.hiccup_to_html.call(null, content)), cljs.core.str("\x3c/"), cljs.core.str(cljs.core.name.call(null, tag)), cljs.core.str("\x3e")].join("");
  }
};
hickory.render.render_hiccup_form = function render_hiccup_form(n_form) {
  if (cljs.core.vector_QMARK_.call(null, n_form)) {
    return hickory.render.render_hiccup_element.call(null, n_form);
  } else {
    return n_form;
  }
};
hickory.render.hiccup_to_html = function hiccup_to_html(hiccup_forms) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__28094_SHARP_) {
    return hickory.render.render_hiccup_form.call(null, hickory.hiccup_utils.normalize_form.call(null, p1__28094_SHARP_));
  }, hiccup_forms));
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    while (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length < CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0;i < bytes.length;i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0;i < hexString.length;i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  str = str.replace(/\r\n/g, "\n");
  var out = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        out[p++] = c >> 12 | 224;
        out[p++] = c >> 6 & 63 | 128;
        out[p++] = c & 63 | 128;
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        var c2 = bytes[pos++];
        var c3 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0;i < bytes1.length;i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.crypt.base64");
goog.require("goog.crypt");
goog.require("goog.userAgent");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.charToByteMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/\x3d";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.HAS_NATIVE_SUPPORT = goog.userAgent.GECKO || goog.userAgent.WEBKIT || goog.userAgent.OPERA || typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  if (!goog.isArrayLike(input)) {
    throw Error("encodeByteArray takes an array as a parameter");
  }
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0;i < input.length;i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.atob(input);
  }
  return goog.crypt.byteArrayToString(goog.crypt.base64.decodeStringToByteArray(input, opt_webSafe));
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_webSafe) {
  goog.crypt.base64.init_();
  var charToByteMap = opt_webSafe ? goog.crypt.base64.charToByteMapWebSafe_ : goog.crypt.base64.charToByteMap_;
  var output = [];
  for (var i = 0;i < input.length;) {
    var byte1 = charToByteMap[input.charAt(i++)];
    var haveByte2 = i < input.length;
    var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
    ++i;
    var haveByte3 = i < input.length;
    var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    var haveByte4 = i < input.length;
    var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
      throw Error();
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    output.push(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      output.push(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        output.push(outByte3);
      }
    }
  }
  return output;
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    goog.crypt.base64.charToByteMapWebSafe_ = {};
    for (var i = 0;i < goog.crypt.base64.ENCODED_VALS.length;i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.byteToCharMapWebSafe_[i]] = i;
    }
  }
};
goog.provide("no.en.core");
goog.require("cljs.core");
goog.require("goog.crypt.base64");
goog.require("cljs.reader");
goog.require("clojure.string");
no.en.core.port_number = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "http", "http", 382524695), 80, new cljs.core.Keyword(null, "https", "https", -1983909665), 443, new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), 3306, new cljs.core.Keyword(null, "postgresql", "postgresql", -1568339962), 5432, new cljs.core.Keyword(null, "rabbitmq", "rabbitmq", 1046897371), 5672], null);
no.en.core.url_regex = /([^:]+):\/\/(([^:]+):([^@]+)@)?(([^:\/]+)(:([0-9]+))?((\/[^?]*)(\?([^#]*))?)?)(\#(.*))?/;
no.en.core.split_by_regex = function split_by_regex(s, pattern) {
  if (cljs.core.sequential_QMARK_.call(null, s)) {
    return s;
  } else {
    if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, s))) {
      return clojure.string.split.call(null, s, pattern);
    } else {
      return null;
    }
  }
};
no.en.core.split_by_comma = function split_by_comma(s) {
  return no.en.core.split_by_regex.call(null, s, /\s*,\s*/);
};
no.en.core.utf8_string = function utf8_string(bytes) {
  throw cljs.core.ex_info.call(null, "utf8-string not implemented yet", bytes);
};
no.en.core.base64_encode = function base64_encode(bytes) {
  if (cljs.core.truth_(bytes)) {
    return goog.crypt.base64.encodeString(bytes, false);
  } else {
    return null;
  }
};
no.en.core.base64_decode = function base64_decode(s) {
  if (cljs.core.truth_(s)) {
    return goog.crypt.base64.decodeString(s, false);
  } else {
    return null;
  }
};
no.en.core.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (v == null || (cljs.core.map_QMARK_.call(null, v) || cljs.core.sequential_QMARK_.call(null, v)) && cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
no.en.core.url_encode = function() {
  var url_encode__delegate = function(s, p__28008) {
    var vec__28010 = p__28008;
    var encoding = cljs.core.nth.call(null, vec__28010, 0, null);
    if (cljs.core.truth_(s)) {
      return clojure.string.replace.call(null, encodeURIComponent([cljs.core.str(s)].join("")), "*", "%2A");
    } else {
      return null;
    }
  };
  var url_encode = function(s, var_args) {
    var p__28008 = null;
    if (arguments.length > 1) {
      p__28008 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return url_encode__delegate.call(this, s, p__28008);
  };
  url_encode.cljs$lang$maxFixedArity = 1;
  url_encode.cljs$lang$applyTo = function(arglist__28011) {
    var s = cljs.core.first(arglist__28011);
    var p__28008 = cljs.core.rest(arglist__28011);
    return url_encode__delegate(s, p__28008);
  };
  url_encode.cljs$core$IFn$_invoke$arity$variadic = url_encode__delegate;
  return url_encode;
}();
no.en.core.url_decode = function() {
  var url_decode__delegate = function(s, p__28012) {
    var vec__28014 = p__28012;
    var encoding = cljs.core.nth.call(null, vec__28014, 0, null);
    if (cljs.core.truth_(s)) {
      return decodeURIComponent(s);
    } else {
      return null;
    }
  };
  var url_decode = function(s, var_args) {
    var p__28012 = null;
    if (arguments.length > 1) {
      p__28012 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return url_decode__delegate.call(this, s, p__28012);
  };
  url_decode.cljs$lang$maxFixedArity = 1;
  url_decode.cljs$lang$applyTo = function(arglist__28015) {
    var s = cljs.core.first(arglist__28015);
    var p__28012 = cljs.core.rest(arglist__28015);
    return url_decode__delegate(s, p__28012);
  };
  url_decode.cljs$core$IFn$_invoke$arity$variadic = url_decode__delegate;
  return url_decode;
}();
no.en.core.pow = function pow(n, x) {
  return Math.pow(n, x);
};
no.en.core.byte_scale = cljs.core.PersistentHashMap.fromArrays(["T", "K", "G", "M", "Y", "Z", "E", "B", "P"], [no.en.core.pow.call(null, 1024, 4), no.en.core.pow.call(null, 1024, 1), no.en.core.pow.call(null, 1024, 3), no.en.core.pow.call(null, 1024, 2), no.en.core.pow.call(null, 1024, 8), no.en.core.pow.call(null, 1024, 7), no.en.core.pow.call(null, 1024, 6), no.en.core.pow.call(null, 1024, 0), no.en.core.pow.call(null, 1024, 5)]);
no.en.core.apply_unit = function apply_unit(number, unit) {
  if (typeof unit === "string") {
    var G__28018 = clojure.string.upper_case.call(null, unit);
    switch(G__28018) {
      default:
        var G__28019 = unit;
        switch(G__28019) {
          case "M":
            return number * 1E6;
            break;
          case "B":
            return number * 1E9;
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(unit)].join(""));;
        }
      ;
    }
  } else {
    return number;
  }
};
no.en.core.parse_number = function parse_number(s, parse_fn) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(M|B)?.*/, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var number = parse_fn.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    if (cljs.core.not.call(null, isNaN(number))) {
      return no.en.core.apply_unit.call(null, number, unit);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
no.en.core.parse_bytes = function parse_bytes(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(B|K|M|G|T|P|E|Z|Y)?.*/, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var number = cljs.reader.read_string.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    return cljs.core.long$.call(null, cljs.core.long$.call(null, cljs.reader.read_string.call(null, [cljs.core.str(cljs.core.nth.call(null, matches, 1))].join(""))) * cljs.core.get.call(null, no.en.core.byte_scale, clojure.string.upper_case.call(null, function() {
      var or__3628__auto__ = unit;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return "";
      }
    }()), 1));
  } else {
    return null;
  }
};
no.en.core.parse_integer = function parse_integer(s) {
  return no.en.core.parse_number.call(null, s, function(p1__28022_SHARP_) {
    return parseInt(p1__28022_SHARP_);
  });
};
no.en.core.parse_long = function parse_long(s) {
  return no.en.core.parse_number.call(null, s, function(p1__28023_SHARP_) {
    return parseInt(p1__28023_SHARP_);
  });
};
no.en.core.parse_double = function parse_double(s) {
  return no.en.core.parse_number.call(null, s, function(p1__28024_SHARP_) {
    return parseFloat(p1__28024_SHARP_);
  });
};
no.en.core.parse_float = function parse_float(s) {
  return no.en.core.parse_number.call(null, s, function(p1__28025_SHARP_) {
    return parseFloat(p1__28025_SHARP_);
  });
};
no.en.core.format_query_params = function format_query_params(m) {
  var params = clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__28028_SHARP_) {
    return clojure.string.join.call(null, "\x3d", p1__28028_SHARP_);
  }, cljs.core.map.call(null, function(p1__28027_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [no.en.core.url_encode.call(null, cljs.core.name.call(null, cljs.core.first.call(null, p1__28027_SHARP_))), no.en.core.url_encode.call(null, cljs.core.second.call(null, p1__28027_SHARP_))], null);
  }, cljs.core.remove.call(null, function(p1__28026_SHARP_) {
    return clojure.string.blank_QMARK_.call(null, [cljs.core.str(cljs.core.second.call(null, p1__28026_SHARP_))].join(""));
  }, cljs.core.seq.call(null, m)))));
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, params))) {
    return params;
  } else {
    return null;
  }
};
no.en.core.format_url = function format_url(m) {
  if (!cljs.core.empty_QMARK_.call(null, m)) {
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(m);
    return[cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)) ? [cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m))), cljs.core.str("://")].join("") : null), cljs.core.str(function() {
      var map__28030 = m;
      var map__28030__$1 = cljs.core.seq_QMARK_.call(null, map__28030) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28030) : map__28030;
      var password = cljs.core.get.call(null, map__28030__$1, new cljs.core.Keyword(null, "password", "password", 417022471));
      var user = cljs.core.get.call(null, map__28030__$1, new cljs.core.Keyword(null, "user", "user", 1532431356));
      if (cljs.core.truth_(user)) {
        return[cljs.core.str(cljs.core.truth_(user) ? user : null), cljs.core.str(cljs.core.truth_(password) ? [cljs.core.str(":"), cljs.core.str(password)].join("") : null), cljs.core.str("@")].join("");
      } else {
        return null;
      }
    }()), cljs.core.str((new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str(function() {
      var temp__4124__auto__ = (new cljs.core.Keyword(null, "server-port", "server-port", 663745648)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var port = temp__4124__auto__;
        if (!cljs.core._EQ_.call(null, port, no.en.core.port_number.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)))) {
          return[cljs.core.str(":"), cljs.core.str(port)].join("");
        } else {
          return null;
        }
      } else {
        return null;
      }
    }()), cljs.core.str((new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m) == null && !cljs.core.empty_QMARK_.call(null, query_params) ? "/" : (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str(!cljs.core.empty_QMARK_.call(null, query_params) ? [cljs.core.str("?"), cljs.core.str(no.en.core.format_query_params.call(null, query_params))].join("") : null), cljs.core.str(cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, 
    (new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))) ? [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))].join("") : null)].join("");
  } else {
    return null;
  }
};
no.en.core.parse_percent = function parse_percent(s) {
  return no.en.core.parse_double.call(null, clojure.string.replace.call(null, s, "%", ""));
};
no.en.core.pattern_quote = function pattern_quote(s) {
  return clojure.string.replace.call(null, cljs.core.name.call(null, s), /([\[\]\^\$\|\(\)\\\+\*\?\{\}\=\!.])/, "\\\\$1");
};
no.en.core.separator = function separator(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, /([a-z0-9_-]+)([^a-z0-9_-]+).*/i, s);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    return cljs.core.nth.call(null, matches, 2);
  } else {
    return null;
  }
};
no.en.core.parse_query_params = function parse_query_params(s) {
  if (cljs.core.truth_(s)) {
    return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__28033_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, no.en.core.url_decode.call(null, cljs.core.first.call(null, p1__28033_SHARP_))), no.en.core.url_decode.call(null, cljs.core.second.call(null, p1__28033_SHARP_))], null);
    }, cljs.core.filter.call(null, function(p1__28032_SHARP_) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, p1__28032_SHARP_));
    }, cljs.core.map.call(null, function(p1__28031_SHARP_) {
      return clojure.string.split.call(null, p1__28031_SHARP_, /=/);
    }, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /&/)))));
  } else {
    return null;
  }
};
no.en.core.parse_url = function parse_url(s) {
  var temp__4124__auto__ = cljs.core.re_matches.call(null, no.en.core.url_regex, [cljs.core.str(s)].join(""));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var matches = temp__4124__auto__;
    var scheme = cljs.core.keyword.call(null, cljs.core.nth.call(null, matches, 1));
    return no.en.core.compact_map.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "password", "password", 417022471), new cljs.core.Keyword(null, "fragment", "fragment", 826775688), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "uri", "uri", -774711847), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), new cljs.core.Keyword(null, 
    "query-string", "query-string", -1018845061), new cljs.core.Keyword(null, "user", "user", 1532431356), new cljs.core.Keyword(null, "scheme", "scheme", 90199613)], [cljs.core.nth.call(null, matches, 4), cljs.core.nth.call(null, matches, 14), function() {
      var or__3628__auto__ = no.en.core.parse_integer.call(null, cljs.core.nth.call(null, matches, 8));
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return no.en.core.port_number.call(null, scheme);
      }
    }(), no.en.core.parse_query_params.call(null, cljs.core.nth.call(null, matches, 12)), cljs.core.nth.call(null, matches, 10), cljs.core.nth.call(null, matches, 6), cljs.core.nth.call(null, matches, 12), cljs.core.nth.call(null, matches, 3), scheme]));
  } else {
    return null;
  }
};
no.en.core.with_retries_STAR_ = function with_retries_STAR_(n, thunk) {
  var n__$1 = n;
  while (true) {
    var temp__4124__auto__ = function() {
      try {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [thunk.call(null)], null);
      } catch (e28035) {
        if (e28035 instanceof Error) {
          var e = e28035;
          if (n__$1 === 0) {
            throw e;
          } else {
            return null;
          }
        } else {
          throw e28035;
        }
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var result = temp__4124__auto__;
      return result.call(null, 0);
    } else {
      var G__28036 = n__$1 - 1;
      n__$1 = G__28036;
      continue;
    }
    break;
  }
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.transitHashCodeProperty = "$com$cognitect$transit$hashCode$";
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var sub = 0, xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (p == eq.transitHashCodeProperty) {
                      if (!y[p]) {
                        sub = -1;
                      }
                      continue;
                    }
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen + sub === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        if (key === eq.transitHashCodeProperty) {
          continue;
        }
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = arr[eq.transitHashCodeProperty] || 0;
    if (code !== 0) {
      return code;
    } else {
      if (util.isArray(arr)) {
        for (var i = 0;i < arr.length;i++) {
          code = eq.hashCombine(code, eq.hashCode(arr[i]));
        }
        arr[eq.transitHashCodeProperty] = code;
      } else {
        if (arr.forEach) {
          arr.forEach(function(x, i) {
            code = eq.hashCombine(code, eq.hashCode(x));
          });
        }
      }
      return code;
    }
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      var t = typeof x;
      switch(t) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            if (x[eq.transitHashCodeProperty]) {
              return x[eq.transitHashCodeProperty];
            } else {
              return eq.hashMapLike(x);
            }
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.ZERO;
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MAX_VALUE;
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.ZERO = goog.math.Long.fromInt(0);
goog.math.Long.ONE = goog.math.Long.fromInt(1);
goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return(this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return-1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return-1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return goog.math.Long.MIN_VALUE;
  } else {
    return this.not().add(goog.math.Long.ONE);
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  types.TaggedValue = function(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740992");
  types.MIN_INT = Long.fromString("-9007199254740992");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this.name;
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this.name == other.name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype.toString = function() {
    return "[Symbol: " + this.name + "]";
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this.name == other.name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function(s) {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str) {
    return types.taggedValue("b", str);
  };
  types.isBinary = function(x) {
    return x instanceof types.TaggedValue && x.tag === "b";
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function(map, type) {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitMapIterator = function(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.mapEquals = function(me, you) {
    if ((you instanceof types.TransitMap || you instanceof types.TransitArrayMap) && me.size === you.size) {
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (you != null && typeof you === "object") {
        var ks = util.objectKeys(you), kslen = ks.length - (you.hasOwnProperty(eq.transitHashCodeProperty) && 1 || 0);
        if (me.size === kslen) {
          for (var p in you) {
            if (p !== eq.transitHashCodeProperty && !eq.equals(you[p], me.get(p))) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.TransitArrayMap = function(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return "[TransitArrayMap]";
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return null;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    if (this.backingMap) {
      this.backingMap["delete"](k);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries.splice(i, 2);
          this.size--;
          return;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return "[TransitMap]";
  };
  types.TransitMap.prototype.clear = function() {
    this.map = {};
    this._keys = [];
    this.size = 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        break;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return null;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return "[TransitSet]";
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    this.map["delete"](value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.List && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function() {
    this.idx = 0;
    this.gen++;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB;
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v) {
    return types.nullValue();
  }, "?":function(v) {
    return types.boolValue(v);
  }, "b":function(v) {
    return types.binary(v);
  }, "i":function(v) {
    return types.intValue(v);
  }, "n":function(v) {
    return types.bigInteger(v);
  }, "d":function(v) {
    return types.floatValue(v);
  }, "f":function(v) {
    return types.bigDecimalValue(v);
  }, "c":function(v) {
    return types.charValue(v);
  }, ":":function(v) {
    return types.keyword(v);
  }, "$":function(v) {
    return types.symbol(v);
  }, "r":function(v) {
    return types.uri(v);
  }, "'":function(v) {
    return v;
  }, "m":function(v) {
    return types.date(v);
  }, "t":function(v) {
    return types.verboseDate(v);
  }, "u":function(v) {
    return types.uuid(v);
  }, "set":function(v) {
    return types.set(v);
  }, "list":function(v) {
    return types.list(v);
  }, "link":function(v) {
    return types.link(v);
  }, "cmap":function(v) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, false, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true));
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, false, true));
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, false, false));
          }
        }
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init();
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2));
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "com$cognitect$transit$ctor$guid";
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    return hs;
  };
  handlers.Handlers = function() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    return this.handlers[handlers.typeTag(ctor)];
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    this.handlers[handlers.typeTag(ctor)] = handler;
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    if (this.opts["handlers"]) {
      var self = this;
      this.opts["handlers"].forEach(function(v, k) {
        self.handlers.set(k, v);
      });
    }
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    return this.handlers.get(handlers.constructor(obj));
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (asMapKey || typeof i === "string" || i instanceof Long) {
      return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
    } else {
      return i;
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return[this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      var iter = obj.keys();
      step = iter.next();
      while (!step.done) {
        stringableKeys = writer.isStringableKey(em, step.value);
        if (!stringableKeys) {
          break;
        }
        step = iter.next();
      }
      return stringableKeys;
    }
  };
  writer.emitMap = function(em, obj, skip, cache) {
    if (obj.constructor === Object || obj.forEach != null) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            var ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          var ret = {}, ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var arr = em.unpack(obj), ret = ["^ "];
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return[tag, rep];
          }
        } else {
          var ret = ["^ "], ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return[em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {};
    asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      type = "json";
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashKey = eq.transitHashCodeProperty;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashMapLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = types.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashKey", eq.transitHashCodeProperty);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", types.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashKey:eq.transitHashCodeProperty, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:types.randomUUID, stringableKeys:writer.stringableKeys};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("goog.math.Long");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit");
cljs.core.enable_console_print_BANG_.call(null);
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
cognitect.transit.opts_merge = function opts_merge(a, b) {
  var seq__27870_27874 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__27871_27875 = null;
  var count__27872_27876 = 0;
  var i__27873_27877 = 0;
  while (true) {
    if (i__27873_27877 < count__27872_27876) {
      var k_27878 = cljs.core._nth.call(null, chunk__27871_27875, i__27873_27877);
      var v_27879 = b[k_27878];
      a[k_27878] = v_27879;
      var G__27880 = seq__27870_27874;
      var G__27881 = chunk__27871_27875;
      var G__27882 = count__27872_27876;
      var G__27883 = i__27873_27877 + 1;
      seq__27870_27874 = G__27880;
      chunk__27871_27875 = G__27881;
      count__27872_27876 = G__27882;
      i__27873_27877 = G__27883;
      continue;
    } else {
      var temp__4126__auto___27884 = cljs.core.seq.call(null, seq__27870_27874);
      if (temp__4126__auto___27884) {
        var seq__27870_27885__$1 = temp__4126__auto___27884;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27870_27885__$1)) {
          var c__4415__auto___27886 = cljs.core.chunk_first.call(null, seq__27870_27885__$1);
          var G__27887 = cljs.core.chunk_rest.call(null, seq__27870_27885__$1);
          var G__27888 = c__4415__auto___27886;
          var G__27889 = cljs.core.count.call(null, c__4415__auto___27886);
          var G__27890 = 0;
          seq__27870_27874 = G__27887;
          chunk__27871_27875 = G__27888;
          count__27872_27876 = G__27889;
          i__27873_27877 = G__27890;
          continue;
        } else {
          var k_27891 = cljs.core.first.call(null, seq__27870_27885__$1);
          var v_27892 = b[k_27891];
          a[k_27891] = v_27892;
          var G__27893 = cljs.core.next.call(null, seq__27870_27885__$1);
          var G__27894 = null;
          var G__27895 = 0;
          var G__27896 = 0;
          seq__27870_27874 = G__27893;
          chunk__27871_27875 = G__27894;
          count__27872_27876 = G__27895;
          i__27873_27877 = G__27896;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function __GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function __GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function() {
  var reader = null;
  var reader__1 = function(type) {
    return reader.call(null, type, null);
  };
  var reader__2 = function(type, opts) {
    return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"prefersStrings":false, "arrayBuilder":new cognitect.transit.VectorBuilder, "mapBuilder":new cognitect.transit.MapBuilder, "handlers":{"cmap":function(v) {
      var i = 0;
      var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
      while (true) {
        if (i < v.length) {
          var G__27897 = i + 2;
          var G__27898 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
          i = G__27897;
          ret = G__27898;
          continue;
        } else {
          return cljs.core.persistent_BANG_.call(null, ret);
        }
        break;
      }
    }, "list":function(v) {
      return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
    }, "set":function(v) {
      return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
    }, ":":function(v) {
      return cljs.core.keyword.call(null, v);
    }, "$":function(v) {
      return cljs.core.symbol.call(null, v);
    }}}, cljs.core.clj__GT_js.call(null, opts)));
  };
  reader = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return reader__1.call(this, type);
      case 2:
        return reader__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reader.cljs$core$IFn$_invoke$arity$1 = reader__1;
  reader.cljs$core$IFn$_invoke$arity$2 = reader__2;
  return reader;
}();
cognitect.transit.read = function read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function __GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function __GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__27899_27903 = cljs.core.seq.call(null, v);
  var chunk__27900_27904 = null;
  var count__27901_27905 = 0;
  var i__27902_27906 = 0;
  while (true) {
    if (i__27902_27906 < count__27901_27905) {
      var x_27907 = cljs.core._nth.call(null, chunk__27900_27904, i__27902_27906);
      ret.push(x_27907);
      var G__27908 = seq__27899_27903;
      var G__27909 = chunk__27900_27904;
      var G__27910 = count__27901_27905;
      var G__27911 = i__27902_27906 + 1;
      seq__27899_27903 = G__27908;
      chunk__27900_27904 = G__27909;
      count__27901_27905 = G__27910;
      i__27902_27906 = G__27911;
      continue;
    } else {
      var temp__4126__auto___27912 = cljs.core.seq.call(null, seq__27899_27903);
      if (temp__4126__auto___27912) {
        var seq__27899_27913__$1 = temp__4126__auto___27912;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27899_27913__$1)) {
          var c__4415__auto___27914 = cljs.core.chunk_first.call(null, seq__27899_27913__$1);
          var G__27915 = cljs.core.chunk_rest.call(null, seq__27899_27913__$1);
          var G__27916 = c__4415__auto___27914;
          var G__27917 = cljs.core.count.call(null, c__4415__auto___27914);
          var G__27918 = 0;
          seq__27899_27903 = G__27915;
          chunk__27900_27904 = G__27916;
          count__27901_27905 = G__27917;
          i__27902_27906 = G__27918;
          continue;
        } else {
          var x_27919 = cljs.core.first.call(null, seq__27899_27913__$1);
          ret.push(x_27919);
          var G__27920 = cljs.core.next.call(null, seq__27899_27913__$1);
          var G__27921 = null;
          var G__27922 = 0;
          var G__27923 = 0;
          seq__27899_27903 = G__27920;
          chunk__27900_27904 = G__27921;
          count__27901_27905 = G__27922;
          i__27902_27906 = G__27923;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function __GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function __GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__27924_27928 = cljs.core.seq.call(null, v);
  var chunk__27925_27929 = null;
  var count__27926_27930 = 0;
  var i__27927_27931 = 0;
  while (true) {
    if (i__27927_27931 < count__27926_27930) {
      var x_27932 = cljs.core._nth.call(null, chunk__27925_27929, i__27927_27931);
      ret.push(x_27932);
      var G__27933 = seq__27924_27928;
      var G__27934 = chunk__27925_27929;
      var G__27935 = count__27926_27930;
      var G__27936 = i__27927_27931 + 1;
      seq__27924_27928 = G__27933;
      chunk__27925_27929 = G__27934;
      count__27926_27930 = G__27935;
      i__27927_27931 = G__27936;
      continue;
    } else {
      var temp__4126__auto___27937 = cljs.core.seq.call(null, seq__27924_27928);
      if (temp__4126__auto___27937) {
        var seq__27924_27938__$1 = temp__4126__auto___27937;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27924_27938__$1)) {
          var c__4415__auto___27939 = cljs.core.chunk_first.call(null, seq__27924_27938__$1);
          var G__27940 = cljs.core.chunk_rest.call(null, seq__27924_27938__$1);
          var G__27941 = c__4415__auto___27939;
          var G__27942 = cljs.core.count.call(null, c__4415__auto___27939);
          var G__27943 = 0;
          seq__27924_27928 = G__27940;
          chunk__27925_27929 = G__27941;
          count__27926_27930 = G__27942;
          i__27927_27931 = G__27943;
          continue;
        } else {
          var x_27944 = cljs.core.first.call(null, seq__27924_27938__$1);
          ret.push(x_27944);
          var G__27945 = cljs.core.next.call(null, seq__27924_27938__$1);
          var G__27946 = null;
          var G__27947 = 0;
          var G__27948 = 0;
          seq__27924_27928 = G__27945;
          chunk__27925_27929 = G__27946;
          count__27926_27930 = G__27947;
          i__27927_27931 = G__27948;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function __GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__27949_27953 = cljs.core.seq.call(null, v);
  var chunk__27950_27954 = null;
  var count__27951_27955 = 0;
  var i__27952_27956 = 0;
  while (true) {
    if (i__27952_27956 < count__27951_27955) {
      var x_27957 = cljs.core._nth.call(null, chunk__27950_27954, i__27952_27956);
      ret.push(x_27957);
      var G__27958 = seq__27949_27953;
      var G__27959 = chunk__27950_27954;
      var G__27960 = count__27951_27955;
      var G__27961 = i__27952_27956 + 1;
      seq__27949_27953 = G__27958;
      chunk__27950_27954 = G__27959;
      count__27951_27955 = G__27960;
      i__27952_27956 = G__27961;
      continue;
    } else {
      var temp__4126__auto___27962 = cljs.core.seq.call(null, seq__27949_27953);
      if (temp__4126__auto___27962) {
        var seq__27949_27963__$1 = temp__4126__auto___27962;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27949_27963__$1)) {
          var c__4415__auto___27964 = cljs.core.chunk_first.call(null, seq__27949_27963__$1);
          var G__27965 = cljs.core.chunk_rest.call(null, seq__27949_27963__$1);
          var G__27966 = c__4415__auto___27964;
          var G__27967 = cljs.core.count.call(null, c__4415__auto___27964);
          var G__27968 = 0;
          seq__27949_27953 = G__27965;
          chunk__27950_27954 = G__27966;
          count__27951_27955 = G__27967;
          i__27952_27956 = G__27968;
          continue;
        } else {
          var x_27969 = cljs.core.first.call(null, seq__27949_27963__$1);
          ret.push(x_27969);
          var G__27970 = cljs.core.next.call(null, seq__27949_27963__$1);
          var G__27971 = null;
          var G__27972 = 0;
          var G__27973 = 0;
          seq__27949_27953 = G__27970;
          chunk__27950_27954 = G__27971;
          count__27951_27955 = G__27972;
          i__27952_27956 = G__27973;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function __GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.writer = function() {
  var writer = null;
  var writer__1 = function(type) {
    return writer.call(null, type, null);
  };
  var writer__2 = function(type, opts) {
    var keyword_handler = new cognitect.transit.KeywordHandler;
    var symbol_handler = new cognitect.transit.SymbolHandler;
    var list_handler = new cognitect.transit.ListHandler;
    var map_handler = new cognitect.transit.MapHandler;
    var set_handler = new cognitect.transit.SetHandler;
    var vector_handler = new cognitect.transit.VectorHandler;
    var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
    cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, symbol_handler, 
    list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
    return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers) {
      return function(x) {
        if (x instanceof cljs.core.PersistentArrayMap) {
          return x.arr;
        } else {
          return false;
        }
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers), "handlers":function() {
      var x27983 = cljs.core.clone.call(null, handlers);
      x27983.forEach = function(x27983, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers) {
        return function(f) {
          var coll = this;
          var seq__27984 = cljs.core.seq.call(null, coll);
          var chunk__27985 = null;
          var count__27986 = 0;
          var i__27987 = 0;
          while (true) {
            if (i__27987 < count__27986) {
              var vec__27988 = cljs.core._nth.call(null, chunk__27985, i__27987);
              var k = cljs.core.nth.call(null, vec__27988, 0, null);
              var v = cljs.core.nth.call(null, vec__27988, 1, null);
              f.call(null, v, k);
              var G__27990 = seq__27984;
              var G__27991 = chunk__27985;
              var G__27992 = count__27986;
              var G__27993 = i__27987 + 1;
              seq__27984 = G__27990;
              chunk__27985 = G__27991;
              count__27986 = G__27992;
              i__27987 = G__27993;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__27984);
              if (temp__4126__auto__) {
                var seq__27984__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__27984__$1)) {
                  var c__4415__auto__ = cljs.core.chunk_first.call(null, seq__27984__$1);
                  var G__27994 = cljs.core.chunk_rest.call(null, seq__27984__$1);
                  var G__27995 = c__4415__auto__;
                  var G__27996 = cljs.core.count.call(null, c__4415__auto__);
                  var G__27997 = 0;
                  seq__27984 = G__27994;
                  chunk__27985 = G__27995;
                  count__27986 = G__27996;
                  i__27987 = G__27997;
                  continue;
                } else {
                  var vec__27989 = cljs.core.first.call(null, seq__27984__$1);
                  var k = cljs.core.nth.call(null, vec__27989, 0, null);
                  var v = cljs.core.nth.call(null, vec__27989, 1, null);
                  f.call(null, v, k);
                  var G__27998 = cljs.core.next.call(null, seq__27984__$1);
                  var G__27999 = null;
                  var G__28000 = 0;
                  var G__28001 = 0;
                  seq__27984 = G__27998;
                  chunk__27985 = G__27999;
                  count__27986 = G__28000;
                  i__27987 = G__28001;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(x27983, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers);
      return x27983;
    }(), "objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers) {
      return function(m, kfn, vfn) {
        return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers) {
          return function(obj, k, v) {
            var G__27982 = obj;
            G__27982.push(kfn.call(null, k), vfn.call(null, v));
            return G__27982;
          };
        }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers), ["^ "], m);
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
  };
  writer = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return writer__1.call(this, type);
      case 2:
        return writer__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  writer.cljs$core$IFn$_invoke$arity$1 = writer__1;
  writer.cljs$core$IFn$_invoke$arity$2 = writer__2;
  return writer;
}();
cognitect.transit.write = function write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function() {
  var write_handler = null;
  var write_handler__2 = function(tag_fn, rep_fn) {
    return write_handler.call(null, tag_fn, rep_fn, null, null);
  };
  var write_handler__3 = function(tag_fn, rep_fn, str_rep_fn) {
    return write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
  };
  var write_handler__4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    if (typeof cognitect.transit.t28005 !== "undefined") {
    } else {
      cognitect.transit.t28005 = function(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, write_handler, meta28006) {
        this.verbose_handler_fn = verbose_handler_fn;
        this.str_rep_fn = str_rep_fn;
        this.rep_fn = rep_fn;
        this.tag_fn = tag_fn;
        this.write_handler = write_handler;
        this.meta28006 = meta28006;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cognitect.transit.t28005.prototype.tag = function(o) {
        var self__ = this;
        var _ = this;
        return self__.tag_fn.call(null, o);
      };
      cognitect.transit.t28005.prototype.rep = function(o) {
        var self__ = this;
        var _ = this;
        return self__.rep_fn.call(null, o);
      };
      cognitect.transit.t28005.prototype.stringRep = function(o) {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.str_rep_fn)) {
          return self__.str_rep_fn.call(null, o);
        } else {
          return null;
        }
      };
      cognitect.transit.t28005.prototype.getVerboseHandler = function() {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.verbose_handler_fn)) {
          return self__.verbose_handler_fn.call(null);
        } else {
          return null;
        }
      };
      cognitect.transit.t28005.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28007) {
        var self__ = this;
        var _28007__$1 = this;
        return self__.meta28006;
      };
      cognitect.transit.t28005.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28007, meta28006__$1) {
        var self__ = this;
        var _28007__$1 = this;
        return new cognitect.transit.t28005(self__.verbose_handler_fn, self__.str_rep_fn, self__.rep_fn, self__.tag_fn, self__.write_handler, meta28006__$1);
      };
      cognitect.transit.t28005.cljs$lang$type = true;
      cognitect.transit.t28005.cljs$lang$ctorStr = "cognitect.transit/t28005";
      cognitect.transit.t28005.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "cognitect.transit/t28005");
      };
      cognitect.transit.__GT_t28005 = function __GT_t28005(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta28006) {
        return new cognitect.transit.t28005(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta28006);
      };
    }
    return new cognitect.transit.t28005(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, write_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 79, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 233, new cljs.core.Keyword(null, "column", "column", 2078222095), 6, new cljs.core.Keyword(null, "line", "line", 212345235), 229, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cognitect/transit.cljs"], 
    null));
  };
  write_handler = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    switch(arguments.length) {
      case 2:
        return write_handler__2.call(this, tag_fn, rep_fn);
      case 3:
        return write_handler__3.call(this, tag_fn, rep_fn, str_rep_fn);
      case 4:
        return write_handler__4.call(this, tag_fn, rep_fn, str_rep_fn, verbose_handler_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  write_handler.cljs$core$IFn$_invoke$arity$2 = write_handler__2;
  write_handler.cljs$core$IFn$_invoke$arity$3 = write_handler__3;
  write_handler.cljs$core$IFn$_invoke$arity$4 = write_handler__4;
  return write_handler;
}();
cognitect.transit.tagged_value = function tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function integer(s) {
  return com.cognitect.transit.types.integer.call(null, s);
};
cognitect.transit.integer_QMARK_ = function integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function uuid_QMARK_(x) {
  return com.cognitect.transit.types.isUUID.call(null, x);
};
cognitect.transit.binary = function binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("cljs_http.util");
goog.require("cljs.core");
goog.require("no.en.core");
goog.require("goog.userAgent");
goog.require("cognitect.transit");
goog.require("clojure.string");
goog.require("goog.Uri");
cljs_http.util.basic_auth = function basic_auth(credentials) {
  if (cljs.core.truth_(credentials)) {
    var vec__27856 = cljs.core.map_QMARK_.call(null, credentials) ? cljs.core.map.call(null, credentials, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "password", "password", 417022471)], null)) : credentials;
    var username = cljs.core.nth.call(null, vec__27856, 0, null);
    var password = cljs.core.nth.call(null, vec__27856, 1, null);
    return[cljs.core.str("Basic "), cljs.core.str(no.en.core.base64_encode.call(null, [cljs.core.str(username), cljs.core.str(":"), cljs.core.str(password)].join("")))].join("");
  } else {
    return null;
  }
};
cljs_http.util.build_url = function build_url(p__27857) {
  var map__27860 = p__27857;
  var map__27860__$1 = cljs.core.seq_QMARK_.call(null, map__27860) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27860) : map__27860;
  var query_string = cljs.core.get.call(null, map__27860__$1, new cljs.core.Keyword(null, "query-string", "query-string", -1018845061));
  var uri = cljs.core.get.call(null, map__27860__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
  var server_port = cljs.core.get.call(null, map__27860__$1, new cljs.core.Keyword(null, "server-port", "server-port", 663745648));
  var server_name = cljs.core.get.call(null, map__27860__$1, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295));
  var scheme = cljs.core.get.call(null, map__27860__$1, new cljs.core.Keyword(null, "scheme", "scheme", 90199613));
  return[cljs.core.str(function() {
    var G__27861 = new goog.Uri;
    G__27861.setScheme(cljs.core.name.call(null, function() {
      var or__3628__auto__ = scheme;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return new cljs.core.Keyword(null, "http", "http", 382524695);
      }
    }()));
    G__27861.setDomain(server_name);
    G__27861.setPort(server_port);
    G__27861.setPath(uri);
    G__27861.setQuery(query_string, true);
    return G__27861;
  }())].join("");
};
cljs_http.util.camelize = function camelize(s) {
  return clojure.string.join.call(null, "-", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /-/)));
};
cljs_http.util.build_headers = function build_headers(m) {
  return cljs.core.clj__GT_js.call(null, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, m)), cljs.core.vals.call(null, m)));
};
cljs_http.util.user_agent = function user_agent() {
  return goog.userAgent.getUserAgentString();
};
cljs_http.util.android_QMARK_ = function android_QMARK_() {
  return cljs.core.re_matches.call(null, /.*android.*/i, cljs_http.util.user_agent.call(null));
};
cljs_http.util.transit_decode = function transit_decode(s, type, opts) {
  var rdr = cognitect.transit.reader.call(null, type, opts);
  return cognitect.transit.read.call(null, rdr, s);
};
cljs_http.util.transit_encode = function transit_encode(x, type, opts) {
  var wrtr = cognitect.transit.writer.call(null, type, opts);
  return cognitect.transit.write.call(null, wrtr, x);
};
cljs_http.util.json_decode = function json_decode(s) {
  var temp__4124__auto__ = JSON.parse(s);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var v = temp__4124__auto__;
    return cljs.core.js__GT_clj.call(null, v, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  } else {
    return null;
  }
};
cljs_http.util.json_encode = function json_encode(x) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, x));
};
cljs_http.util.parse_headers = function parse_headers(headers) {
  return cljs.core.reduce.call(null, function(p1__27863_SHARP_, p2__27862_SHARP_) {
    var vec__27865 = clojure.string.split.call(null, p2__27862_SHARP_, /:\s+/);
    var k = cljs.core.nth.call(null, vec__27865, 0, null);
    var v = cljs.core.nth.call(null, vec__27865, 1, null);
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = clojure.string.blank_QMARK_.call(null, k);
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return clojure.string.blank_QMARK_.call(null, v);
      }
    }())) {
      return p1__27863_SHARP_;
    } else {
      return cljs.core.assoc.call(null, p1__27863_SHARP_, clojure.string.lower_case.call(null, k), v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, function() {
    var or__3628__auto__ = headers;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return "";
    }
  }(), /(\n)|(\r)|(\r\n)|(\n\r)/));
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__25856 = cnt + 1;
      cnt = G__25856;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4515__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4515__auto__) {
      var v_25857 = this$.pop();
      if (keep_QMARK_.call(null, v_25857)) {
        this$.unshift(v_25857);
      } else {
      }
      var G__25858 = x + 1;
      x = G__25858;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_25859 = 0;
  while (true) {
    var m_25860 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_25860 == null) {
    } else {
      m_25860.call(null);
      if (count_25859 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__25861 = count_25859 + 1;
        count_25859 = G__25861;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3616__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3616__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t25865 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t25865 = function(val, box, meta25866) {
      this.val = val;
      this.box = box;
      this.meta25866 = meta25866;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t25865.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t25865.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25867) {
      var self__ = this;
      var _25867__$1 = this;
      return self__.meta25866;
    };
    cljs.core.async.impl.channels.t25865.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25867, meta25866__$1) {
      var self__ = this;
      var _25867__$1 = this;
      return new cljs.core.async.impl.channels.t25865(self__.val, self__.box, meta25866__$1);
    };
    cljs.core.async.impl.channels.t25865.cljs$lang$type = true;
    cljs.core.async.impl.channels.t25865.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t25865";
    cljs.core.async.impl.channels.t25865.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.channels/t25865");
    };
    cljs.core.async.impl.channels.__GT_t25865 = function __GT_t25865(val__$1, box__$1, meta25866) {
      return new cljs.core.async.impl.channels.t25865(val__$1, box__$1, meta25866);
    };
  }
  return new cljs.core.async.impl.channels.t25865(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj25869 = {};
  return obj25869;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = self__.buf;
      if (cljs.core.truth_(and__3616__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3616__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_25870 = self__.takes.pop();
      if (taker_25870 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_25870)) {
          var take_cb_25871 = cljs.core.async.impl.protocols.commit.call(null, taker_25870);
          var val_25872 = cljs.core.truth_(function() {
            var and__3616__auto__ = self__.buf;
            if (cljs.core.truth_(and__3616__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3616__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_25871, val_25872, taker_25870, this$__$1) {
            return function() {
              return take_cb_25871.call(null, val_25872);
            };
          }(take_cb_25871, val_25872, taker_25870, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_25873 = self__.puts.pop();
          if (putter_25873 == null) {
          } else {
            var put_handler_25874 = putter_25873.handler;
            var val_25875 = putter_25873.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_25874)) {
              var put_cb_25876 = cljs.core.async.impl.protocols.commit.call(null, put_handler_25874);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_25876, put_handler_25874, val_25875, putter_25873, _, retval, this$__$1) {
                return function() {
                  return put_cb_25876.call(null, true);
                };
              }(put_cb_25876, put_handler_25874, val_25875, putter_25873, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_25875))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3616__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3616__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3616__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3616__auto__ = self__.buf;
              if (cljs.core.truth_(and__3616__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3616__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = self__.buf;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3616__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_25877 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_25877)) {
            var take_cb_25878 = cljs.core.async.impl.protocols.commit.call(null, taker_25877);
            var val_25879__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_25878, val_25879__$1, taker_25877, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_25878.call(null, val_25879__$1);
              };
            }(take_cb_25878, val_25879__$1, taker_25877, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_25880 = self__.puts.pop();
    if (putter_25880 == null) {
    } else {
      var put_handler_25881 = putter_25880.handler;
      var val_25882 = putter_25880.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_25881)) {
        var put_cb_25883 = cljs.core.async.impl.protocols.commit.call(null, put_handler_25881);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_25883, put_handler_25881, val_25882, putter_25880, this$__$1) {
          return function() {
            return put_cb_25883.call(null, true);
          };
        }(put_cb_25883, put_handler_25881, val_25882, putter_25880, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3628__auto__ = exh;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__25888 = null;
          var G__25888__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e25886) {
              var t = e25886;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__25888__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e25887) {
              var t = e25887;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__25888 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__25888__1.call(this, buf__$1);
              case 2:
                return G__25888__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__25888.cljs$core$IFn$_invoke$arity$1 = G__25888__1;
          G__25888.cljs$core$IFn$_invoke$arity$2 = G__25888__2;
          return G__25888;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__25778 = level + 1;
        level = G__25778;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_25779 = 0;
    while (true) {
      if (i_25779 < arr.length) {
        arr[i_25779] = null;
        var G__25780 = i_25779 + 1;
        i_25779 = G__25780;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__25781 = x_SINGLEQUOTE_;
                x__$1 = G__25781;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__25782 = x__$1;
        var G__25783 = k;
        var G__25784 = level - 1;
        var G__25785 = update;
        x = G__25782;
        k = G__25783;
        level = G__25784;
        update = G__25785;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_25786 = self__.level + 1;
      while (true) {
        if (i_25786 <= new_level + 1) {
          update[i_25786] = self__.header;
          var G__25787 = i_25786 + 1;
          i_25786 = G__25787;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_25788 = 0;
    while (true) {
      if (i_25788 <= self__.level) {
        var links_25789 = update[i_25788].forward;
        if (links_25789[i_25788] === x__$1) {
          links_25789[i_25788] = x__$1.forward[i_25788];
          var G__25790 = i_25788 + 1;
          i_25788 = G__25790;
          continue;
        } else {
          var G__25791 = i_25788 + 1;
          i_25788 = G__25791;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__25792 = x_SINGLEQUOTE_;
              x__$1 = G__25792;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__25793 = nx;
        var G__25794 = level__$1 - 1;
        x = G__25793;
        level__$1 = G__25794;
        continue;
      } else {
        var G__25795 = x;
        var G__25796 = level__$1 - 1;
        x = G__25795;
        level__$1 = G__25796;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__25797 = x_SINGLEQUOTE_;
              x__$1 = G__25797;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__25798 = nx;
        var G__25799 = level__$1 - 1;
        x = G__25798;
        level__$1 = G__25799;
        continue;
      } else {
        var G__25800 = x;
        var G__25801 = level__$1 - 1;
        x = G__25800;
        level__$1 = G__25801;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3628__auto__ = cljs.core.truth_(function() {
    var and__3616__auto__ = me;
    if (cljs.core.truth_(and__3616__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3616__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3628__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3628__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t22693 !== "undefined") {
  } else {
    cljs.core.async.t22693 = function(f, fn_handler, meta22694) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta22694 = meta22694;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22693.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22693.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t22693.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t22693.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22695) {
      var self__ = this;
      var _22695__$1 = this;
      return self__.meta22694;
    };
    cljs.core.async.t22693.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22695, meta22694__$1) {
      var self__ = this;
      var _22695__$1 = this;
      return new cljs.core.async.t22693(self__.f, self__.fn_handler, meta22694__$1);
    };
    cljs.core.async.t22693.cljs$lang$type = true;
    cljs.core.async.t22693.cljs$lang$ctorStr = "cljs.core.async/t22693";
    cljs.core.async.t22693.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t22693");
    };
    cljs.core.async.__GT_t22693 = function __GT_t22693(f__$1, fn_handler__$1, meta22694) {
      return new cljs.core.async.t22693(f__$1, fn_handler__$1, meta22694);
    };
  }
  return new cljs.core.async.t22693(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__22697 = buff;
  if (G__22697) {
    var bit__4309__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = bit__4309__auto__;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return G__22697.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__22697.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__22697);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__22697);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_22698 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_22698);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_22698, ret) {
          return function() {
            return fn1.call(null, val_22698);
          };
        }(val_22698, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4515__auto___22699 = n;
  var x_22700 = 0;
  while (true) {
    if (x_22700 < n__4515__auto___22699) {
      a[x_22700] = 0;
      var G__22701 = x_22700 + 1;
      x_22700 = G__22701;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__22702 = i + 1;
      i = G__22702;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t22706 !== "undefined") {
  } else {
    cljs.core.async.t22706 = function(flag, alt_flag, meta22707) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta22707 = meta22707;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22706.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22706.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t22706.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t22706.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_22708) {
        var self__ = this;
        var _22708__$1 = this;
        return self__.meta22707;
      };
    }(flag);
    cljs.core.async.t22706.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_22708, meta22707__$1) {
        var self__ = this;
        var _22708__$1 = this;
        return new cljs.core.async.t22706(self__.flag, self__.alt_flag, meta22707__$1);
      };
    }(flag);
    cljs.core.async.t22706.cljs$lang$type = true;
    cljs.core.async.t22706.cljs$lang$ctorStr = "cljs.core.async/t22706";
    cljs.core.async.t22706.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t22706");
      };
    }(flag);
    cljs.core.async.__GT_t22706 = function(flag) {
      return function __GT_t22706(flag__$1, alt_flag__$1, meta22707) {
        return new cljs.core.async.t22706(flag__$1, alt_flag__$1, meta22707);
      };
    }(flag);
  }
  return new cljs.core.async.t22706(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t22712 !== "undefined") {
  } else {
    cljs.core.async.t22712 = function(cb, flag, alt_handler, meta22713) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta22713 = meta22713;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22712.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22712.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t22712.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t22712.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22714) {
      var self__ = this;
      var _22714__$1 = this;
      return self__.meta22713;
    };
    cljs.core.async.t22712.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22714, meta22713__$1) {
      var self__ = this;
      var _22714__$1 = this;
      return new cljs.core.async.t22712(self__.cb, self__.flag, self__.alt_handler, meta22713__$1);
    };
    cljs.core.async.t22712.cljs$lang$type = true;
    cljs.core.async.t22712.cljs$lang$ctorStr = "cljs.core.async/t22712";
    cljs.core.async.t22712.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t22712");
    };
    cljs.core.async.__GT_t22712 = function __GT_t22712(cb__$1, flag__$1, alt_handler__$1, meta22713) {
      return new cljs.core.async.t22712(cb__$1, flag__$1, alt_handler__$1, meta22713);
    };
  }
  return new cljs.core.async.t22712(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__22715_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22715_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__22716_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22716_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3628__auto__ = wport;
            if (cljs.core.truth_(or__3628__auto__)) {
              return or__3628__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__22717 = i + 1;
          i = G__22717;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3628__auto__ = ret;
  if (cljs.core.truth_(or__3628__auto__)) {
    return or__3628__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3616__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3616__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3616__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__22718) {
    var map__22720 = p__22718;
    var map__22720__$1 = cljs.core.seq_QMARK_.call(null, map__22720) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22720) : map__22720;
    var opts = map__22720__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__22718 = null;
    if (arguments.length > 1) {
      p__22718 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__22718);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__22721) {
    var ports = cljs.core.first(arglist__22721);
    var p__22718 = cljs.core.rest(arglist__22721);
    return alts_BANG___delegate(ports, p__22718);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6508__auto___22816 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___22816) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___22816) {
            return function(state_22792) {
              var state_val_22793 = state_22792[1];
              if (state_val_22793 === 7) {
                var inst_22788 = state_22792[2];
                var state_22792__$1 = state_22792;
                var statearr_22794_22817 = state_22792__$1;
                statearr_22794_22817[2] = inst_22788;
                statearr_22794_22817[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22793 === 1) {
                  var state_22792__$1 = state_22792;
                  var statearr_22795_22818 = state_22792__$1;
                  statearr_22795_22818[2] = null;
                  statearr_22795_22818[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22793 === 4) {
                    var inst_22771 = state_22792[7];
                    var inst_22771__$1 = state_22792[2];
                    var inst_22772 = inst_22771__$1 == null;
                    var state_22792__$1 = function() {
                      var statearr_22796 = state_22792;
                      statearr_22796[7] = inst_22771__$1;
                      return statearr_22796;
                    }();
                    if (cljs.core.truth_(inst_22772)) {
                      var statearr_22797_22819 = state_22792__$1;
                      statearr_22797_22819[1] = 5;
                    } else {
                      var statearr_22798_22820 = state_22792__$1;
                      statearr_22798_22820[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22793 === 13) {
                      var state_22792__$1 = state_22792;
                      var statearr_22799_22821 = state_22792__$1;
                      statearr_22799_22821[2] = null;
                      statearr_22799_22821[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22793 === 6) {
                        var inst_22771 = state_22792[7];
                        var state_22792__$1 = state_22792;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22792__$1, 11, to, inst_22771);
                      } else {
                        if (state_val_22793 === 3) {
                          var inst_22790 = state_22792[2];
                          var state_22792__$1 = state_22792;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22792__$1, inst_22790);
                        } else {
                          if (state_val_22793 === 12) {
                            var state_22792__$1 = state_22792;
                            var statearr_22800_22822 = state_22792__$1;
                            statearr_22800_22822[2] = null;
                            statearr_22800_22822[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22793 === 2) {
                              var state_22792__$1 = state_22792;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22792__$1, 4, from);
                            } else {
                              if (state_val_22793 === 11) {
                                var inst_22781 = state_22792[2];
                                var state_22792__$1 = state_22792;
                                if (cljs.core.truth_(inst_22781)) {
                                  var statearr_22801_22823 = state_22792__$1;
                                  statearr_22801_22823[1] = 12;
                                } else {
                                  var statearr_22802_22824 = state_22792__$1;
                                  statearr_22802_22824[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22793 === 9) {
                                  var state_22792__$1 = state_22792;
                                  var statearr_22803_22825 = state_22792__$1;
                                  statearr_22803_22825[2] = null;
                                  statearr_22803_22825[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22793 === 5) {
                                    var state_22792__$1 = state_22792;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_22804_22826 = state_22792__$1;
                                      statearr_22804_22826[1] = 8;
                                    } else {
                                      var statearr_22805_22827 = state_22792__$1;
                                      statearr_22805_22827[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22793 === 14) {
                                      var inst_22786 = state_22792[2];
                                      var state_22792__$1 = state_22792;
                                      var statearr_22806_22828 = state_22792__$1;
                                      statearr_22806_22828[2] = inst_22786;
                                      statearr_22806_22828[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22793 === 10) {
                                        var inst_22778 = state_22792[2];
                                        var state_22792__$1 = state_22792;
                                        var statearr_22807_22829 = state_22792__$1;
                                        statearr_22807_22829[2] = inst_22778;
                                        statearr_22807_22829[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22793 === 8) {
                                          var inst_22775 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_22792__$1 = state_22792;
                                          var statearr_22808_22830 = state_22792__$1;
                                          statearr_22808_22830[2] = inst_22775;
                                          statearr_22808_22830[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___22816);
          return function(switch__6493__auto__, c__6508__auto___22816) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_22812 = [null, null, null, null, null, null, null, null];
                statearr_22812[0] = state_machine__6494__auto__;
                statearr_22812[1] = 1;
                return statearr_22812;
              };
              var state_machine__6494__auto____1 = function(state_22792) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_22792);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e22813) {
                      if (e22813 instanceof Object) {
                        var ex__6497__auto__ = e22813;
                        var statearr_22814_22831 = state_22792;
                        statearr_22814_22831[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22792);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22813;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22832 = state_22792;
                    state_22792 = G__22832;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_22792) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_22792);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___22816);
        }();
        var state__6510__auto__ = function() {
          var statearr_22815 = f__6509__auto__.call(null);
          statearr_22815[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___22816;
          return statearr_22815;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___22816));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__23016) {
      var vec__23017 = p__23016;
      var v = cljs.core.nth.call(null, vec__23017, 0, null);
      var p = cljs.core.nth.call(null, vec__23017, 1, null);
      var job = vec__23017;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6508__auto___23199 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results) {
          return function() {
            var f__6509__auto__ = function() {
              var switch__6493__auto__ = function(c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results) {
                return function(state_23022) {
                  var state_val_23023 = state_23022[1];
                  if (state_val_23023 === 2) {
                    var inst_23019 = state_23022[2];
                    var inst_23020 = cljs.core.async.close_BANG_.call(null, res);
                    var state_23022__$1 = function() {
                      var statearr_23024 = state_23022;
                      statearr_23024[7] = inst_23019;
                      return statearr_23024;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23022__$1, inst_23020);
                  } else {
                    if (state_val_23023 === 1) {
                      var state_23022__$1 = state_23022;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23022__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results);
              return function(switch__6493__auto__, c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6494__auto__ = null;
                  var state_machine__6494__auto____0 = function() {
                    var statearr_23028 = [null, null, null, null, null, null, null, null];
                    statearr_23028[0] = state_machine__6494__auto__;
                    statearr_23028[1] = 1;
                    return statearr_23028;
                  };
                  var state_machine__6494__auto____1 = function(state_23022) {
                    while (true) {
                      var ret_value__6495__auto__ = function() {
                        try {
                          while (true) {
                            var result__6496__auto__ = switch__6493__auto__.call(null, state_23022);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6496__auto__;
                            }
                            break;
                          }
                        } catch (e23029) {
                          if (e23029 instanceof Object) {
                            var ex__6497__auto__ = e23029;
                            var statearr_23030_23200 = state_23022;
                            statearr_23030_23200[5] = ex__6497__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23022);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e23029;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__23201 = state_23022;
                        state_23022 = G__23201;
                        continue;
                      } else {
                        return ret_value__6495__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6494__auto__ = function(state_23022) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6494__auto____0.call(this);
                      case 1:
                        return state_machine__6494__auto____1.call(this, state_23022);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                  return state_machine__6494__auto__;
                }();
              }(switch__6493__auto__, c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results);
            }();
            var state__6510__auto__ = function() {
              var statearr_23031 = f__6509__auto__.call(null);
              statearr_23031[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___23199;
              return statearr_23031;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
          };
        }(c__6508__auto___23199, res, vec__23017, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__23032) {
      var vec__23033 = p__23032;
      var v = cljs.core.nth.call(null, vec__23033, 0, null);
      var p = cljs.core.nth.call(null, vec__23033, 1, null);
      var job = vec__23033;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4515__auto___23202 = n;
  var __23203 = 0;
  while (true) {
    if (__23203 < n__4515__auto___23202) {
      var G__23034_23204 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__23034_23204) {
        case "async":
          var c__6508__auto___23206 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__23203, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
            return function() {
              var f__6509__auto__ = function() {
                var switch__6493__auto__ = function(__23203, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
                  return function(state_23047) {
                    var state_val_23048 = state_23047[1];
                    if (state_val_23048 === 7) {
                      var inst_23043 = state_23047[2];
                      var state_23047__$1 = state_23047;
                      var statearr_23049_23207 = state_23047__$1;
                      statearr_23049_23207[2] = inst_23043;
                      statearr_23049_23207[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23048 === 6) {
                        var state_23047__$1 = state_23047;
                        var statearr_23050_23208 = state_23047__$1;
                        statearr_23050_23208[2] = null;
                        statearr_23050_23208[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23048 === 5) {
                          var state_23047__$1 = state_23047;
                          var statearr_23051_23209 = state_23047__$1;
                          statearr_23051_23209[2] = null;
                          statearr_23051_23209[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23048 === 4) {
                            var inst_23037 = state_23047[2];
                            var inst_23038 = async.call(null, inst_23037);
                            var state_23047__$1 = state_23047;
                            if (cljs.core.truth_(inst_23038)) {
                              var statearr_23052_23210 = state_23047__$1;
                              statearr_23052_23210[1] = 5;
                            } else {
                              var statearr_23053_23211 = state_23047__$1;
                              statearr_23053_23211[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23048 === 3) {
                              var inst_23045 = state_23047[2];
                              var state_23047__$1 = state_23047;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23047__$1, inst_23045);
                            } else {
                              if (state_val_23048 === 2) {
                                var state_23047__$1 = state_23047;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23047__$1, 4, jobs);
                              } else {
                                if (state_val_23048 === 1) {
                                  var state_23047__$1 = state_23047;
                                  var statearr_23054_23212 = state_23047__$1;
                                  statearr_23054_23212[2] = null;
                                  statearr_23054_23212[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__23203, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async);
                return function(__23203, switch__6493__auto__, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
                  return function() {
                    var state_machine__6494__auto__ = null;
                    var state_machine__6494__auto____0 = function() {
                      var statearr_23058 = [null, null, null, null, null, null, null];
                      statearr_23058[0] = state_machine__6494__auto__;
                      statearr_23058[1] = 1;
                      return statearr_23058;
                    };
                    var state_machine__6494__auto____1 = function(state_23047) {
                      while (true) {
                        var ret_value__6495__auto__ = function() {
                          try {
                            while (true) {
                              var result__6496__auto__ = switch__6493__auto__.call(null, state_23047);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6496__auto__;
                              }
                              break;
                            }
                          } catch (e23059) {
                            if (e23059 instanceof Object) {
                              var ex__6497__auto__ = e23059;
                              var statearr_23060_23213 = state_23047;
                              statearr_23060_23213[5] = ex__6497__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23047);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e23059;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__23214 = state_23047;
                          state_23047 = G__23214;
                          continue;
                        } else {
                          return ret_value__6495__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6494__auto__ = function(state_23047) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6494__auto____0.call(this);
                        case 1:
                          return state_machine__6494__auto____1.call(this, state_23047);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                    state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                    return state_machine__6494__auto__;
                  }();
                }(__23203, switch__6493__auto__, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async);
              }();
              var state__6510__auto__ = function() {
                var statearr_23061 = f__6509__auto__.call(null);
                statearr_23061[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___23206;
                return statearr_23061;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
            };
          }(__23203, c__6508__auto___23206, G__23034_23204, n__4515__auto___23202, jobs, results, process, async));
          break;
        case "compute":
          var c__6508__auto___23215 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__23203, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
            return function() {
              var f__6509__auto__ = function() {
                var switch__6493__auto__ = function(__23203, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
                  return function(state_23074) {
                    var state_val_23075 = state_23074[1];
                    if (state_val_23075 === 7) {
                      var inst_23070 = state_23074[2];
                      var state_23074__$1 = state_23074;
                      var statearr_23076_23216 = state_23074__$1;
                      statearr_23076_23216[2] = inst_23070;
                      statearr_23076_23216[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23075 === 6) {
                        var state_23074__$1 = state_23074;
                        var statearr_23077_23217 = state_23074__$1;
                        statearr_23077_23217[2] = null;
                        statearr_23077_23217[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23075 === 5) {
                          var state_23074__$1 = state_23074;
                          var statearr_23078_23218 = state_23074__$1;
                          statearr_23078_23218[2] = null;
                          statearr_23078_23218[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23075 === 4) {
                            var inst_23064 = state_23074[2];
                            var inst_23065 = process.call(null, inst_23064);
                            var state_23074__$1 = state_23074;
                            if (cljs.core.truth_(inst_23065)) {
                              var statearr_23079_23219 = state_23074__$1;
                              statearr_23079_23219[1] = 5;
                            } else {
                              var statearr_23080_23220 = state_23074__$1;
                              statearr_23080_23220[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23075 === 3) {
                              var inst_23072 = state_23074[2];
                              var state_23074__$1 = state_23074;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23074__$1, inst_23072);
                            } else {
                              if (state_val_23075 === 2) {
                                var state_23074__$1 = state_23074;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23074__$1, 4, jobs);
                              } else {
                                if (state_val_23075 === 1) {
                                  var state_23074__$1 = state_23074;
                                  var statearr_23081_23221 = state_23074__$1;
                                  statearr_23081_23221[2] = null;
                                  statearr_23081_23221[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__23203, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async);
                return function(__23203, switch__6493__auto__, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async) {
                  return function() {
                    var state_machine__6494__auto__ = null;
                    var state_machine__6494__auto____0 = function() {
                      var statearr_23085 = [null, null, null, null, null, null, null];
                      statearr_23085[0] = state_machine__6494__auto__;
                      statearr_23085[1] = 1;
                      return statearr_23085;
                    };
                    var state_machine__6494__auto____1 = function(state_23074) {
                      while (true) {
                        var ret_value__6495__auto__ = function() {
                          try {
                            while (true) {
                              var result__6496__auto__ = switch__6493__auto__.call(null, state_23074);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6496__auto__;
                              }
                              break;
                            }
                          } catch (e23086) {
                            if (e23086 instanceof Object) {
                              var ex__6497__auto__ = e23086;
                              var statearr_23087_23222 = state_23074;
                              statearr_23087_23222[5] = ex__6497__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23074);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e23086;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__23223 = state_23074;
                          state_23074 = G__23223;
                          continue;
                        } else {
                          return ret_value__6495__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6494__auto__ = function(state_23074) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6494__auto____0.call(this);
                        case 1:
                          return state_machine__6494__auto____1.call(this, state_23074);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                    state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                    return state_machine__6494__auto__;
                  }();
                }(__23203, switch__6493__auto__, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async);
              }();
              var state__6510__auto__ = function() {
                var statearr_23088 = f__6509__auto__.call(null);
                statearr_23088[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___23215;
                return statearr_23088;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
            };
          }(__23203, c__6508__auto___23215, G__23034_23204, n__4515__auto___23202, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__23224 = __23203 + 1;
      __23203 = G__23224;
      continue;
    } else {
    }
    break;
  }
  var c__6508__auto___23225 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___23225, jobs, results, process, async) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___23225, jobs, results, process, async) {
          return function(state_23110) {
            var state_val_23111 = state_23110[1];
            if (state_val_23111 === 9) {
              var inst_23103 = state_23110[2];
              var state_23110__$1 = function() {
                var statearr_23112 = state_23110;
                statearr_23112[7] = inst_23103;
                return statearr_23112;
              }();
              var statearr_23113_23226 = state_23110__$1;
              statearr_23113_23226[2] = null;
              statearr_23113_23226[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23111 === 8) {
                var inst_23096 = state_23110[8];
                var inst_23101 = state_23110[2];
                var state_23110__$1 = function() {
                  var statearr_23114 = state_23110;
                  statearr_23114[9] = inst_23101;
                  return statearr_23114;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23110__$1, 9, results, inst_23096);
              } else {
                if (state_val_23111 === 7) {
                  var inst_23106 = state_23110[2];
                  var state_23110__$1 = state_23110;
                  var statearr_23115_23227 = state_23110__$1;
                  statearr_23115_23227[2] = inst_23106;
                  statearr_23115_23227[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23111 === 6) {
                    var inst_23096 = state_23110[8];
                    var inst_23091 = state_23110[10];
                    var inst_23096__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_23097 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_23098 = [inst_23091, inst_23096__$1];
                    var inst_23099 = new cljs.core.PersistentVector(null, 2, 5, inst_23097, inst_23098, null);
                    var state_23110__$1 = function() {
                      var statearr_23116 = state_23110;
                      statearr_23116[8] = inst_23096__$1;
                      return statearr_23116;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23110__$1, 8, jobs, inst_23099);
                  } else {
                    if (state_val_23111 === 5) {
                      var inst_23094 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_23110__$1 = state_23110;
                      var statearr_23117_23228 = state_23110__$1;
                      statearr_23117_23228[2] = inst_23094;
                      statearr_23117_23228[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23111 === 4) {
                        var inst_23091 = state_23110[10];
                        var inst_23091__$1 = state_23110[2];
                        var inst_23092 = inst_23091__$1 == null;
                        var state_23110__$1 = function() {
                          var statearr_23118 = state_23110;
                          statearr_23118[10] = inst_23091__$1;
                          return statearr_23118;
                        }();
                        if (cljs.core.truth_(inst_23092)) {
                          var statearr_23119_23229 = state_23110__$1;
                          statearr_23119_23229[1] = 5;
                        } else {
                          var statearr_23120_23230 = state_23110__$1;
                          statearr_23120_23230[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23111 === 3) {
                          var inst_23108 = state_23110[2];
                          var state_23110__$1 = state_23110;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23110__$1, inst_23108);
                        } else {
                          if (state_val_23111 === 2) {
                            var state_23110__$1 = state_23110;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23110__$1, 4, from);
                          } else {
                            if (state_val_23111 === 1) {
                              var state_23110__$1 = state_23110;
                              var statearr_23121_23231 = state_23110__$1;
                              statearr_23121_23231[2] = null;
                              statearr_23121_23231[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto___23225, jobs, results, process, async);
        return function(switch__6493__auto__, c__6508__auto___23225, jobs, results, process, async) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_23125 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_23125[0] = state_machine__6494__auto__;
              statearr_23125[1] = 1;
              return statearr_23125;
            };
            var state_machine__6494__auto____1 = function(state_23110) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_23110);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e23126) {
                    if (e23126 instanceof Object) {
                      var ex__6497__auto__ = e23126;
                      var statearr_23127_23232 = state_23110;
                      statearr_23127_23232[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23110);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23126;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23233 = state_23110;
                  state_23110 = G__23233;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_23110) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_23110);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___23225, jobs, results, process, async);
      }();
      var state__6510__auto__ = function() {
        var statearr_23128 = f__6509__auto__.call(null);
        statearr_23128[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___23225;
        return statearr_23128;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___23225, jobs, results, process, async));
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, jobs, results, process, async) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__, jobs, results, process, async) {
          return function(state_23166) {
            var state_val_23167 = state_23166[1];
            if (state_val_23167 === 7) {
              var inst_23162 = state_23166[2];
              var state_23166__$1 = state_23166;
              var statearr_23168_23234 = state_23166__$1;
              statearr_23168_23234[2] = inst_23162;
              statearr_23168_23234[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23167 === 20) {
                var state_23166__$1 = state_23166;
                var statearr_23169_23235 = state_23166__$1;
                statearr_23169_23235[2] = null;
                statearr_23169_23235[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23167 === 1) {
                  var state_23166__$1 = state_23166;
                  var statearr_23170_23236 = state_23166__$1;
                  statearr_23170_23236[2] = null;
                  statearr_23170_23236[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23167 === 4) {
                    var inst_23131 = state_23166[7];
                    var inst_23131__$1 = state_23166[2];
                    var inst_23132 = inst_23131__$1 == null;
                    var state_23166__$1 = function() {
                      var statearr_23171 = state_23166;
                      statearr_23171[7] = inst_23131__$1;
                      return statearr_23171;
                    }();
                    if (cljs.core.truth_(inst_23132)) {
                      var statearr_23172_23237 = state_23166__$1;
                      statearr_23172_23237[1] = 5;
                    } else {
                      var statearr_23173_23238 = state_23166__$1;
                      statearr_23173_23238[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23167 === 15) {
                      var inst_23144 = state_23166[8];
                      var state_23166__$1 = state_23166;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23166__$1, 18, to, inst_23144);
                    } else {
                      if (state_val_23167 === 21) {
                        var inst_23157 = state_23166[2];
                        var state_23166__$1 = state_23166;
                        var statearr_23174_23239 = state_23166__$1;
                        statearr_23174_23239[2] = inst_23157;
                        statearr_23174_23239[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23167 === 13) {
                          var inst_23159 = state_23166[2];
                          var state_23166__$1 = function() {
                            var statearr_23175 = state_23166;
                            statearr_23175[9] = inst_23159;
                            return statearr_23175;
                          }();
                          var statearr_23176_23240 = state_23166__$1;
                          statearr_23176_23240[2] = null;
                          statearr_23176_23240[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23167 === 6) {
                            var inst_23131 = state_23166[7];
                            var state_23166__$1 = state_23166;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23166__$1, 11, inst_23131);
                          } else {
                            if (state_val_23167 === 17) {
                              var inst_23152 = state_23166[2];
                              var state_23166__$1 = state_23166;
                              if (cljs.core.truth_(inst_23152)) {
                                var statearr_23177_23241 = state_23166__$1;
                                statearr_23177_23241[1] = 19;
                              } else {
                                var statearr_23178_23242 = state_23166__$1;
                                statearr_23178_23242[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23167 === 3) {
                                var inst_23164 = state_23166[2];
                                var state_23166__$1 = state_23166;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23166__$1, inst_23164);
                              } else {
                                if (state_val_23167 === 12) {
                                  var inst_23141 = state_23166[10];
                                  var state_23166__$1 = state_23166;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23166__$1, 14, inst_23141);
                                } else {
                                  if (state_val_23167 === 2) {
                                    var state_23166__$1 = state_23166;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23166__$1, 4, results);
                                  } else {
                                    if (state_val_23167 === 19) {
                                      var state_23166__$1 = state_23166;
                                      var statearr_23179_23243 = state_23166__$1;
                                      statearr_23179_23243[2] = null;
                                      statearr_23179_23243[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23167 === 11) {
                                        var inst_23141 = state_23166[2];
                                        var state_23166__$1 = function() {
                                          var statearr_23180 = state_23166;
                                          statearr_23180[10] = inst_23141;
                                          return statearr_23180;
                                        }();
                                        var statearr_23181_23244 = state_23166__$1;
                                        statearr_23181_23244[2] = null;
                                        statearr_23181_23244[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23167 === 9) {
                                          var state_23166__$1 = state_23166;
                                          var statearr_23182_23245 = state_23166__$1;
                                          statearr_23182_23245[2] = null;
                                          statearr_23182_23245[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23167 === 5) {
                                            var state_23166__$1 = state_23166;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_23183_23246 = state_23166__$1;
                                              statearr_23183_23246[1] = 8;
                                            } else {
                                              var statearr_23184_23247 = state_23166__$1;
                                              statearr_23184_23247[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23167 === 14) {
                                              var inst_23144 = state_23166[8];
                                              var inst_23146 = state_23166[11];
                                              var inst_23144__$1 = state_23166[2];
                                              var inst_23145 = inst_23144__$1 == null;
                                              var inst_23146__$1 = cljs.core.not.call(null, inst_23145);
                                              var state_23166__$1 = function() {
                                                var statearr_23185 = state_23166;
                                                statearr_23185[8] = inst_23144__$1;
                                                statearr_23185[11] = inst_23146__$1;
                                                return statearr_23185;
                                              }();
                                              if (inst_23146__$1) {
                                                var statearr_23186_23248 = state_23166__$1;
                                                statearr_23186_23248[1] = 15;
                                              } else {
                                                var statearr_23187_23249 = state_23166__$1;
                                                statearr_23187_23249[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23167 === 16) {
                                                var inst_23146 = state_23166[11];
                                                var state_23166__$1 = state_23166;
                                                var statearr_23188_23250 = state_23166__$1;
                                                statearr_23188_23250[2] = inst_23146;
                                                statearr_23188_23250[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23167 === 10) {
                                                  var inst_23138 = state_23166[2];
                                                  var state_23166__$1 = state_23166;
                                                  var statearr_23189_23251 = state_23166__$1;
                                                  statearr_23189_23251[2] = inst_23138;
                                                  statearr_23189_23251[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23167 === 18) {
                                                    var inst_23149 = state_23166[2];
                                                    var state_23166__$1 = state_23166;
                                                    var statearr_23190_23252 = state_23166__$1;
                                                    statearr_23190_23252[2] = inst_23149;
                                                    statearr_23190_23252[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23167 === 8) {
                                                      var inst_23135 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_23166__$1 = state_23166;
                                                      var statearr_23191_23253 = state_23166__$1;
                                                      statearr_23191_23253[2] = inst_23135;
                                                      statearr_23191_23253[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto__, jobs, results, process, async);
        return function(switch__6493__auto__, c__6508__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_23195 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23195[0] = state_machine__6494__auto__;
              statearr_23195[1] = 1;
              return statearr_23195;
            };
            var state_machine__6494__auto____1 = function(state_23166) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_23166);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e23196) {
                    if (e23196 instanceof Object) {
                      var ex__6497__auto__ = e23196;
                      var statearr_23197_23254 = state_23166;
                      statearr_23197_23254[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23166);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23196;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23255 = state_23166;
                  state_23166 = G__23255;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_23166) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_23166);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__, jobs, results, process, async);
      }();
      var state__6510__auto__ = function() {
        var statearr_23198 = f__6509__auto__.call(null);
        statearr_23198[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_23198;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__, jobs, results, process, async));
  return c__6508__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6508__auto___23356 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___23356, tc, fc) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___23356, tc, fc) {
            return function(state_23331) {
              var state_val_23332 = state_23331[1];
              if (state_val_23332 === 7) {
                var inst_23327 = state_23331[2];
                var state_23331__$1 = state_23331;
                var statearr_23333_23357 = state_23331__$1;
                statearr_23333_23357[2] = inst_23327;
                statearr_23333_23357[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23332 === 1) {
                  var state_23331__$1 = state_23331;
                  var statearr_23334_23358 = state_23331__$1;
                  statearr_23334_23358[2] = null;
                  statearr_23334_23358[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23332 === 4) {
                    var inst_23308 = state_23331[7];
                    var inst_23308__$1 = state_23331[2];
                    var inst_23309 = inst_23308__$1 == null;
                    var state_23331__$1 = function() {
                      var statearr_23335 = state_23331;
                      statearr_23335[7] = inst_23308__$1;
                      return statearr_23335;
                    }();
                    if (cljs.core.truth_(inst_23309)) {
                      var statearr_23336_23359 = state_23331__$1;
                      statearr_23336_23359[1] = 5;
                    } else {
                      var statearr_23337_23360 = state_23331__$1;
                      statearr_23337_23360[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23332 === 13) {
                      var state_23331__$1 = state_23331;
                      var statearr_23338_23361 = state_23331__$1;
                      statearr_23338_23361[2] = null;
                      statearr_23338_23361[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23332 === 6) {
                        var inst_23308 = state_23331[7];
                        var inst_23314 = p.call(null, inst_23308);
                        var state_23331__$1 = state_23331;
                        if (cljs.core.truth_(inst_23314)) {
                          var statearr_23339_23362 = state_23331__$1;
                          statearr_23339_23362[1] = 9;
                        } else {
                          var statearr_23340_23363 = state_23331__$1;
                          statearr_23340_23363[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23332 === 3) {
                          var inst_23329 = state_23331[2];
                          var state_23331__$1 = state_23331;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23331__$1, inst_23329);
                        } else {
                          if (state_val_23332 === 12) {
                            var state_23331__$1 = state_23331;
                            var statearr_23341_23364 = state_23331__$1;
                            statearr_23341_23364[2] = null;
                            statearr_23341_23364[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23332 === 2) {
                              var state_23331__$1 = state_23331;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23331__$1, 4, ch);
                            } else {
                              if (state_val_23332 === 11) {
                                var inst_23308 = state_23331[7];
                                var inst_23318 = state_23331[2];
                                var state_23331__$1 = state_23331;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23331__$1, 8, inst_23318, inst_23308);
                              } else {
                                if (state_val_23332 === 9) {
                                  var state_23331__$1 = state_23331;
                                  var statearr_23342_23365 = state_23331__$1;
                                  statearr_23342_23365[2] = tc;
                                  statearr_23342_23365[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23332 === 5) {
                                    var inst_23311 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_23312 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_23331__$1 = function() {
                                      var statearr_23343 = state_23331;
                                      statearr_23343[8] = inst_23311;
                                      return statearr_23343;
                                    }();
                                    var statearr_23344_23366 = state_23331__$1;
                                    statearr_23344_23366[2] = inst_23312;
                                    statearr_23344_23366[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23332 === 14) {
                                      var inst_23325 = state_23331[2];
                                      var state_23331__$1 = state_23331;
                                      var statearr_23345_23367 = state_23331__$1;
                                      statearr_23345_23367[2] = inst_23325;
                                      statearr_23345_23367[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23332 === 10) {
                                        var state_23331__$1 = state_23331;
                                        var statearr_23346_23368 = state_23331__$1;
                                        statearr_23346_23368[2] = fc;
                                        statearr_23346_23368[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23332 === 8) {
                                          var inst_23320 = state_23331[2];
                                          var state_23331__$1 = state_23331;
                                          if (cljs.core.truth_(inst_23320)) {
                                            var statearr_23347_23369 = state_23331__$1;
                                            statearr_23347_23369[1] = 12;
                                          } else {
                                            var statearr_23348_23370 = state_23331__$1;
                                            statearr_23348_23370[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___23356, tc, fc);
          return function(switch__6493__auto__, c__6508__auto___23356, tc, fc) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_23352 = [null, null, null, null, null, null, null, null, null];
                statearr_23352[0] = state_machine__6494__auto__;
                statearr_23352[1] = 1;
                return statearr_23352;
              };
              var state_machine__6494__auto____1 = function(state_23331) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_23331);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e23353) {
                      if (e23353 instanceof Object) {
                        var ex__6497__auto__ = e23353;
                        var statearr_23354_23371 = state_23331;
                        statearr_23354_23371[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23331);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23353;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23372 = state_23331;
                    state_23331 = G__23372;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_23331) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_23331);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___23356, tc, fc);
        }();
        var state__6510__auto__ = function() {
          var statearr_23355 = f__6509__auto__.call(null);
          statearr_23355[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___23356;
          return statearr_23355;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___23356, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__) {
          return function(state_23419) {
            var state_val_23420 = state_23419[1];
            if (state_val_23420 === 7) {
              var inst_23415 = state_23419[2];
              var state_23419__$1 = state_23419;
              var statearr_23421_23437 = state_23419__$1;
              statearr_23421_23437[2] = inst_23415;
              statearr_23421_23437[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23420 === 6) {
                var inst_23408 = state_23419[7];
                var inst_23405 = state_23419[8];
                var inst_23412 = f.call(null, inst_23405, inst_23408);
                var inst_23405__$1 = inst_23412;
                var state_23419__$1 = function() {
                  var statearr_23422 = state_23419;
                  statearr_23422[8] = inst_23405__$1;
                  return statearr_23422;
                }();
                var statearr_23423_23438 = state_23419__$1;
                statearr_23423_23438[2] = null;
                statearr_23423_23438[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23420 === 5) {
                  var inst_23405 = state_23419[8];
                  var state_23419__$1 = state_23419;
                  var statearr_23424_23439 = state_23419__$1;
                  statearr_23424_23439[2] = inst_23405;
                  statearr_23424_23439[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23420 === 4) {
                    var inst_23408 = state_23419[7];
                    var inst_23408__$1 = state_23419[2];
                    var inst_23409 = inst_23408__$1 == null;
                    var state_23419__$1 = function() {
                      var statearr_23425 = state_23419;
                      statearr_23425[7] = inst_23408__$1;
                      return statearr_23425;
                    }();
                    if (cljs.core.truth_(inst_23409)) {
                      var statearr_23426_23440 = state_23419__$1;
                      statearr_23426_23440[1] = 5;
                    } else {
                      var statearr_23427_23441 = state_23419__$1;
                      statearr_23427_23441[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23420 === 3) {
                      var inst_23417 = state_23419[2];
                      var state_23419__$1 = state_23419;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23419__$1, inst_23417);
                    } else {
                      if (state_val_23420 === 2) {
                        var state_23419__$1 = state_23419;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23419__$1, 4, ch);
                      } else {
                        if (state_val_23420 === 1) {
                          var inst_23405 = init;
                          var state_23419__$1 = function() {
                            var statearr_23428 = state_23419;
                            statearr_23428[8] = inst_23405;
                            return statearr_23428;
                          }();
                          var statearr_23429_23442 = state_23419__$1;
                          statearr_23429_23442[2] = null;
                          statearr_23429_23442[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto__);
        return function(switch__6493__auto__, c__6508__auto__) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_23433 = [null, null, null, null, null, null, null, null, null];
              statearr_23433[0] = state_machine__6494__auto__;
              statearr_23433[1] = 1;
              return statearr_23433;
            };
            var state_machine__6494__auto____1 = function(state_23419) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_23419);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e23434) {
                    if (e23434 instanceof Object) {
                      var ex__6497__auto__ = e23434;
                      var statearr_23435_23443 = state_23419;
                      statearr_23435_23443[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23419);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23434;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23444 = state_23419;
                  state_23419 = G__23444;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_23419) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_23419);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__);
      }();
      var state__6510__auto__ = function() {
        var statearr_23436 = f__6509__auto__.call(null);
        statearr_23436[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_23436;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__));
  return c__6508__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto__) {
            return function(state_23518) {
              var state_val_23519 = state_23518[1];
              if (state_val_23519 === 7) {
                var inst_23500 = state_23518[2];
                var state_23518__$1 = state_23518;
                var statearr_23520_23543 = state_23518__$1;
                statearr_23520_23543[2] = inst_23500;
                statearr_23520_23543[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23519 === 1) {
                  var inst_23494 = cljs.core.seq.call(null, coll);
                  var inst_23495 = inst_23494;
                  var state_23518__$1 = function() {
                    var statearr_23521 = state_23518;
                    statearr_23521[7] = inst_23495;
                    return statearr_23521;
                  }();
                  var statearr_23522_23544 = state_23518__$1;
                  statearr_23522_23544[2] = null;
                  statearr_23522_23544[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23519 === 4) {
                    var inst_23495 = state_23518[7];
                    var inst_23498 = cljs.core.first.call(null, inst_23495);
                    var state_23518__$1 = state_23518;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23518__$1, 7, ch, inst_23498);
                  } else {
                    if (state_val_23519 === 13) {
                      var inst_23512 = state_23518[2];
                      var state_23518__$1 = state_23518;
                      var statearr_23523_23545 = state_23518__$1;
                      statearr_23523_23545[2] = inst_23512;
                      statearr_23523_23545[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23519 === 6) {
                        var inst_23503 = state_23518[2];
                        var state_23518__$1 = state_23518;
                        if (cljs.core.truth_(inst_23503)) {
                          var statearr_23524_23546 = state_23518__$1;
                          statearr_23524_23546[1] = 8;
                        } else {
                          var statearr_23525_23547 = state_23518__$1;
                          statearr_23525_23547[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23519 === 3) {
                          var inst_23516 = state_23518[2];
                          var state_23518__$1 = state_23518;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23518__$1, inst_23516);
                        } else {
                          if (state_val_23519 === 12) {
                            var state_23518__$1 = state_23518;
                            var statearr_23526_23548 = state_23518__$1;
                            statearr_23526_23548[2] = null;
                            statearr_23526_23548[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23519 === 2) {
                              var inst_23495 = state_23518[7];
                              var state_23518__$1 = state_23518;
                              if (cljs.core.truth_(inst_23495)) {
                                var statearr_23527_23549 = state_23518__$1;
                                statearr_23527_23549[1] = 4;
                              } else {
                                var statearr_23528_23550 = state_23518__$1;
                                statearr_23528_23550[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23519 === 11) {
                                var inst_23509 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_23518__$1 = state_23518;
                                var statearr_23529_23551 = state_23518__$1;
                                statearr_23529_23551[2] = inst_23509;
                                statearr_23529_23551[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23519 === 9) {
                                  var state_23518__$1 = state_23518;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_23530_23552 = state_23518__$1;
                                    statearr_23530_23552[1] = 11;
                                  } else {
                                    var statearr_23531_23553 = state_23518__$1;
                                    statearr_23531_23553[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23519 === 5) {
                                    var inst_23495 = state_23518[7];
                                    var state_23518__$1 = state_23518;
                                    var statearr_23532_23554 = state_23518__$1;
                                    statearr_23532_23554[2] = inst_23495;
                                    statearr_23532_23554[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23519 === 10) {
                                      var inst_23514 = state_23518[2];
                                      var state_23518__$1 = state_23518;
                                      var statearr_23533_23555 = state_23518__$1;
                                      statearr_23533_23555[2] = inst_23514;
                                      statearr_23533_23555[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23519 === 8) {
                                        var inst_23495 = state_23518[7];
                                        var inst_23505 = cljs.core.next.call(null, inst_23495);
                                        var inst_23495__$1 = inst_23505;
                                        var state_23518__$1 = function() {
                                          var statearr_23534 = state_23518;
                                          statearr_23534[7] = inst_23495__$1;
                                          return statearr_23534;
                                        }();
                                        var statearr_23535_23556 = state_23518__$1;
                                        statearr_23535_23556[2] = null;
                                        statearr_23535_23556[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto__);
          return function(switch__6493__auto__, c__6508__auto__) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_23539 = [null, null, null, null, null, null, null, null];
                statearr_23539[0] = state_machine__6494__auto__;
                statearr_23539[1] = 1;
                return statearr_23539;
              };
              var state_machine__6494__auto____1 = function(state_23518) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_23518);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e23540) {
                      if (e23540 instanceof Object) {
                        var ex__6497__auto__ = e23540;
                        var statearr_23541_23557 = state_23518;
                        statearr_23541_23557[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23518);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23540;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23558 = state_23518;
                    state_23518 = G__23558;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_23518) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_23518);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto__);
        }();
        var state__6510__auto__ = function() {
          var statearr_23542 = f__6509__auto__.call(null);
          statearr_23542[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
          return statearr_23542;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto__));
    return c__6508__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj23560 = {};
  return obj23560;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3616__auto__ = _;
    if (and__3616__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4272__auto__ = _ == null ? null : _;
    return function() {
      var or__3628__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj23562 = {};
  return obj23562;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t23784 !== "undefined") {
    } else {
      cljs.core.async.t23784 = function(cs, ch, mult, meta23785) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta23785 = meta23785;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t23784.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t23784.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t23784.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t23784.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t23784.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t23784.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t23784.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_23786) {
          var self__ = this;
          var _23786__$1 = this;
          return self__.meta23785;
        };
      }(cs);
      cljs.core.async.t23784.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_23786, meta23785__$1) {
          var self__ = this;
          var _23786__$1 = this;
          return new cljs.core.async.t23784(self__.cs, self__.ch, self__.mult, meta23785__$1);
        };
      }(cs);
      cljs.core.async.t23784.cljs$lang$type = true;
      cljs.core.async.t23784.cljs$lang$ctorStr = "cljs.core.async/t23784";
      cljs.core.async.t23784.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t23784");
        };
      }(cs);
      cljs.core.async.__GT_t23784 = function(cs) {
        return function __GT_t23784(cs__$1, ch__$1, mult__$1, meta23785) {
          return new cljs.core.async.t23784(cs__$1, ch__$1, mult__$1, meta23785);
        };
      }(cs);
    }
    return new cljs.core.async.t23784(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6508__auto___24005 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24005, cs, m, dchan, dctr, done) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___24005, cs, m, dchan, dctr, done) {
          return function(state_23917) {
            var state_val_23918 = state_23917[1];
            if (state_val_23918 === 7) {
              var inst_23913 = state_23917[2];
              var state_23917__$1 = state_23917;
              var statearr_23919_24006 = state_23917__$1;
              statearr_23919_24006[2] = inst_23913;
              statearr_23919_24006[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23918 === 20) {
                var inst_23818 = state_23917[7];
                var inst_23828 = cljs.core.first.call(null, inst_23818);
                var inst_23829 = cljs.core.nth.call(null, inst_23828, 0, null);
                var inst_23830 = cljs.core.nth.call(null, inst_23828, 1, null);
                var state_23917__$1 = function() {
                  var statearr_23920 = state_23917;
                  statearr_23920[8] = inst_23829;
                  return statearr_23920;
                }();
                if (cljs.core.truth_(inst_23830)) {
                  var statearr_23921_24007 = state_23917__$1;
                  statearr_23921_24007[1] = 22;
                } else {
                  var statearr_23922_24008 = state_23917__$1;
                  statearr_23922_24008[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23918 === 27) {
                  var inst_23789 = state_23917[9];
                  var inst_23858 = state_23917[10];
                  var inst_23865 = state_23917[11];
                  var inst_23860 = state_23917[12];
                  var inst_23865__$1 = cljs.core._nth.call(null, inst_23858, inst_23860);
                  var inst_23866 = cljs.core.async.put_BANG_.call(null, inst_23865__$1, inst_23789, done);
                  var state_23917__$1 = function() {
                    var statearr_23923 = state_23917;
                    statearr_23923[11] = inst_23865__$1;
                    return statearr_23923;
                  }();
                  if (cljs.core.truth_(inst_23866)) {
                    var statearr_23924_24009 = state_23917__$1;
                    statearr_23924_24009[1] = 30;
                  } else {
                    var statearr_23925_24010 = state_23917__$1;
                    statearr_23925_24010[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23918 === 1) {
                    var state_23917__$1 = state_23917;
                    var statearr_23926_24011 = state_23917__$1;
                    statearr_23926_24011[2] = null;
                    statearr_23926_24011[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23918 === 24) {
                      var inst_23818 = state_23917[7];
                      var inst_23835 = state_23917[2];
                      var inst_23836 = cljs.core.next.call(null, inst_23818);
                      var inst_23798 = inst_23836;
                      var inst_23799 = null;
                      var inst_23800 = 0;
                      var inst_23801 = 0;
                      var state_23917__$1 = function() {
                        var statearr_23927 = state_23917;
                        statearr_23927[13] = inst_23801;
                        statearr_23927[14] = inst_23799;
                        statearr_23927[15] = inst_23798;
                        statearr_23927[16] = inst_23800;
                        statearr_23927[17] = inst_23835;
                        return statearr_23927;
                      }();
                      var statearr_23928_24012 = state_23917__$1;
                      statearr_23928_24012[2] = null;
                      statearr_23928_24012[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23918 === 39) {
                        var state_23917__$1 = state_23917;
                        var statearr_23932_24013 = state_23917__$1;
                        statearr_23932_24013[2] = null;
                        statearr_23932_24013[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23918 === 4) {
                          var inst_23789 = state_23917[9];
                          var inst_23789__$1 = state_23917[2];
                          var inst_23790 = inst_23789__$1 == null;
                          var state_23917__$1 = function() {
                            var statearr_23933 = state_23917;
                            statearr_23933[9] = inst_23789__$1;
                            return statearr_23933;
                          }();
                          if (cljs.core.truth_(inst_23790)) {
                            var statearr_23934_24014 = state_23917__$1;
                            statearr_23934_24014[1] = 5;
                          } else {
                            var statearr_23935_24015 = state_23917__$1;
                            statearr_23935_24015[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23918 === 15) {
                            var inst_23801 = state_23917[13];
                            var inst_23799 = state_23917[14];
                            var inst_23798 = state_23917[15];
                            var inst_23800 = state_23917[16];
                            var inst_23814 = state_23917[2];
                            var inst_23815 = inst_23801 + 1;
                            var tmp23929 = inst_23799;
                            var tmp23930 = inst_23798;
                            var tmp23931 = inst_23800;
                            var inst_23798__$1 = tmp23930;
                            var inst_23799__$1 = tmp23929;
                            var inst_23800__$1 = tmp23931;
                            var inst_23801__$1 = inst_23815;
                            var state_23917__$1 = function() {
                              var statearr_23936 = state_23917;
                              statearr_23936[13] = inst_23801__$1;
                              statearr_23936[14] = inst_23799__$1;
                              statearr_23936[18] = inst_23814;
                              statearr_23936[15] = inst_23798__$1;
                              statearr_23936[16] = inst_23800__$1;
                              return statearr_23936;
                            }();
                            var statearr_23937_24016 = state_23917__$1;
                            statearr_23937_24016[2] = null;
                            statearr_23937_24016[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23918 === 21) {
                              var inst_23839 = state_23917[2];
                              var state_23917__$1 = state_23917;
                              var statearr_23941_24017 = state_23917__$1;
                              statearr_23941_24017[2] = inst_23839;
                              statearr_23941_24017[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23918 === 31) {
                                var inst_23865 = state_23917[11];
                                var inst_23869 = done.call(null, null);
                                var inst_23870 = cljs.core.async.untap_STAR_.call(null, m, inst_23865);
                                var state_23917__$1 = function() {
                                  var statearr_23942 = state_23917;
                                  statearr_23942[19] = inst_23869;
                                  return statearr_23942;
                                }();
                                var statearr_23943_24018 = state_23917__$1;
                                statearr_23943_24018[2] = inst_23870;
                                statearr_23943_24018[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23918 === 32) {
                                  var inst_23858 = state_23917[10];
                                  var inst_23860 = state_23917[12];
                                  var inst_23857 = state_23917[20];
                                  var inst_23859 = state_23917[21];
                                  var inst_23872 = state_23917[2];
                                  var inst_23873 = inst_23860 + 1;
                                  var tmp23938 = inst_23858;
                                  var tmp23939 = inst_23857;
                                  var tmp23940 = inst_23859;
                                  var inst_23857__$1 = tmp23939;
                                  var inst_23858__$1 = tmp23938;
                                  var inst_23859__$1 = tmp23940;
                                  var inst_23860__$1 = inst_23873;
                                  var state_23917__$1 = function() {
                                    var statearr_23944 = state_23917;
                                    statearr_23944[10] = inst_23858__$1;
                                    statearr_23944[12] = inst_23860__$1;
                                    statearr_23944[22] = inst_23872;
                                    statearr_23944[20] = inst_23857__$1;
                                    statearr_23944[21] = inst_23859__$1;
                                    return statearr_23944;
                                  }();
                                  var statearr_23945_24019 = state_23917__$1;
                                  statearr_23945_24019[2] = null;
                                  statearr_23945_24019[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23918 === 40) {
                                    var inst_23885 = state_23917[23];
                                    var inst_23889 = done.call(null, null);
                                    var inst_23890 = cljs.core.async.untap_STAR_.call(null, m, inst_23885);
                                    var state_23917__$1 = function() {
                                      var statearr_23946 = state_23917;
                                      statearr_23946[24] = inst_23889;
                                      return statearr_23946;
                                    }();
                                    var statearr_23947_24020 = state_23917__$1;
                                    statearr_23947_24020[2] = inst_23890;
                                    statearr_23947_24020[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23918 === 33) {
                                      var inst_23876 = state_23917[25];
                                      var inst_23878 = cljs.core.chunked_seq_QMARK_.call(null, inst_23876);
                                      var state_23917__$1 = state_23917;
                                      if (inst_23878) {
                                        var statearr_23948_24021 = state_23917__$1;
                                        statearr_23948_24021[1] = 36;
                                      } else {
                                        var statearr_23949_24022 = state_23917__$1;
                                        statearr_23949_24022[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23918 === 13) {
                                        var inst_23808 = state_23917[26];
                                        var inst_23811 = cljs.core.async.close_BANG_.call(null, inst_23808);
                                        var state_23917__$1 = state_23917;
                                        var statearr_23950_24023 = state_23917__$1;
                                        statearr_23950_24023[2] = inst_23811;
                                        statearr_23950_24023[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23918 === 22) {
                                          var inst_23829 = state_23917[8];
                                          var inst_23832 = cljs.core.async.close_BANG_.call(null, inst_23829);
                                          var state_23917__$1 = state_23917;
                                          var statearr_23951_24024 = state_23917__$1;
                                          statearr_23951_24024[2] = inst_23832;
                                          statearr_23951_24024[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23918 === 36) {
                                            var inst_23876 = state_23917[25];
                                            var inst_23880 = cljs.core.chunk_first.call(null, inst_23876);
                                            var inst_23881 = cljs.core.chunk_rest.call(null, inst_23876);
                                            var inst_23882 = cljs.core.count.call(null, inst_23880);
                                            var inst_23857 = inst_23881;
                                            var inst_23858 = inst_23880;
                                            var inst_23859 = inst_23882;
                                            var inst_23860 = 0;
                                            var state_23917__$1 = function() {
                                              var statearr_23952 = state_23917;
                                              statearr_23952[10] = inst_23858;
                                              statearr_23952[12] = inst_23860;
                                              statearr_23952[20] = inst_23857;
                                              statearr_23952[21] = inst_23859;
                                              return statearr_23952;
                                            }();
                                            var statearr_23953_24025 = state_23917__$1;
                                            statearr_23953_24025[2] = null;
                                            statearr_23953_24025[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23918 === 41) {
                                              var inst_23876 = state_23917[25];
                                              var inst_23892 = state_23917[2];
                                              var inst_23893 = cljs.core.next.call(null, inst_23876);
                                              var inst_23857 = inst_23893;
                                              var inst_23858 = null;
                                              var inst_23859 = 0;
                                              var inst_23860 = 0;
                                              var state_23917__$1 = function() {
                                                var statearr_23954 = state_23917;
                                                statearr_23954[10] = inst_23858;
                                                statearr_23954[12] = inst_23860;
                                                statearr_23954[27] = inst_23892;
                                                statearr_23954[20] = inst_23857;
                                                statearr_23954[21] = inst_23859;
                                                return statearr_23954;
                                              }();
                                              var statearr_23955_24026 = state_23917__$1;
                                              statearr_23955_24026[2] = null;
                                              statearr_23955_24026[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23918 === 43) {
                                                var state_23917__$1 = state_23917;
                                                var statearr_23956_24027 = state_23917__$1;
                                                statearr_23956_24027[2] = null;
                                                statearr_23956_24027[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23918 === 29) {
                                                  var inst_23901 = state_23917[2];
                                                  var state_23917__$1 = state_23917;
                                                  var statearr_23957_24028 = state_23917__$1;
                                                  statearr_23957_24028[2] = inst_23901;
                                                  statearr_23957_24028[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23918 === 44) {
                                                    var inst_23910 = state_23917[2];
                                                    var state_23917__$1 = function() {
                                                      var statearr_23958 = state_23917;
                                                      statearr_23958[28] = inst_23910;
                                                      return statearr_23958;
                                                    }();
                                                    var statearr_23959_24029 = state_23917__$1;
                                                    statearr_23959_24029[2] = null;
                                                    statearr_23959_24029[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23918 === 6) {
                                                      var inst_23849 = state_23917[29];
                                                      var inst_23848 = cljs.core.deref.call(null, cs);
                                                      var inst_23849__$1 = cljs.core.keys.call(null, inst_23848);
                                                      var inst_23850 = cljs.core.count.call(null, inst_23849__$1);
                                                      var inst_23851 = cljs.core.reset_BANG_.call(null, dctr, inst_23850);
                                                      var inst_23856 = cljs.core.seq.call(null, inst_23849__$1);
                                                      var inst_23857 = inst_23856;
                                                      var inst_23858 = null;
                                                      var inst_23859 = 0;
                                                      var inst_23860 = 0;
                                                      var state_23917__$1 = function() {
                                                        var statearr_23960 = state_23917;
                                                        statearr_23960[30] = inst_23851;
                                                        statearr_23960[10] = inst_23858;
                                                        statearr_23960[29] = inst_23849__$1;
                                                        statearr_23960[12] = inst_23860;
                                                        statearr_23960[20] = inst_23857;
                                                        statearr_23960[21] = inst_23859;
                                                        return statearr_23960;
                                                      }();
                                                      var statearr_23961_24030 = state_23917__$1;
                                                      statearr_23961_24030[2] = null;
                                                      statearr_23961_24030[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23918 === 28) {
                                                        var inst_23876 = state_23917[25];
                                                        var inst_23857 = state_23917[20];
                                                        var inst_23876__$1 = cljs.core.seq.call(null, inst_23857);
                                                        var state_23917__$1 = function() {
                                                          var statearr_23962 = state_23917;
                                                          statearr_23962[25] = inst_23876__$1;
                                                          return statearr_23962;
                                                        }();
                                                        if (inst_23876__$1) {
                                                          var statearr_23963_24031 = state_23917__$1;
                                                          statearr_23963_24031[1] = 33;
                                                        } else {
                                                          var statearr_23964_24032 = state_23917__$1;
                                                          statearr_23964_24032[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23918 === 25) {
                                                          var inst_23860 = state_23917[12];
                                                          var inst_23859 = state_23917[21];
                                                          var inst_23862 = inst_23860 < inst_23859;
                                                          var inst_23863 = inst_23862;
                                                          var state_23917__$1 = state_23917;
                                                          if (cljs.core.truth_(inst_23863)) {
                                                            var statearr_23965_24033 = state_23917__$1;
                                                            statearr_23965_24033[1] = 27;
                                                          } else {
                                                            var statearr_23966_24034 = state_23917__$1;
                                                            statearr_23966_24034[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23918 === 34) {
                                                            var state_23917__$1 = state_23917;
                                                            var statearr_23967_24035 = state_23917__$1;
                                                            statearr_23967_24035[2] = null;
                                                            statearr_23967_24035[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_23918 === 17) {
                                                              var state_23917__$1 = state_23917;
                                                              var statearr_23968_24036 = state_23917__$1;
                                                              statearr_23968_24036[2] = null;
                                                              statearr_23968_24036[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23918 === 3) {
                                                                var inst_23915 = state_23917[2];
                                                                var state_23917__$1 = state_23917;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23917__$1, inst_23915);
                                                              } else {
                                                                if (state_val_23918 === 12) {
                                                                  var inst_23844 = state_23917[2];
                                                                  var state_23917__$1 = state_23917;
                                                                  var statearr_23969_24037 = state_23917__$1;
                                                                  statearr_23969_24037[2] = inst_23844;
                                                                  statearr_23969_24037[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_23918 === 2) {
                                                                    var state_23917__$1 = state_23917;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23917__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_23918 === 23) {
                                                                      var state_23917__$1 = state_23917;
                                                                      var statearr_23970_24038 = state_23917__$1;
                                                                      statearr_23970_24038[2] = null;
                                                                      statearr_23970_24038[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_23918 === 35) {
                                                                        var inst_23899 = state_23917[2];
                                                                        var state_23917__$1 = state_23917;
                                                                        var statearr_23971_24039 = state_23917__$1;
                                                                        statearr_23971_24039[2] = inst_23899;
                                                                        statearr_23971_24039[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_23918 === 19) {
                                                                          var inst_23818 = state_23917[7];
                                                                          var inst_23822 = cljs.core.chunk_first.call(null, inst_23818);
                                                                          var inst_23823 = cljs.core.chunk_rest.call(null, inst_23818);
                                                                          var inst_23824 = cljs.core.count.call(null, inst_23822);
                                                                          var inst_23798 = inst_23823;
                                                                          var inst_23799 = inst_23822;
                                                                          var inst_23800 = inst_23824;
                                                                          var inst_23801 = 0;
                                                                          var state_23917__$1 = function() {
                                                                            var statearr_23972 = state_23917;
                                                                            statearr_23972[13] = inst_23801;
                                                                            statearr_23972[14] = inst_23799;
                                                                            statearr_23972[15] = inst_23798;
                                                                            statearr_23972[16] = inst_23800;
                                                                            return statearr_23972;
                                                                          }();
                                                                          var statearr_23973_24040 = state_23917__$1;
                                                                          statearr_23973_24040[2] = null;
                                                                          statearr_23973_24040[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_23918 === 11) {
                                                                            var inst_23798 = state_23917[15];
                                                                            var inst_23818 = state_23917[7];
                                                                            var inst_23818__$1 = cljs.core.seq.call(null, inst_23798);
                                                                            var state_23917__$1 = function() {
                                                                              var statearr_23974 = state_23917;
                                                                              statearr_23974[7] = inst_23818__$1;
                                                                              return statearr_23974;
                                                                            }();
                                                                            if (inst_23818__$1) {
                                                                              var statearr_23975_24041 = state_23917__$1;
                                                                              statearr_23975_24041[1] = 16;
                                                                            } else {
                                                                              var statearr_23976_24042 = state_23917__$1;
                                                                              statearr_23976_24042[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_23918 === 9) {
                                                                              var inst_23846 = state_23917[2];
                                                                              var state_23917__$1 = state_23917;
                                                                              var statearr_23977_24043 = state_23917__$1;
                                                                              statearr_23977_24043[2] = inst_23846;
                                                                              statearr_23977_24043[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_23918 === 5) {
                                                                                var inst_23796 = cljs.core.deref.call(null, cs);
                                                                                var inst_23797 = cljs.core.seq.call(null, inst_23796);
                                                                                var inst_23798 = inst_23797;
                                                                                var inst_23799 = null;
                                                                                var inst_23800 = 0;
                                                                                var inst_23801 = 0;
                                                                                var state_23917__$1 = function() {
                                                                                  var statearr_23978 = state_23917;
                                                                                  statearr_23978[13] = inst_23801;
                                                                                  statearr_23978[14] = inst_23799;
                                                                                  statearr_23978[15] = inst_23798;
                                                                                  statearr_23978[16] = inst_23800;
                                                                                  return statearr_23978;
                                                                                }();
                                                                                var statearr_23979_24044 = state_23917__$1;
                                                                                statearr_23979_24044[2] = null;
                                                                                statearr_23979_24044[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_23918 === 14) {
                                                                                  var state_23917__$1 = state_23917;
                                                                                  var statearr_23980_24045 = state_23917__$1;
                                                                                  statearr_23980_24045[2] = null;
                                                                                  statearr_23980_24045[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_23918 === 45) {
                                                                                    var inst_23907 = state_23917[2];
                                                                                    var state_23917__$1 = state_23917;
                                                                                    var statearr_23981_24046 = state_23917__$1;
                                                                                    statearr_23981_24046[2] = inst_23907;
                                                                                    statearr_23981_24046[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_23918 === 26) {
                                                                                      var inst_23849 = state_23917[29];
                                                                                      var inst_23903 = state_23917[2];
                                                                                      var inst_23904 = cljs.core.seq.call(null, inst_23849);
                                                                                      var state_23917__$1 = function() {
                                                                                        var statearr_23982 = state_23917;
                                                                                        statearr_23982[31] = inst_23903;
                                                                                        return statearr_23982;
                                                                                      }();
                                                                                      if (inst_23904) {
                                                                                        var statearr_23983_24047 = state_23917__$1;
                                                                                        statearr_23983_24047[1] = 42;
                                                                                      } else {
                                                                                        var statearr_23984_24048 = state_23917__$1;
                                                                                        statearr_23984_24048[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_23918 === 16) {
                                                                                        var inst_23818 = state_23917[7];
                                                                                        var inst_23820 = cljs.core.chunked_seq_QMARK_.call(null, inst_23818);
                                                                                        var state_23917__$1 = state_23917;
                                                                                        if (inst_23820) {
                                                                                          var statearr_23985_24049 = state_23917__$1;
                                                                                          statearr_23985_24049[1] = 19;
                                                                                        } else {
                                                                                          var statearr_23986_24050 = state_23917__$1;
                                                                                          statearr_23986_24050[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_23918 === 38) {
                                                                                          var inst_23896 = state_23917[2];
                                                                                          var state_23917__$1 = state_23917;
                                                                                          var statearr_23987_24051 = state_23917__$1;
                                                                                          statearr_23987_24051[2] = inst_23896;
                                                                                          statearr_23987_24051[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_23918 === 30) {
                                                                                            var state_23917__$1 = state_23917;
                                                                                            var statearr_23988_24052 = state_23917__$1;
                                                                                            statearr_23988_24052[2] = null;
                                                                                            statearr_23988_24052[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_23918 === 10) {
                                                                                              var inst_23801 = state_23917[13];
                                                                                              var inst_23799 = state_23917[14];
                                                                                              var inst_23807 = cljs.core._nth.call(null, inst_23799, inst_23801);
                                                                                              var inst_23808 = cljs.core.nth.call(null, inst_23807, 0, null);
                                                                                              var inst_23809 = cljs.core.nth.call(null, inst_23807, 1, null);
                                                                                              var state_23917__$1 = function() {
                                                                                                var statearr_23989 = state_23917;
                                                                                                statearr_23989[26] = inst_23808;
                                                                                                return statearr_23989;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_23809)) {
                                                                                                var statearr_23990_24053 = state_23917__$1;
                                                                                                statearr_23990_24053[1] = 13;
                                                                                              } else {
                                                                                                var statearr_23991_24054 = state_23917__$1;
                                                                                                statearr_23991_24054[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_23918 === 18) {
                                                                                                var inst_23842 = state_23917[2];
                                                                                                var state_23917__$1 = state_23917;
                                                                                                var statearr_23992_24055 = state_23917__$1;
                                                                                                statearr_23992_24055[2] = inst_23842;
                                                                                                statearr_23992_24055[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_23918 === 42) {
                                                                                                  var state_23917__$1 = state_23917;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23917__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_23918 === 37) {
                                                                                                    var inst_23885 = state_23917[23];
                                                                                                    var inst_23789 = state_23917[9];
                                                                                                    var inst_23876 = state_23917[25];
                                                                                                    var inst_23885__$1 = cljs.core.first.call(null, inst_23876);
                                                                                                    var inst_23886 = cljs.core.async.put_BANG_.call(null, inst_23885__$1, inst_23789, done);
                                                                                                    var state_23917__$1 = function() {
                                                                                                      var statearr_23993 = state_23917;
                                                                                                      statearr_23993[23] = inst_23885__$1;
                                                                                                      return statearr_23993;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_23886)) {
                                                                                                      var statearr_23994_24056 = state_23917__$1;
                                                                                                      statearr_23994_24056[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_23995_24057 = state_23917__$1;
                                                                                                      statearr_23995_24057[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_23918 === 8) {
                                                                                                      var inst_23801 = state_23917[13];
                                                                                                      var inst_23800 = state_23917[16];
                                                                                                      var inst_23803 = inst_23801 < inst_23800;
                                                                                                      var inst_23804 = inst_23803;
                                                                                                      var state_23917__$1 = state_23917;
                                                                                                      if (cljs.core.truth_(inst_23804)) {
                                                                                                        var statearr_23996_24058 = state_23917__$1;
                                                                                                        statearr_23996_24058[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_23997_24059 = state_23917__$1;
                                                                                                        statearr_23997_24059[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto___24005, cs, m, dchan, dctr, done);
        return function(switch__6493__auto__, c__6508__auto___24005, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_24001 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24001[0] = state_machine__6494__auto__;
              statearr_24001[1] = 1;
              return statearr_24001;
            };
            var state_machine__6494__auto____1 = function(state_23917) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_23917);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e24002) {
                    if (e24002 instanceof Object) {
                      var ex__6497__auto__ = e24002;
                      var statearr_24003_24060 = state_23917;
                      statearr_24003_24060[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23917);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24002;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24061 = state_23917;
                  state_23917 = G__24061;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_23917) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_23917);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___24005, cs, m, dchan, dctr, done);
      }();
      var state__6510__auto__ = function() {
        var statearr_24004 = f__6509__auto__.call(null);
        statearr_24004[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24005;
        return statearr_24004;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___24005, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj24063 = {};
  return obj24063;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3616__auto__ = m;
    if (and__3616__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4272__auto__ = m == null ? null : m;
    return function() {
      var or__3628__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__24064) {
    var map__24069 = p__24064;
    var map__24069__$1 = cljs.core.seq_QMARK_.call(null, map__24069) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24069) : map__24069;
    var opts = map__24069__$1;
    var statearr_24070_24073 = state;
    statearr_24070_24073[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__24069, map__24069__$1, opts) {
      return function(val) {
        var statearr_24071_24074 = state;
        statearr_24071_24074[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__24069, map__24069__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_24072_24075 = state;
      statearr_24072_24075[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__24064 = null;
    if (arguments.length > 3) {
      p__24064 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__24064);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__24076) {
    var state = cljs.core.first(arglist__24076);
    arglist__24076 = cljs.core.next(arglist__24076);
    var cont_block = cljs.core.first(arglist__24076);
    arglist__24076 = cljs.core.next(arglist__24076);
    var ports = cljs.core.first(arglist__24076);
    var p__24064 = cljs.core.rest(arglist__24076);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__24064);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t24196 !== "undefined") {
    } else {
      cljs.core.async.t24196 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta24197) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta24197 = meta24197;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t24196.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_24198) {
          var self__ = this;
          var _24198__$1 = this;
          return self__.meta24197;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_24198, meta24197__$1) {
          var self__ = this;
          var _24198__$1 = this;
          return new cljs.core.async.t24196(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta24197__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t24196.cljs$lang$type = true;
      cljs.core.async.t24196.cljs$lang$ctorStr = "cljs.core.async/t24196";
      cljs.core.async.t24196.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t24196");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t24196 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t24196(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta24197) {
          return new cljs.core.async.t24196(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta24197);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t24196(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
    null));
  }();
  var c__6508__auto___24315 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_24268) {
            var state_val_24269 = state_24268[1];
            if (state_val_24269 === 7) {
              var inst_24212 = state_24268[7];
              var inst_24217 = cljs.core.apply.call(null, cljs.core.hash_map, inst_24212);
              var state_24268__$1 = state_24268;
              var statearr_24270_24316 = state_24268__$1;
              statearr_24270_24316[2] = inst_24217;
              statearr_24270_24316[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24269 === 20) {
                var inst_24227 = state_24268[8];
                var state_24268__$1 = state_24268;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24268__$1, 23, out, inst_24227);
              } else {
                if (state_val_24269 === 1) {
                  var inst_24202 = state_24268[9];
                  var inst_24202__$1 = calc_state.call(null);
                  var inst_24203 = cljs.core.seq_QMARK_.call(null, inst_24202__$1);
                  var state_24268__$1 = function() {
                    var statearr_24271 = state_24268;
                    statearr_24271[9] = inst_24202__$1;
                    return statearr_24271;
                  }();
                  if (inst_24203) {
                    var statearr_24272_24317 = state_24268__$1;
                    statearr_24272_24317[1] = 2;
                  } else {
                    var statearr_24273_24318 = state_24268__$1;
                    statearr_24273_24318[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24269 === 24) {
                    var inst_24220 = state_24268[10];
                    var inst_24212 = inst_24220;
                    var state_24268__$1 = function() {
                      var statearr_24274 = state_24268;
                      statearr_24274[7] = inst_24212;
                      return statearr_24274;
                    }();
                    var statearr_24275_24319 = state_24268__$1;
                    statearr_24275_24319[2] = null;
                    statearr_24275_24319[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24269 === 4) {
                      var inst_24202 = state_24268[9];
                      var inst_24208 = state_24268[2];
                      var inst_24209 = cljs.core.get.call(null, inst_24208, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_24210 = cljs.core.get.call(null, inst_24208, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_24211 = cljs.core.get.call(null, inst_24208, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_24212 = inst_24202;
                      var state_24268__$1 = function() {
                        var statearr_24276 = state_24268;
                        statearr_24276[11] = inst_24211;
                        statearr_24276[7] = inst_24212;
                        statearr_24276[12] = inst_24209;
                        statearr_24276[13] = inst_24210;
                        return statearr_24276;
                      }();
                      var statearr_24277_24320 = state_24268__$1;
                      statearr_24277_24320[2] = null;
                      statearr_24277_24320[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24269 === 15) {
                        var state_24268__$1 = state_24268;
                        var statearr_24278_24321 = state_24268__$1;
                        statearr_24278_24321[2] = null;
                        statearr_24278_24321[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24269 === 21) {
                          var inst_24220 = state_24268[10];
                          var inst_24212 = inst_24220;
                          var state_24268__$1 = function() {
                            var statearr_24279 = state_24268;
                            statearr_24279[7] = inst_24212;
                            return statearr_24279;
                          }();
                          var statearr_24280_24322 = state_24268__$1;
                          statearr_24280_24322[2] = null;
                          statearr_24280_24322[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24269 === 13) {
                            var inst_24264 = state_24268[2];
                            var state_24268__$1 = state_24268;
                            var statearr_24281_24323 = state_24268__$1;
                            statearr_24281_24323[2] = inst_24264;
                            statearr_24281_24323[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24269 === 22) {
                              var inst_24262 = state_24268[2];
                              var state_24268__$1 = state_24268;
                              var statearr_24282_24324 = state_24268__$1;
                              statearr_24282_24324[2] = inst_24262;
                              statearr_24282_24324[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24269 === 6) {
                                var inst_24266 = state_24268[2];
                                var state_24268__$1 = state_24268;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24268__$1, inst_24266);
                              } else {
                                if (state_val_24269 === 25) {
                                  var state_24268__$1 = state_24268;
                                  var statearr_24283_24325 = state_24268__$1;
                                  statearr_24283_24325[2] = null;
                                  statearr_24283_24325[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24269 === 17) {
                                    var inst_24242 = state_24268[14];
                                    var state_24268__$1 = state_24268;
                                    var statearr_24284_24326 = state_24268__$1;
                                    statearr_24284_24326[2] = inst_24242;
                                    statearr_24284_24326[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24269 === 3) {
                                      var inst_24202 = state_24268[9];
                                      var state_24268__$1 = state_24268;
                                      var statearr_24285_24327 = state_24268__$1;
                                      statearr_24285_24327[2] = inst_24202;
                                      statearr_24285_24327[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24269 === 12) {
                                        var inst_24228 = state_24268[15];
                                        var inst_24223 = state_24268[16];
                                        var inst_24242 = state_24268[14];
                                        var inst_24242__$1 = inst_24223.call(null, inst_24228);
                                        var state_24268__$1 = function() {
                                          var statearr_24286 = state_24268;
                                          statearr_24286[14] = inst_24242__$1;
                                          return statearr_24286;
                                        }();
                                        if (cljs.core.truth_(inst_24242__$1)) {
                                          var statearr_24287_24328 = state_24268__$1;
                                          statearr_24287_24328[1] = 17;
                                        } else {
                                          var statearr_24288_24329 = state_24268__$1;
                                          statearr_24288_24329[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24269 === 2) {
                                          var inst_24202 = state_24268[9];
                                          var inst_24205 = cljs.core.apply.call(null, cljs.core.hash_map, inst_24202);
                                          var state_24268__$1 = state_24268;
                                          var statearr_24289_24330 = state_24268__$1;
                                          statearr_24289_24330[2] = inst_24205;
                                          statearr_24289_24330[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24269 === 23) {
                                            var inst_24253 = state_24268[2];
                                            var state_24268__$1 = state_24268;
                                            if (cljs.core.truth_(inst_24253)) {
                                              var statearr_24290_24331 = state_24268__$1;
                                              statearr_24290_24331[1] = 24;
                                            } else {
                                              var statearr_24291_24332 = state_24268__$1;
                                              statearr_24291_24332[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_24269 === 19) {
                                              var inst_24250 = state_24268[2];
                                              var state_24268__$1 = state_24268;
                                              if (cljs.core.truth_(inst_24250)) {
                                                var statearr_24292_24333 = state_24268__$1;
                                                statearr_24292_24333[1] = 20;
                                              } else {
                                                var statearr_24293_24334 = state_24268__$1;
                                                statearr_24293_24334[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_24269 === 11) {
                                                var inst_24227 = state_24268[8];
                                                var inst_24233 = inst_24227 == null;
                                                var state_24268__$1 = state_24268;
                                                if (cljs.core.truth_(inst_24233)) {
                                                  var statearr_24294_24335 = state_24268__$1;
                                                  statearr_24294_24335[1] = 14;
                                                } else {
                                                  var statearr_24295_24336 = state_24268__$1;
                                                  statearr_24295_24336[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_24269 === 9) {
                                                  var inst_24220 = state_24268[10];
                                                  var inst_24220__$1 = state_24268[2];
                                                  var inst_24221 = cljs.core.get.call(null, inst_24220__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_24222 = cljs.core.get.call(null, inst_24220__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_24223 = cljs.core.get.call(null, inst_24220__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_24268__$1 = function() {
                                                    var statearr_24296 = state_24268;
                                                    statearr_24296[10] = inst_24220__$1;
                                                    statearr_24296[16] = inst_24223;
                                                    statearr_24296[17] = inst_24222;
                                                    return statearr_24296;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_24268__$1, 10, inst_24221);
                                                } else {
                                                  if (state_val_24269 === 5) {
                                                    var inst_24212 = state_24268[7];
                                                    var inst_24215 = cljs.core.seq_QMARK_.call(null, inst_24212);
                                                    var state_24268__$1 = state_24268;
                                                    if (inst_24215) {
                                                      var statearr_24297_24337 = state_24268__$1;
                                                      statearr_24297_24337[1] = 7;
                                                    } else {
                                                      var statearr_24298_24338 = state_24268__$1;
                                                      statearr_24298_24338[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_24269 === 14) {
                                                      var inst_24228 = state_24268[15];
                                                      var inst_24235 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_24228);
                                                      var state_24268__$1 = state_24268;
                                                      var statearr_24299_24339 = state_24268__$1;
                                                      statearr_24299_24339[2] = inst_24235;
                                                      statearr_24299_24339[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_24269 === 26) {
                                                        var inst_24258 = state_24268[2];
                                                        var state_24268__$1 = state_24268;
                                                        var statearr_24300_24340 = state_24268__$1;
                                                        statearr_24300_24340[2] = inst_24258;
                                                        statearr_24300_24340[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_24269 === 16) {
                                                          var inst_24238 = state_24268[2];
                                                          var inst_24239 = calc_state.call(null);
                                                          var inst_24212 = inst_24239;
                                                          var state_24268__$1 = function() {
                                                            var statearr_24301 = state_24268;
                                                            statearr_24301[18] = inst_24238;
                                                            statearr_24301[7] = inst_24212;
                                                            return statearr_24301;
                                                          }();
                                                          var statearr_24302_24341 = state_24268__$1;
                                                          statearr_24302_24341[2] = null;
                                                          statearr_24302_24341[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_24269 === 10) {
                                                            var inst_24227 = state_24268[8];
                                                            var inst_24228 = state_24268[15];
                                                            var inst_24226 = state_24268[2];
                                                            var inst_24227__$1 = cljs.core.nth.call(null, inst_24226, 0, null);
                                                            var inst_24228__$1 = cljs.core.nth.call(null, inst_24226, 1, null);
                                                            var inst_24229 = inst_24227__$1 == null;
                                                            var inst_24230 = cljs.core._EQ_.call(null, inst_24228__$1, change);
                                                            var inst_24231 = inst_24229 || inst_24230;
                                                            var state_24268__$1 = function() {
                                                              var statearr_24303 = state_24268;
                                                              statearr_24303[8] = inst_24227__$1;
                                                              statearr_24303[15] = inst_24228__$1;
                                                              return statearr_24303;
                                                            }();
                                                            if (cljs.core.truth_(inst_24231)) {
                                                              var statearr_24304_24342 = state_24268__$1;
                                                              statearr_24304_24342[1] = 11;
                                                            } else {
                                                              var statearr_24305_24343 = state_24268__$1;
                                                              statearr_24305_24343[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_24269 === 18) {
                                                              var inst_24228 = state_24268[15];
                                                              var inst_24223 = state_24268[16];
                                                              var inst_24222 = state_24268[17];
                                                              var inst_24245 = cljs.core.empty_QMARK_.call(null, inst_24223);
                                                              var inst_24246 = inst_24222.call(null, inst_24228);
                                                              var inst_24247 = cljs.core.not.call(null, inst_24246);
                                                              var inst_24248 = inst_24245 && inst_24247;
                                                              var state_24268__$1 = state_24268;
                                                              var statearr_24306_24344 = state_24268__$1;
                                                              statearr_24306_24344[2] = inst_24248;
                                                              statearr_24306_24344[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_24269 === 8) {
                                                                var inst_24212 = state_24268[7];
                                                                var state_24268__$1 = state_24268;
                                                                var statearr_24307_24345 = state_24268__$1;
                                                                statearr_24307_24345[2] = inst_24212;
                                                                statearr_24307_24345[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6493__auto__, c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_24311 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24311[0] = state_machine__6494__auto__;
              statearr_24311[1] = 1;
              return statearr_24311;
            };
            var state_machine__6494__auto____1 = function(state_24268) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_24268);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e24312) {
                    if (e24312 instanceof Object) {
                      var ex__6497__auto__ = e24312;
                      var statearr_24313_24346 = state_24268;
                      statearr_24313_24346[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24268);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24312;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24347 = state_24268;
                  state_24268 = G__24347;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_24268) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_24268);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6510__auto__ = function() {
        var statearr_24314 = f__6509__auto__.call(null);
        statearr_24314[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24315;
        return statearr_24314;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___24315, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj24349 = {};
  return obj24349;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3616__auto__ = p;
    if (and__3616__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4272__auto__ = p == null ? null : p;
    return function() {
      var or__3628__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3616__auto__ = p;
    if (and__3616__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4272__auto__ = p == null ? null : p;
    return function() {
      var or__3628__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3616__auto__ = p;
      if (and__3616__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4272__auto__ = p == null ? null : p;
      return function() {
        var or__3628__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3616__auto__ = p;
      if (and__3616__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4272__auto__ = p == null ? null : p;
      return function() {
        var or__3628__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3628__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3628__auto__, mults) {
            return function(p1__24350_SHARP_) {
              if (cljs.core.truth_(p1__24350_SHARP_.call(null, topic))) {
                return p1__24350_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__24350_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3628__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t24473 !== "undefined") {
      } else {
        cljs.core.async.t24473 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta24474) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta24474 = meta24474;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t24473.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t24473.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t24473.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_24475) {
            var self__ = this;
            var _24475__$1 = this;
            return self__.meta24474;
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_24475, meta24474__$1) {
            var self__ = this;
            var _24475__$1 = this;
            return new cljs.core.async.t24473(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta24474__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t24473.cljs$lang$type = true;
        cljs.core.async.t24473.cljs$lang$ctorStr = "cljs.core.async/t24473";
        cljs.core.async.t24473.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
            return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t24473");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t24473 = function(mults, ensure_mult) {
          return function __GT_t24473(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta24474) {
            return new cljs.core.async.t24473(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta24474);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t24473(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
      null));
    }();
    var c__6508__auto___24595 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24595, mults, ensure_mult, p) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___24595, mults, ensure_mult, p) {
            return function(state_24547) {
              var state_val_24548 = state_24547[1];
              if (state_val_24548 === 7) {
                var inst_24543 = state_24547[2];
                var state_24547__$1 = state_24547;
                var statearr_24549_24596 = state_24547__$1;
                statearr_24549_24596[2] = inst_24543;
                statearr_24549_24596[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24548 === 20) {
                  var state_24547__$1 = state_24547;
                  var statearr_24550_24597 = state_24547__$1;
                  statearr_24550_24597[2] = null;
                  statearr_24550_24597[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24548 === 1) {
                    var state_24547__$1 = state_24547;
                    var statearr_24551_24598 = state_24547__$1;
                    statearr_24551_24598[2] = null;
                    statearr_24551_24598[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24548 === 24) {
                      var inst_24526 = state_24547[7];
                      var inst_24535 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_24526);
                      var state_24547__$1 = state_24547;
                      var statearr_24552_24599 = state_24547__$1;
                      statearr_24552_24599[2] = inst_24535;
                      statearr_24552_24599[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24548 === 4) {
                        var inst_24478 = state_24547[8];
                        var inst_24478__$1 = state_24547[2];
                        var inst_24479 = inst_24478__$1 == null;
                        var state_24547__$1 = function() {
                          var statearr_24553 = state_24547;
                          statearr_24553[8] = inst_24478__$1;
                          return statearr_24553;
                        }();
                        if (cljs.core.truth_(inst_24479)) {
                          var statearr_24554_24600 = state_24547__$1;
                          statearr_24554_24600[1] = 5;
                        } else {
                          var statearr_24555_24601 = state_24547__$1;
                          statearr_24555_24601[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24548 === 15) {
                          var inst_24520 = state_24547[2];
                          var state_24547__$1 = state_24547;
                          var statearr_24556_24602 = state_24547__$1;
                          statearr_24556_24602[2] = inst_24520;
                          statearr_24556_24602[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24548 === 21) {
                            var inst_24540 = state_24547[2];
                            var state_24547__$1 = function() {
                              var statearr_24557 = state_24547;
                              statearr_24557[9] = inst_24540;
                              return statearr_24557;
                            }();
                            var statearr_24558_24603 = state_24547__$1;
                            statearr_24558_24603[2] = null;
                            statearr_24558_24603[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24548 === 13) {
                              var inst_24502 = state_24547[10];
                              var inst_24504 = cljs.core.chunked_seq_QMARK_.call(null, inst_24502);
                              var state_24547__$1 = state_24547;
                              if (inst_24504) {
                                var statearr_24559_24604 = state_24547__$1;
                                statearr_24559_24604[1] = 16;
                              } else {
                                var statearr_24560_24605 = state_24547__$1;
                                statearr_24560_24605[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24548 === 22) {
                                var inst_24532 = state_24547[2];
                                var state_24547__$1 = state_24547;
                                if (cljs.core.truth_(inst_24532)) {
                                  var statearr_24561_24606 = state_24547__$1;
                                  statearr_24561_24606[1] = 23;
                                } else {
                                  var statearr_24562_24607 = state_24547__$1;
                                  statearr_24562_24607[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24548 === 6) {
                                  var inst_24528 = state_24547[11];
                                  var inst_24478 = state_24547[8];
                                  var inst_24526 = state_24547[7];
                                  var inst_24526__$1 = topic_fn.call(null, inst_24478);
                                  var inst_24527 = cljs.core.deref.call(null, mults);
                                  var inst_24528__$1 = cljs.core.get.call(null, inst_24527, inst_24526__$1);
                                  var state_24547__$1 = function() {
                                    var statearr_24563 = state_24547;
                                    statearr_24563[11] = inst_24528__$1;
                                    statearr_24563[7] = inst_24526__$1;
                                    return statearr_24563;
                                  }();
                                  if (cljs.core.truth_(inst_24528__$1)) {
                                    var statearr_24564_24608 = state_24547__$1;
                                    statearr_24564_24608[1] = 19;
                                  } else {
                                    var statearr_24565_24609 = state_24547__$1;
                                    statearr_24565_24609[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24548 === 25) {
                                    var inst_24537 = state_24547[2];
                                    var state_24547__$1 = state_24547;
                                    var statearr_24566_24610 = state_24547__$1;
                                    statearr_24566_24610[2] = inst_24537;
                                    statearr_24566_24610[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24548 === 17) {
                                      var inst_24502 = state_24547[10];
                                      var inst_24511 = cljs.core.first.call(null, inst_24502);
                                      var inst_24512 = cljs.core.async.muxch_STAR_.call(null, inst_24511);
                                      var inst_24513 = cljs.core.async.close_BANG_.call(null, inst_24512);
                                      var inst_24514 = cljs.core.next.call(null, inst_24502);
                                      var inst_24488 = inst_24514;
                                      var inst_24489 = null;
                                      var inst_24490 = 0;
                                      var inst_24491 = 0;
                                      var state_24547__$1 = function() {
                                        var statearr_24567 = state_24547;
                                        statearr_24567[12] = inst_24491;
                                        statearr_24567[13] = inst_24490;
                                        statearr_24567[14] = inst_24489;
                                        statearr_24567[15] = inst_24488;
                                        statearr_24567[16] = inst_24513;
                                        return statearr_24567;
                                      }();
                                      var statearr_24568_24611 = state_24547__$1;
                                      statearr_24568_24611[2] = null;
                                      statearr_24568_24611[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24548 === 3) {
                                        var inst_24545 = state_24547[2];
                                        var state_24547__$1 = state_24547;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24547__$1, inst_24545);
                                      } else {
                                        if (state_val_24548 === 12) {
                                          var inst_24522 = state_24547[2];
                                          var state_24547__$1 = state_24547;
                                          var statearr_24569_24612 = state_24547__$1;
                                          statearr_24569_24612[2] = inst_24522;
                                          statearr_24569_24612[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24548 === 2) {
                                            var state_24547__$1 = state_24547;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24547__$1, 4, ch);
                                          } else {
                                            if (state_val_24548 === 23) {
                                              var state_24547__$1 = state_24547;
                                              var statearr_24570_24613 = state_24547__$1;
                                              statearr_24570_24613[2] = null;
                                              statearr_24570_24613[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_24548 === 19) {
                                                var inst_24528 = state_24547[11];
                                                var inst_24478 = state_24547[8];
                                                var inst_24530 = cljs.core.async.muxch_STAR_.call(null, inst_24528);
                                                var state_24547__$1 = state_24547;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24547__$1, 22, inst_24530, inst_24478);
                                              } else {
                                                if (state_val_24548 === 11) {
                                                  var inst_24502 = state_24547[10];
                                                  var inst_24488 = state_24547[15];
                                                  var inst_24502__$1 = cljs.core.seq.call(null, inst_24488);
                                                  var state_24547__$1 = function() {
                                                    var statearr_24571 = state_24547;
                                                    statearr_24571[10] = inst_24502__$1;
                                                    return statearr_24571;
                                                  }();
                                                  if (inst_24502__$1) {
                                                    var statearr_24572_24614 = state_24547__$1;
                                                    statearr_24572_24614[1] = 13;
                                                  } else {
                                                    var statearr_24573_24615 = state_24547__$1;
                                                    statearr_24573_24615[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_24548 === 9) {
                                                    var inst_24524 = state_24547[2];
                                                    var state_24547__$1 = state_24547;
                                                    var statearr_24574_24616 = state_24547__$1;
                                                    statearr_24574_24616[2] = inst_24524;
                                                    statearr_24574_24616[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_24548 === 5) {
                                                      var inst_24485 = cljs.core.deref.call(null, mults);
                                                      var inst_24486 = cljs.core.vals.call(null, inst_24485);
                                                      var inst_24487 = cljs.core.seq.call(null, inst_24486);
                                                      var inst_24488 = inst_24487;
                                                      var inst_24489 = null;
                                                      var inst_24490 = 0;
                                                      var inst_24491 = 0;
                                                      var state_24547__$1 = function() {
                                                        var statearr_24575 = state_24547;
                                                        statearr_24575[12] = inst_24491;
                                                        statearr_24575[13] = inst_24490;
                                                        statearr_24575[14] = inst_24489;
                                                        statearr_24575[15] = inst_24488;
                                                        return statearr_24575;
                                                      }();
                                                      var statearr_24576_24617 = state_24547__$1;
                                                      statearr_24576_24617[2] = null;
                                                      statearr_24576_24617[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_24548 === 14) {
                                                        var state_24547__$1 = state_24547;
                                                        var statearr_24580_24618 = state_24547__$1;
                                                        statearr_24580_24618[2] = null;
                                                        statearr_24580_24618[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_24548 === 16) {
                                                          var inst_24502 = state_24547[10];
                                                          var inst_24506 = cljs.core.chunk_first.call(null, inst_24502);
                                                          var inst_24507 = cljs.core.chunk_rest.call(null, inst_24502);
                                                          var inst_24508 = cljs.core.count.call(null, inst_24506);
                                                          var inst_24488 = inst_24507;
                                                          var inst_24489 = inst_24506;
                                                          var inst_24490 = inst_24508;
                                                          var inst_24491 = 0;
                                                          var state_24547__$1 = function() {
                                                            var statearr_24581 = state_24547;
                                                            statearr_24581[12] = inst_24491;
                                                            statearr_24581[13] = inst_24490;
                                                            statearr_24581[14] = inst_24489;
                                                            statearr_24581[15] = inst_24488;
                                                            return statearr_24581;
                                                          }();
                                                          var statearr_24582_24619 = state_24547__$1;
                                                          statearr_24582_24619[2] = null;
                                                          statearr_24582_24619[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_24548 === 10) {
                                                            var inst_24491 = state_24547[12];
                                                            var inst_24490 = state_24547[13];
                                                            var inst_24489 = state_24547[14];
                                                            var inst_24488 = state_24547[15];
                                                            var inst_24496 = cljs.core._nth.call(null, inst_24489, inst_24491);
                                                            var inst_24497 = cljs.core.async.muxch_STAR_.call(null, inst_24496);
                                                            var inst_24498 = cljs.core.async.close_BANG_.call(null, inst_24497);
                                                            var inst_24499 = inst_24491 + 1;
                                                            var tmp24577 = inst_24490;
                                                            var tmp24578 = inst_24489;
                                                            var tmp24579 = inst_24488;
                                                            var inst_24488__$1 = tmp24579;
                                                            var inst_24489__$1 = tmp24578;
                                                            var inst_24490__$1 = tmp24577;
                                                            var inst_24491__$1 = inst_24499;
                                                            var state_24547__$1 = function() {
                                                              var statearr_24583 = state_24547;
                                                              statearr_24583[17] = inst_24498;
                                                              statearr_24583[12] = inst_24491__$1;
                                                              statearr_24583[13] = inst_24490__$1;
                                                              statearr_24583[14] = inst_24489__$1;
                                                              statearr_24583[15] = inst_24488__$1;
                                                              return statearr_24583;
                                                            }();
                                                            var statearr_24584_24620 = state_24547__$1;
                                                            statearr_24584_24620[2] = null;
                                                            statearr_24584_24620[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_24548 === 18) {
                                                              var inst_24517 = state_24547[2];
                                                              var state_24547__$1 = state_24547;
                                                              var statearr_24585_24621 = state_24547__$1;
                                                              statearr_24585_24621[2] = inst_24517;
                                                              statearr_24585_24621[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_24548 === 8) {
                                                                var inst_24491 = state_24547[12];
                                                                var inst_24490 = state_24547[13];
                                                                var inst_24493 = inst_24491 < inst_24490;
                                                                var inst_24494 = inst_24493;
                                                                var state_24547__$1 = state_24547;
                                                                if (cljs.core.truth_(inst_24494)) {
                                                                  var statearr_24586_24622 = state_24547__$1;
                                                                  statearr_24586_24622[1] = 10;
                                                                } else {
                                                                  var statearr_24587_24623 = state_24547__$1;
                                                                  statearr_24587_24623[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___24595, mults, ensure_mult, p);
          return function(switch__6493__auto__, c__6508__auto___24595, mults, ensure_mult, p) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_24591 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_24591[0] = state_machine__6494__auto__;
                statearr_24591[1] = 1;
                return statearr_24591;
              };
              var state_machine__6494__auto____1 = function(state_24547) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_24547);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e24592) {
                      if (e24592 instanceof Object) {
                        var ex__6497__auto__ = e24592;
                        var statearr_24593_24624 = state_24547;
                        statearr_24593_24624[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24547);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24592;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24625 = state_24547;
                    state_24547 = G__24625;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_24547) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_24547);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___24595, mults, ensure_mult, p);
        }();
        var state__6510__auto__ = function() {
          var statearr_24594 = f__6509__auto__.call(null);
          statearr_24594[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24595;
          return statearr_24594;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___24595, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6508__auto___24762 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_24732) {
              var state_val_24733 = state_24732[1];
              if (state_val_24733 === 7) {
                var state_24732__$1 = state_24732;
                var statearr_24734_24763 = state_24732__$1;
                statearr_24734_24763[2] = null;
                statearr_24734_24763[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24733 === 1) {
                  var state_24732__$1 = state_24732;
                  var statearr_24735_24764 = state_24732__$1;
                  statearr_24735_24764[2] = null;
                  statearr_24735_24764[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24733 === 4) {
                    var inst_24696 = state_24732[7];
                    var inst_24698 = inst_24696 < cnt;
                    var state_24732__$1 = state_24732;
                    if (cljs.core.truth_(inst_24698)) {
                      var statearr_24736_24765 = state_24732__$1;
                      statearr_24736_24765[1] = 6;
                    } else {
                      var statearr_24737_24766 = state_24732__$1;
                      statearr_24737_24766[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24733 === 15) {
                      var inst_24728 = state_24732[2];
                      var state_24732__$1 = state_24732;
                      var statearr_24738_24767 = state_24732__$1;
                      statearr_24738_24767[2] = inst_24728;
                      statearr_24738_24767[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24733 === 13) {
                        var inst_24721 = cljs.core.async.close_BANG_.call(null, out);
                        var state_24732__$1 = state_24732;
                        var statearr_24739_24768 = state_24732__$1;
                        statearr_24739_24768[2] = inst_24721;
                        statearr_24739_24768[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24733 === 6) {
                          var state_24732__$1 = state_24732;
                          var statearr_24740_24769 = state_24732__$1;
                          statearr_24740_24769[2] = null;
                          statearr_24740_24769[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24733 === 3) {
                            var inst_24730 = state_24732[2];
                            var state_24732__$1 = state_24732;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24732__$1, inst_24730);
                          } else {
                            if (state_val_24733 === 12) {
                              var inst_24718 = state_24732[8];
                              var inst_24718__$1 = state_24732[2];
                              var inst_24719 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_24718__$1);
                              var state_24732__$1 = function() {
                                var statearr_24741 = state_24732;
                                statearr_24741[8] = inst_24718__$1;
                                return statearr_24741;
                              }();
                              if (cljs.core.truth_(inst_24719)) {
                                var statearr_24742_24770 = state_24732__$1;
                                statearr_24742_24770[1] = 13;
                              } else {
                                var statearr_24743_24771 = state_24732__$1;
                                statearr_24743_24771[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24733 === 2) {
                                var inst_24695 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_24696 = 0;
                                var state_24732__$1 = function() {
                                  var statearr_24744 = state_24732;
                                  statearr_24744[7] = inst_24696;
                                  statearr_24744[9] = inst_24695;
                                  return statearr_24744;
                                }();
                                var statearr_24745_24772 = state_24732__$1;
                                statearr_24745_24772[2] = null;
                                statearr_24745_24772[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24733 === 11) {
                                  var inst_24696 = state_24732[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_24732, 10, Object, null, 9);
                                  var inst_24705 = chs__$1.call(null, inst_24696);
                                  var inst_24706 = done.call(null, inst_24696);
                                  var inst_24707 = cljs.core.async.take_BANG_.call(null, inst_24705, inst_24706);
                                  var state_24732__$1 = state_24732;
                                  var statearr_24746_24773 = state_24732__$1;
                                  statearr_24746_24773[2] = inst_24707;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24732__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24733 === 9) {
                                    var inst_24696 = state_24732[7];
                                    var inst_24709 = state_24732[2];
                                    var inst_24710 = inst_24696 + 1;
                                    var inst_24696__$1 = inst_24710;
                                    var state_24732__$1 = function() {
                                      var statearr_24747 = state_24732;
                                      statearr_24747[7] = inst_24696__$1;
                                      statearr_24747[10] = inst_24709;
                                      return statearr_24747;
                                    }();
                                    var statearr_24748_24774 = state_24732__$1;
                                    statearr_24748_24774[2] = null;
                                    statearr_24748_24774[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24733 === 5) {
                                      var inst_24716 = state_24732[2];
                                      var state_24732__$1 = function() {
                                        var statearr_24749 = state_24732;
                                        statearr_24749[11] = inst_24716;
                                        return statearr_24749;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24732__$1, 12, dchan);
                                    } else {
                                      if (state_val_24733 === 14) {
                                        var inst_24718 = state_24732[8];
                                        var inst_24723 = cljs.core.apply.call(null, f, inst_24718);
                                        var state_24732__$1 = state_24732;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24732__$1, 16, out, inst_24723);
                                      } else {
                                        if (state_val_24733 === 16) {
                                          var inst_24725 = state_24732[2];
                                          var state_24732__$1 = function() {
                                            var statearr_24750 = state_24732;
                                            statearr_24750[12] = inst_24725;
                                            return statearr_24750;
                                          }();
                                          var statearr_24751_24775 = state_24732__$1;
                                          statearr_24751_24775[2] = null;
                                          statearr_24751_24775[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24733 === 10) {
                                            var inst_24700 = state_24732[2];
                                            var inst_24701 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_24732__$1 = function() {
                                              var statearr_24752 = state_24732;
                                              statearr_24752[13] = inst_24700;
                                              return statearr_24752;
                                            }();
                                            var statearr_24753_24776 = state_24732__$1;
                                            statearr_24753_24776[2] = inst_24701;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24732__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_24733 === 8) {
                                              var inst_24714 = state_24732[2];
                                              var state_24732__$1 = state_24732;
                                              var statearr_24754_24777 = state_24732__$1;
                                              statearr_24754_24777[2] = inst_24714;
                                              statearr_24754_24777[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6493__auto__, c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_24758 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_24758[0] = state_machine__6494__auto__;
                statearr_24758[1] = 1;
                return statearr_24758;
              };
              var state_machine__6494__auto____1 = function(state_24732) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_24732);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e24759) {
                      if (e24759 instanceof Object) {
                        var ex__6497__auto__ = e24759;
                        var statearr_24760_24778 = state_24732;
                        statearr_24760_24778[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24732);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24759;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24779 = state_24732;
                    state_24732 = G__24779;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_24732) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_24732);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6510__auto__ = function() {
          var statearr_24761 = f__6509__auto__.call(null);
          statearr_24761[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24762;
          return statearr_24761;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___24762, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___24887 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24887, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___24887, out) {
            return function(state_24863) {
              var state_val_24864 = state_24863[1];
              if (state_val_24864 === 7) {
                var inst_24842 = state_24863[7];
                var inst_24843 = state_24863[8];
                var inst_24842__$1 = state_24863[2];
                var inst_24843__$1 = cljs.core.nth.call(null, inst_24842__$1, 0, null);
                var inst_24844 = cljs.core.nth.call(null, inst_24842__$1, 1, null);
                var inst_24845 = inst_24843__$1 == null;
                var state_24863__$1 = function() {
                  var statearr_24865 = state_24863;
                  statearr_24865[7] = inst_24842__$1;
                  statearr_24865[9] = inst_24844;
                  statearr_24865[8] = inst_24843__$1;
                  return statearr_24865;
                }();
                if (cljs.core.truth_(inst_24845)) {
                  var statearr_24866_24888 = state_24863__$1;
                  statearr_24866_24888[1] = 8;
                } else {
                  var statearr_24867_24889 = state_24863__$1;
                  statearr_24867_24889[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24864 === 1) {
                  var inst_24834 = cljs.core.vec.call(null, chs);
                  var inst_24835 = inst_24834;
                  var state_24863__$1 = function() {
                    var statearr_24868 = state_24863;
                    statearr_24868[10] = inst_24835;
                    return statearr_24868;
                  }();
                  var statearr_24869_24890 = state_24863__$1;
                  statearr_24869_24890[2] = null;
                  statearr_24869_24890[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24864 === 4) {
                    var inst_24835 = state_24863[10];
                    var state_24863__$1 = state_24863;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_24863__$1, 7, inst_24835);
                  } else {
                    if (state_val_24864 === 6) {
                      var inst_24859 = state_24863[2];
                      var state_24863__$1 = state_24863;
                      var statearr_24870_24891 = state_24863__$1;
                      statearr_24870_24891[2] = inst_24859;
                      statearr_24870_24891[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24864 === 3) {
                        var inst_24861 = state_24863[2];
                        var state_24863__$1 = state_24863;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24863__$1, inst_24861);
                      } else {
                        if (state_val_24864 === 2) {
                          var inst_24835 = state_24863[10];
                          var inst_24837 = cljs.core.count.call(null, inst_24835);
                          var inst_24838 = inst_24837 > 0;
                          var state_24863__$1 = state_24863;
                          if (cljs.core.truth_(inst_24838)) {
                            var statearr_24872_24892 = state_24863__$1;
                            statearr_24872_24892[1] = 4;
                          } else {
                            var statearr_24873_24893 = state_24863__$1;
                            statearr_24873_24893[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24864 === 11) {
                            var inst_24835 = state_24863[10];
                            var inst_24852 = state_24863[2];
                            var tmp24871 = inst_24835;
                            var inst_24835__$1 = tmp24871;
                            var state_24863__$1 = function() {
                              var statearr_24874 = state_24863;
                              statearr_24874[10] = inst_24835__$1;
                              statearr_24874[11] = inst_24852;
                              return statearr_24874;
                            }();
                            var statearr_24875_24894 = state_24863__$1;
                            statearr_24875_24894[2] = null;
                            statearr_24875_24894[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24864 === 9) {
                              var inst_24843 = state_24863[8];
                              var state_24863__$1 = state_24863;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24863__$1, 11, out, inst_24843);
                            } else {
                              if (state_val_24864 === 5) {
                                var inst_24857 = cljs.core.async.close_BANG_.call(null, out);
                                var state_24863__$1 = state_24863;
                                var statearr_24876_24895 = state_24863__$1;
                                statearr_24876_24895[2] = inst_24857;
                                statearr_24876_24895[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24864 === 10) {
                                  var inst_24855 = state_24863[2];
                                  var state_24863__$1 = state_24863;
                                  var statearr_24877_24896 = state_24863__$1;
                                  statearr_24877_24896[2] = inst_24855;
                                  statearr_24877_24896[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24864 === 8) {
                                    var inst_24842 = state_24863[7];
                                    var inst_24835 = state_24863[10];
                                    var inst_24844 = state_24863[9];
                                    var inst_24843 = state_24863[8];
                                    var inst_24847 = function() {
                                      var c = inst_24844;
                                      var v = inst_24843;
                                      var vec__24840 = inst_24842;
                                      var cs = inst_24835;
                                      return function(c, v, vec__24840, cs, inst_24842, inst_24835, inst_24844, inst_24843, state_val_24864, c__6508__auto___24887, out) {
                                        return function(p1__24780_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__24780_SHARP_);
                                        };
                                      }(c, v, vec__24840, cs, inst_24842, inst_24835, inst_24844, inst_24843, state_val_24864, c__6508__auto___24887, out);
                                    }();
                                    var inst_24848 = cljs.core.filterv.call(null, inst_24847, inst_24835);
                                    var inst_24835__$1 = inst_24848;
                                    var state_24863__$1 = function() {
                                      var statearr_24878 = state_24863;
                                      statearr_24878[10] = inst_24835__$1;
                                      return statearr_24878;
                                    }();
                                    var statearr_24879_24897 = state_24863__$1;
                                    statearr_24879_24897[2] = null;
                                    statearr_24879_24897[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___24887, out);
          return function(switch__6493__auto__, c__6508__auto___24887, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_24883 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_24883[0] = state_machine__6494__auto__;
                statearr_24883[1] = 1;
                return statearr_24883;
              };
              var state_machine__6494__auto____1 = function(state_24863) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_24863);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e24884) {
                      if (e24884 instanceof Object) {
                        var ex__6497__auto__ = e24884;
                        var statearr_24885_24898 = state_24863;
                        statearr_24885_24898[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24863);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24884;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24899 = state_24863;
                    state_24863 = G__24899;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_24863) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_24863);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___24887, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_24886 = f__6509__auto__.call(null);
          statearr_24886[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24887;
          return statearr_24886;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___24887, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___24992 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___24992, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___24992, out) {
            return function(state_24969) {
              var state_val_24970 = state_24969[1];
              if (state_val_24970 === 7) {
                var inst_24951 = state_24969[7];
                var inst_24951__$1 = state_24969[2];
                var inst_24952 = inst_24951__$1 == null;
                var inst_24953 = cljs.core.not.call(null, inst_24952);
                var state_24969__$1 = function() {
                  var statearr_24971 = state_24969;
                  statearr_24971[7] = inst_24951__$1;
                  return statearr_24971;
                }();
                if (inst_24953) {
                  var statearr_24972_24993 = state_24969__$1;
                  statearr_24972_24993[1] = 8;
                } else {
                  var statearr_24973_24994 = state_24969__$1;
                  statearr_24973_24994[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24970 === 1) {
                  var inst_24946 = 0;
                  var state_24969__$1 = function() {
                    var statearr_24974 = state_24969;
                    statearr_24974[8] = inst_24946;
                    return statearr_24974;
                  }();
                  var statearr_24975_24995 = state_24969__$1;
                  statearr_24975_24995[2] = null;
                  statearr_24975_24995[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24970 === 4) {
                    var state_24969__$1 = state_24969;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24969__$1, 7, ch);
                  } else {
                    if (state_val_24970 === 6) {
                      var inst_24964 = state_24969[2];
                      var state_24969__$1 = state_24969;
                      var statearr_24976_24996 = state_24969__$1;
                      statearr_24976_24996[2] = inst_24964;
                      statearr_24976_24996[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24970 === 3) {
                        var inst_24966 = state_24969[2];
                        var inst_24967 = cljs.core.async.close_BANG_.call(null, out);
                        var state_24969__$1 = function() {
                          var statearr_24977 = state_24969;
                          statearr_24977[9] = inst_24966;
                          return statearr_24977;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24969__$1, inst_24967);
                      } else {
                        if (state_val_24970 === 2) {
                          var inst_24946 = state_24969[8];
                          var inst_24948 = inst_24946 < n;
                          var state_24969__$1 = state_24969;
                          if (cljs.core.truth_(inst_24948)) {
                            var statearr_24978_24997 = state_24969__$1;
                            statearr_24978_24997[1] = 4;
                          } else {
                            var statearr_24979_24998 = state_24969__$1;
                            statearr_24979_24998[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24970 === 11) {
                            var inst_24946 = state_24969[8];
                            var inst_24956 = state_24969[2];
                            var inst_24957 = inst_24946 + 1;
                            var inst_24946__$1 = inst_24957;
                            var state_24969__$1 = function() {
                              var statearr_24980 = state_24969;
                              statearr_24980[8] = inst_24946__$1;
                              statearr_24980[10] = inst_24956;
                              return statearr_24980;
                            }();
                            var statearr_24981_24999 = state_24969__$1;
                            statearr_24981_24999[2] = null;
                            statearr_24981_24999[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24970 === 9) {
                              var state_24969__$1 = state_24969;
                              var statearr_24982_25000 = state_24969__$1;
                              statearr_24982_25000[2] = null;
                              statearr_24982_25000[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24970 === 5) {
                                var state_24969__$1 = state_24969;
                                var statearr_24983_25001 = state_24969__$1;
                                statearr_24983_25001[2] = null;
                                statearr_24983_25001[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24970 === 10) {
                                  var inst_24961 = state_24969[2];
                                  var state_24969__$1 = state_24969;
                                  var statearr_24984_25002 = state_24969__$1;
                                  statearr_24984_25002[2] = inst_24961;
                                  statearr_24984_25002[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24970 === 8) {
                                    var inst_24951 = state_24969[7];
                                    var state_24969__$1 = state_24969;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24969__$1, 11, out, inst_24951);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___24992, out);
          return function(switch__6493__auto__, c__6508__auto___24992, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_24988 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_24988[0] = state_machine__6494__auto__;
                statearr_24988[1] = 1;
                return statearr_24988;
              };
              var state_machine__6494__auto____1 = function(state_24969) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_24969);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e24989) {
                      if (e24989 instanceof Object) {
                        var ex__6497__auto__ = e24989;
                        var statearr_24990_25003 = state_24969;
                        statearr_24990_25003[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24969);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24989;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25004 = state_24969;
                    state_24969 = G__25004;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_24969) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_24969);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___24992, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_24991 = f__6509__auto__.call(null);
          statearr_24991[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___24992;
          return statearr_24991;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___24992, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t25012 !== "undefined") {
  } else {
    cljs.core.async.t25012 = function(ch, f, map_LT_, meta25013) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta25013 = meta25013;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t25015 !== "undefined") {
        } else {
          cljs.core.async.t25015 = function(fn1, _, meta25013, map_LT_, f, ch, meta25016) {
            this.fn1 = fn1;
            this._ = _;
            this.meta25013 = meta25013;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta25016 = meta25016;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t25015.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t25015.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t25015.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__25005_SHARP_) {
                  return f1.call(null, p1__25005_SHARP_ == null ? null : self__.f.call(null, p1__25005_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t25015.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_25017) {
              var self__ = this;
              var _25017__$1 = this;
              return self__.meta25016;
            };
          }(___$1);
          cljs.core.async.t25015.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_25017, meta25016__$1) {
              var self__ = this;
              var _25017__$1 = this;
              return new cljs.core.async.t25015(self__.fn1, self__._, self__.meta25013, self__.map_LT_, self__.f, self__.ch, meta25016__$1);
            };
          }(___$1);
          cljs.core.async.t25015.cljs$lang$type = true;
          cljs.core.async.t25015.cljs$lang$ctorStr = "cljs.core.async/t25015";
          cljs.core.async.t25015.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
              return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t25015");
            };
          }(___$1);
          cljs.core.async.__GT_t25015 = function(___$1) {
            return function __GT_t25015(fn1__$1, ___$2, meta25013__$1, map_LT___$1, f__$1, ch__$1, meta25016) {
              return new cljs.core.async.t25015(fn1__$1, ___$2, meta25013__$1, map_LT___$1, f__$1, ch__$1, meta25016);
            };
          }(___$1);
        }
        return new cljs.core.async.t25015(fn1, ___$1, self__.meta25013, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = ret;
        if (cljs.core.truth_(and__3616__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3616__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25012.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t25012.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25014) {
      var self__ = this;
      var _25014__$1 = this;
      return self__.meta25013;
    };
    cljs.core.async.t25012.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25014, meta25013__$1) {
      var self__ = this;
      var _25014__$1 = this;
      return new cljs.core.async.t25012(self__.ch, self__.f, self__.map_LT_, meta25013__$1);
    };
    cljs.core.async.t25012.cljs$lang$type = true;
    cljs.core.async.t25012.cljs$lang$ctorStr = "cljs.core.async/t25012";
    cljs.core.async.t25012.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t25012");
    };
    cljs.core.async.__GT_t25012 = function __GT_t25012(ch__$1, f__$1, map_LT___$1, meta25013) {
      return new cljs.core.async.t25012(ch__$1, f__$1, map_LT___$1, meta25013);
    };
  }
  return new cljs.core.async.t25012(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t25021 !== "undefined") {
  } else {
    cljs.core.async.t25021 = function(ch, f, map_GT_, meta25022) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta25022 = meta25022;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25021.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25021.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25023) {
      var self__ = this;
      var _25023__$1 = this;
      return self__.meta25022;
    };
    cljs.core.async.t25021.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25023, meta25022__$1) {
      var self__ = this;
      var _25023__$1 = this;
      return new cljs.core.async.t25021(self__.ch, self__.f, self__.map_GT_, meta25022__$1);
    };
    cljs.core.async.t25021.cljs$lang$type = true;
    cljs.core.async.t25021.cljs$lang$ctorStr = "cljs.core.async/t25021";
    cljs.core.async.t25021.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t25021");
    };
    cljs.core.async.__GT_t25021 = function __GT_t25021(ch__$1, f__$1, map_GT___$1, meta25022) {
      return new cljs.core.async.t25021(ch__$1, f__$1, map_GT___$1, meta25022);
    };
  }
  return new cljs.core.async.t25021(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t25027 !== "undefined") {
  } else {
    cljs.core.async.t25027 = function(ch, p, filter_GT_, meta25028) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta25028 = meta25028;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25027.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t25027.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25029) {
      var self__ = this;
      var _25029__$1 = this;
      return self__.meta25028;
    };
    cljs.core.async.t25027.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25029, meta25028__$1) {
      var self__ = this;
      var _25029__$1 = this;
      return new cljs.core.async.t25027(self__.ch, self__.p, self__.filter_GT_, meta25028__$1);
    };
    cljs.core.async.t25027.cljs$lang$type = true;
    cljs.core.async.t25027.cljs$lang$ctorStr = "cljs.core.async/t25027";
    cljs.core.async.t25027.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t25027");
    };
    cljs.core.async.__GT_t25027 = function __GT_t25027(ch__$1, p__$1, filter_GT___$1, meta25028) {
      return new cljs.core.async.t25027(ch__$1, p__$1, filter_GT___$1, meta25028);
    };
  }
  return new cljs.core.async.t25027(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___25112 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___25112, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___25112, out) {
            return function(state_25091) {
              var state_val_25092 = state_25091[1];
              if (state_val_25092 === 7) {
                var inst_25087 = state_25091[2];
                var state_25091__$1 = state_25091;
                var statearr_25093_25113 = state_25091__$1;
                statearr_25093_25113[2] = inst_25087;
                statearr_25093_25113[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25092 === 1) {
                  var state_25091__$1 = state_25091;
                  var statearr_25094_25114 = state_25091__$1;
                  statearr_25094_25114[2] = null;
                  statearr_25094_25114[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25092 === 4) {
                    var inst_25073 = state_25091[7];
                    var inst_25073__$1 = state_25091[2];
                    var inst_25074 = inst_25073__$1 == null;
                    var state_25091__$1 = function() {
                      var statearr_25095 = state_25091;
                      statearr_25095[7] = inst_25073__$1;
                      return statearr_25095;
                    }();
                    if (cljs.core.truth_(inst_25074)) {
                      var statearr_25096_25115 = state_25091__$1;
                      statearr_25096_25115[1] = 5;
                    } else {
                      var statearr_25097_25116 = state_25091__$1;
                      statearr_25097_25116[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25092 === 6) {
                      var inst_25073 = state_25091[7];
                      var inst_25078 = p.call(null, inst_25073);
                      var state_25091__$1 = state_25091;
                      if (cljs.core.truth_(inst_25078)) {
                        var statearr_25098_25117 = state_25091__$1;
                        statearr_25098_25117[1] = 8;
                      } else {
                        var statearr_25099_25118 = state_25091__$1;
                        statearr_25099_25118[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25092 === 3) {
                        var inst_25089 = state_25091[2];
                        var state_25091__$1 = state_25091;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25091__$1, inst_25089);
                      } else {
                        if (state_val_25092 === 2) {
                          var state_25091__$1 = state_25091;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25091__$1, 4, ch);
                        } else {
                          if (state_val_25092 === 11) {
                            var inst_25081 = state_25091[2];
                            var state_25091__$1 = state_25091;
                            var statearr_25100_25119 = state_25091__$1;
                            statearr_25100_25119[2] = inst_25081;
                            statearr_25100_25119[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25092 === 9) {
                              var state_25091__$1 = state_25091;
                              var statearr_25101_25120 = state_25091__$1;
                              statearr_25101_25120[2] = null;
                              statearr_25101_25120[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_25092 === 5) {
                                var inst_25076 = cljs.core.async.close_BANG_.call(null, out);
                                var state_25091__$1 = state_25091;
                                var statearr_25102_25121 = state_25091__$1;
                                statearr_25102_25121[2] = inst_25076;
                                statearr_25102_25121[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_25092 === 10) {
                                  var inst_25084 = state_25091[2];
                                  var state_25091__$1 = function() {
                                    var statearr_25103 = state_25091;
                                    statearr_25103[8] = inst_25084;
                                    return statearr_25103;
                                  }();
                                  var statearr_25104_25122 = state_25091__$1;
                                  statearr_25104_25122[2] = null;
                                  statearr_25104_25122[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25092 === 8) {
                                    var inst_25073 = state_25091[7];
                                    var state_25091__$1 = state_25091;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25091__$1, 11, out, inst_25073);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___25112, out);
          return function(switch__6493__auto__, c__6508__auto___25112, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_25108 = [null, null, null, null, null, null, null, null, null];
                statearr_25108[0] = state_machine__6494__auto__;
                statearr_25108[1] = 1;
                return statearr_25108;
              };
              var state_machine__6494__auto____1 = function(state_25091) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_25091);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e25109) {
                      if (e25109 instanceof Object) {
                        var ex__6497__auto__ = e25109;
                        var statearr_25110_25123 = state_25091;
                        statearr_25110_25123[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25091);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e25109;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25124 = state_25091;
                    state_25091 = G__25124;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_25091) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_25091);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___25112, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_25111 = f__6509__auto__.call(null);
          statearr_25111[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___25112;
          return statearr_25111;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___25112, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__) {
          return function(state_25290) {
            var state_val_25291 = state_25290[1];
            if (state_val_25291 === 7) {
              var inst_25286 = state_25290[2];
              var state_25290__$1 = state_25290;
              var statearr_25292_25333 = state_25290__$1;
              statearr_25292_25333[2] = inst_25286;
              statearr_25292_25333[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_25291 === 20) {
                var inst_25256 = state_25290[7];
                var inst_25267 = state_25290[2];
                var inst_25268 = cljs.core.next.call(null, inst_25256);
                var inst_25242 = inst_25268;
                var inst_25243 = null;
                var inst_25244 = 0;
                var inst_25245 = 0;
                var state_25290__$1 = function() {
                  var statearr_25293 = state_25290;
                  statearr_25293[8] = inst_25242;
                  statearr_25293[9] = inst_25243;
                  statearr_25293[10] = inst_25244;
                  statearr_25293[11] = inst_25245;
                  statearr_25293[12] = inst_25267;
                  return statearr_25293;
                }();
                var statearr_25294_25334 = state_25290__$1;
                statearr_25294_25334[2] = null;
                statearr_25294_25334[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25291 === 1) {
                  var state_25290__$1 = state_25290;
                  var statearr_25295_25335 = state_25290__$1;
                  statearr_25295_25335[2] = null;
                  statearr_25295_25335[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25291 === 4) {
                    var inst_25231 = state_25290[13];
                    var inst_25231__$1 = state_25290[2];
                    var inst_25232 = inst_25231__$1 == null;
                    var state_25290__$1 = function() {
                      var statearr_25296 = state_25290;
                      statearr_25296[13] = inst_25231__$1;
                      return statearr_25296;
                    }();
                    if (cljs.core.truth_(inst_25232)) {
                      var statearr_25297_25336 = state_25290__$1;
                      statearr_25297_25336[1] = 5;
                    } else {
                      var statearr_25298_25337 = state_25290__$1;
                      statearr_25298_25337[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25291 === 15) {
                      var state_25290__$1 = state_25290;
                      var statearr_25302_25338 = state_25290__$1;
                      statearr_25302_25338[2] = null;
                      statearr_25302_25338[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25291 === 21) {
                        var state_25290__$1 = state_25290;
                        var statearr_25303_25339 = state_25290__$1;
                        statearr_25303_25339[2] = null;
                        statearr_25303_25339[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25291 === 13) {
                          var inst_25242 = state_25290[8];
                          var inst_25243 = state_25290[9];
                          var inst_25244 = state_25290[10];
                          var inst_25245 = state_25290[11];
                          var inst_25252 = state_25290[2];
                          var inst_25253 = inst_25245 + 1;
                          var tmp25299 = inst_25242;
                          var tmp25300 = inst_25243;
                          var tmp25301 = inst_25244;
                          var inst_25242__$1 = tmp25299;
                          var inst_25243__$1 = tmp25300;
                          var inst_25244__$1 = tmp25301;
                          var inst_25245__$1 = inst_25253;
                          var state_25290__$1 = function() {
                            var statearr_25304 = state_25290;
                            statearr_25304[8] = inst_25242__$1;
                            statearr_25304[9] = inst_25243__$1;
                            statearr_25304[10] = inst_25244__$1;
                            statearr_25304[11] = inst_25245__$1;
                            statearr_25304[14] = inst_25252;
                            return statearr_25304;
                          }();
                          var statearr_25305_25340 = state_25290__$1;
                          statearr_25305_25340[2] = null;
                          statearr_25305_25340[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25291 === 22) {
                            var state_25290__$1 = state_25290;
                            var statearr_25306_25341 = state_25290__$1;
                            statearr_25306_25341[2] = null;
                            statearr_25306_25341[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25291 === 6) {
                              var inst_25231 = state_25290[13];
                              var inst_25240 = f.call(null, inst_25231);
                              var inst_25241 = cljs.core.seq.call(null, inst_25240);
                              var inst_25242 = inst_25241;
                              var inst_25243 = null;
                              var inst_25244 = 0;
                              var inst_25245 = 0;
                              var state_25290__$1 = function() {
                                var statearr_25307 = state_25290;
                                statearr_25307[8] = inst_25242;
                                statearr_25307[9] = inst_25243;
                                statearr_25307[10] = inst_25244;
                                statearr_25307[11] = inst_25245;
                                return statearr_25307;
                              }();
                              var statearr_25308_25342 = state_25290__$1;
                              statearr_25308_25342[2] = null;
                              statearr_25308_25342[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_25291 === 17) {
                                var inst_25256 = state_25290[7];
                                var inst_25260 = cljs.core.chunk_first.call(null, inst_25256);
                                var inst_25261 = cljs.core.chunk_rest.call(null, inst_25256);
                                var inst_25262 = cljs.core.count.call(null, inst_25260);
                                var inst_25242 = inst_25261;
                                var inst_25243 = inst_25260;
                                var inst_25244 = inst_25262;
                                var inst_25245 = 0;
                                var state_25290__$1 = function() {
                                  var statearr_25309 = state_25290;
                                  statearr_25309[8] = inst_25242;
                                  statearr_25309[9] = inst_25243;
                                  statearr_25309[10] = inst_25244;
                                  statearr_25309[11] = inst_25245;
                                  return statearr_25309;
                                }();
                                var statearr_25310_25343 = state_25290__$1;
                                statearr_25310_25343[2] = null;
                                statearr_25310_25343[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_25291 === 3) {
                                  var inst_25288 = state_25290[2];
                                  var state_25290__$1 = state_25290;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25290__$1, inst_25288);
                                } else {
                                  if (state_val_25291 === 12) {
                                    var inst_25276 = state_25290[2];
                                    var state_25290__$1 = state_25290;
                                    var statearr_25311_25344 = state_25290__$1;
                                    statearr_25311_25344[2] = inst_25276;
                                    statearr_25311_25344[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_25291 === 2) {
                                      var state_25290__$1 = state_25290;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25290__$1, 4, in$);
                                    } else {
                                      if (state_val_25291 === 23) {
                                        var inst_25284 = state_25290[2];
                                        var state_25290__$1 = state_25290;
                                        var statearr_25312_25345 = state_25290__$1;
                                        statearr_25312_25345[2] = inst_25284;
                                        statearr_25312_25345[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_25291 === 19) {
                                          var inst_25271 = state_25290[2];
                                          var state_25290__$1 = state_25290;
                                          var statearr_25313_25346 = state_25290__$1;
                                          statearr_25313_25346[2] = inst_25271;
                                          statearr_25313_25346[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25291 === 11) {
                                            var inst_25242 = state_25290[8];
                                            var inst_25256 = state_25290[7];
                                            var inst_25256__$1 = cljs.core.seq.call(null, inst_25242);
                                            var state_25290__$1 = function() {
                                              var statearr_25314 = state_25290;
                                              statearr_25314[7] = inst_25256__$1;
                                              return statearr_25314;
                                            }();
                                            if (inst_25256__$1) {
                                              var statearr_25315_25347 = state_25290__$1;
                                              statearr_25315_25347[1] = 14;
                                            } else {
                                              var statearr_25316_25348 = state_25290__$1;
                                              statearr_25316_25348[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_25291 === 9) {
                                              var inst_25278 = state_25290[2];
                                              var inst_25279 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_25290__$1 = function() {
                                                var statearr_25317 = state_25290;
                                                statearr_25317[15] = inst_25278;
                                                return statearr_25317;
                                              }();
                                              if (cljs.core.truth_(inst_25279)) {
                                                var statearr_25318_25349 = state_25290__$1;
                                                statearr_25318_25349[1] = 21;
                                              } else {
                                                var statearr_25319_25350 = state_25290__$1;
                                                statearr_25319_25350[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_25291 === 5) {
                                                var inst_25234 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_25290__$1 = state_25290;
                                                var statearr_25320_25351 = state_25290__$1;
                                                statearr_25320_25351[2] = inst_25234;
                                                statearr_25320_25351[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_25291 === 14) {
                                                  var inst_25256 = state_25290[7];
                                                  var inst_25258 = cljs.core.chunked_seq_QMARK_.call(null, inst_25256);
                                                  var state_25290__$1 = state_25290;
                                                  if (inst_25258) {
                                                    var statearr_25321_25352 = state_25290__$1;
                                                    statearr_25321_25352[1] = 17;
                                                  } else {
                                                    var statearr_25322_25353 = state_25290__$1;
                                                    statearr_25322_25353[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_25291 === 16) {
                                                    var inst_25274 = state_25290[2];
                                                    var state_25290__$1 = state_25290;
                                                    var statearr_25323_25354 = state_25290__$1;
                                                    statearr_25323_25354[2] = inst_25274;
                                                    statearr_25323_25354[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_25291 === 10) {
                                                      var inst_25243 = state_25290[9];
                                                      var inst_25245 = state_25290[11];
                                                      var inst_25250 = cljs.core._nth.call(null, inst_25243, inst_25245);
                                                      var state_25290__$1 = state_25290;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25290__$1, 13, out, inst_25250);
                                                    } else {
                                                      if (state_val_25291 === 18) {
                                                        var inst_25256 = state_25290[7];
                                                        var inst_25265 = cljs.core.first.call(null, inst_25256);
                                                        var state_25290__$1 = state_25290;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25290__$1, 20, out, inst_25265);
                                                      } else {
                                                        if (state_val_25291 === 8) {
                                                          var inst_25244 = state_25290[10];
                                                          var inst_25245 = state_25290[11];
                                                          var inst_25247 = inst_25245 < inst_25244;
                                                          var inst_25248 = inst_25247;
                                                          var state_25290__$1 = state_25290;
                                                          if (cljs.core.truth_(inst_25248)) {
                                                            var statearr_25324_25355 = state_25290__$1;
                                                            statearr_25324_25355[1] = 10;
                                                          } else {
                                                            var statearr_25325_25356 = state_25290__$1;
                                                            statearr_25325_25356[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto__);
        return function(switch__6493__auto__, c__6508__auto__) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_25329 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25329[0] = state_machine__6494__auto__;
              statearr_25329[1] = 1;
              return statearr_25329;
            };
            var state_machine__6494__auto____1 = function(state_25290) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_25290);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e25330) {
                    if (e25330 instanceof Object) {
                      var ex__6497__auto__ = e25330;
                      var statearr_25331_25357 = state_25290;
                      statearr_25331_25357[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25290);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e25330;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__25358 = state_25290;
                  state_25290 = G__25358;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_25290) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_25290);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__);
      }();
      var state__6510__auto__ = function() {
        var statearr_25332 = f__6509__auto__.call(null);
        statearr_25332[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_25332;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__));
  return c__6508__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___25455 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___25455, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___25455, out) {
            return function(state_25430) {
              var state_val_25431 = state_25430[1];
              if (state_val_25431 === 7) {
                var inst_25425 = state_25430[2];
                var state_25430__$1 = state_25430;
                var statearr_25432_25456 = state_25430__$1;
                statearr_25432_25456[2] = inst_25425;
                statearr_25432_25456[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25431 === 1) {
                  var inst_25407 = null;
                  var state_25430__$1 = function() {
                    var statearr_25433 = state_25430;
                    statearr_25433[7] = inst_25407;
                    return statearr_25433;
                  }();
                  var statearr_25434_25457 = state_25430__$1;
                  statearr_25434_25457[2] = null;
                  statearr_25434_25457[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25431 === 4) {
                    var inst_25410 = state_25430[8];
                    var inst_25410__$1 = state_25430[2];
                    var inst_25411 = inst_25410__$1 == null;
                    var inst_25412 = cljs.core.not.call(null, inst_25411);
                    var state_25430__$1 = function() {
                      var statearr_25435 = state_25430;
                      statearr_25435[8] = inst_25410__$1;
                      return statearr_25435;
                    }();
                    if (inst_25412) {
                      var statearr_25436_25458 = state_25430__$1;
                      statearr_25436_25458[1] = 5;
                    } else {
                      var statearr_25437_25459 = state_25430__$1;
                      statearr_25437_25459[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25431 === 6) {
                      var state_25430__$1 = state_25430;
                      var statearr_25438_25460 = state_25430__$1;
                      statearr_25438_25460[2] = null;
                      statearr_25438_25460[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25431 === 3) {
                        var inst_25427 = state_25430[2];
                        var inst_25428 = cljs.core.async.close_BANG_.call(null, out);
                        var state_25430__$1 = function() {
                          var statearr_25439 = state_25430;
                          statearr_25439[9] = inst_25427;
                          return statearr_25439;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25430__$1, inst_25428);
                      } else {
                        if (state_val_25431 === 2) {
                          var state_25430__$1 = state_25430;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25430__$1, 4, ch);
                        } else {
                          if (state_val_25431 === 11) {
                            var inst_25410 = state_25430[8];
                            var inst_25419 = state_25430[2];
                            var inst_25407 = inst_25410;
                            var state_25430__$1 = function() {
                              var statearr_25440 = state_25430;
                              statearr_25440[10] = inst_25419;
                              statearr_25440[7] = inst_25407;
                              return statearr_25440;
                            }();
                            var statearr_25441_25461 = state_25430__$1;
                            statearr_25441_25461[2] = null;
                            statearr_25441_25461[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_25431 === 9) {
                              var inst_25410 = state_25430[8];
                              var state_25430__$1 = state_25430;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25430__$1, 11, out, inst_25410);
                            } else {
                              if (state_val_25431 === 5) {
                                var inst_25410 = state_25430[8];
                                var inst_25407 = state_25430[7];
                                var inst_25414 = cljs.core._EQ_.call(null, inst_25410, inst_25407);
                                var state_25430__$1 = state_25430;
                                if (inst_25414) {
                                  var statearr_25443_25462 = state_25430__$1;
                                  statearr_25443_25462[1] = 8;
                                } else {
                                  var statearr_25444_25463 = state_25430__$1;
                                  statearr_25444_25463[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_25431 === 10) {
                                  var inst_25422 = state_25430[2];
                                  var state_25430__$1 = state_25430;
                                  var statearr_25445_25464 = state_25430__$1;
                                  statearr_25445_25464[2] = inst_25422;
                                  statearr_25445_25464[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25431 === 8) {
                                    var inst_25407 = state_25430[7];
                                    var tmp25442 = inst_25407;
                                    var inst_25407__$1 = tmp25442;
                                    var state_25430__$1 = function() {
                                      var statearr_25446 = state_25430;
                                      statearr_25446[7] = inst_25407__$1;
                                      return statearr_25446;
                                    }();
                                    var statearr_25447_25465 = state_25430__$1;
                                    statearr_25447_25465[2] = null;
                                    statearr_25447_25465[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___25455, out);
          return function(switch__6493__auto__, c__6508__auto___25455, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_25451 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_25451[0] = state_machine__6494__auto__;
                statearr_25451[1] = 1;
                return statearr_25451;
              };
              var state_machine__6494__auto____1 = function(state_25430) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_25430);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e25452) {
                      if (e25452 instanceof Object) {
                        var ex__6497__auto__ = e25452;
                        var statearr_25453_25466 = state_25430;
                        statearr_25453_25466[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25430);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e25452;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25467 = state_25430;
                    state_25430 = G__25467;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_25430) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_25430);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___25455, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_25454 = f__6509__auto__.call(null);
          statearr_25454[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___25455;
          return statearr_25454;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___25455, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___25602 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___25602, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___25602, out) {
            return function(state_25572) {
              var state_val_25573 = state_25572[1];
              if (state_val_25573 === 7) {
                var inst_25568 = state_25572[2];
                var state_25572__$1 = state_25572;
                var statearr_25574_25603 = state_25572__$1;
                statearr_25574_25603[2] = inst_25568;
                statearr_25574_25603[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25573 === 1) {
                  var inst_25535 = new Array(n);
                  var inst_25536 = inst_25535;
                  var inst_25537 = 0;
                  var state_25572__$1 = function() {
                    var statearr_25575 = state_25572;
                    statearr_25575[7] = inst_25537;
                    statearr_25575[8] = inst_25536;
                    return statearr_25575;
                  }();
                  var statearr_25576_25604 = state_25572__$1;
                  statearr_25576_25604[2] = null;
                  statearr_25576_25604[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25573 === 4) {
                    var inst_25540 = state_25572[9];
                    var inst_25540__$1 = state_25572[2];
                    var inst_25541 = inst_25540__$1 == null;
                    var inst_25542 = cljs.core.not.call(null, inst_25541);
                    var state_25572__$1 = function() {
                      var statearr_25577 = state_25572;
                      statearr_25577[9] = inst_25540__$1;
                      return statearr_25577;
                    }();
                    if (inst_25542) {
                      var statearr_25578_25605 = state_25572__$1;
                      statearr_25578_25605[1] = 5;
                    } else {
                      var statearr_25579_25606 = state_25572__$1;
                      statearr_25579_25606[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25573 === 15) {
                      var inst_25562 = state_25572[2];
                      var state_25572__$1 = state_25572;
                      var statearr_25580_25607 = state_25572__$1;
                      statearr_25580_25607[2] = inst_25562;
                      statearr_25580_25607[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25573 === 13) {
                        var state_25572__$1 = state_25572;
                        var statearr_25581_25608 = state_25572__$1;
                        statearr_25581_25608[2] = null;
                        statearr_25581_25608[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25573 === 6) {
                          var inst_25537 = state_25572[7];
                          var inst_25558 = inst_25537 > 0;
                          var state_25572__$1 = state_25572;
                          if (cljs.core.truth_(inst_25558)) {
                            var statearr_25582_25609 = state_25572__$1;
                            statearr_25582_25609[1] = 12;
                          } else {
                            var statearr_25583_25610 = state_25572__$1;
                            statearr_25583_25610[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25573 === 3) {
                            var inst_25570 = state_25572[2];
                            var state_25572__$1 = state_25572;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25572__$1, inst_25570);
                          } else {
                            if (state_val_25573 === 12) {
                              var inst_25536 = state_25572[8];
                              var inst_25560 = cljs.core.vec.call(null, inst_25536);
                              var state_25572__$1 = state_25572;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25572__$1, 15, out, inst_25560);
                            } else {
                              if (state_val_25573 === 2) {
                                var state_25572__$1 = state_25572;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25572__$1, 4, ch);
                              } else {
                                if (state_val_25573 === 11) {
                                  var inst_25552 = state_25572[2];
                                  var inst_25553 = new Array(n);
                                  var inst_25536 = inst_25553;
                                  var inst_25537 = 0;
                                  var state_25572__$1 = function() {
                                    var statearr_25584 = state_25572;
                                    statearr_25584[7] = inst_25537;
                                    statearr_25584[8] = inst_25536;
                                    statearr_25584[10] = inst_25552;
                                    return statearr_25584;
                                  }();
                                  var statearr_25585_25611 = state_25572__$1;
                                  statearr_25585_25611[2] = null;
                                  statearr_25585_25611[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25573 === 9) {
                                    var inst_25536 = state_25572[8];
                                    var inst_25550 = cljs.core.vec.call(null, inst_25536);
                                    var state_25572__$1 = state_25572;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25572__$1, 11, out, inst_25550);
                                  } else {
                                    if (state_val_25573 === 5) {
                                      var inst_25537 = state_25572[7];
                                      var inst_25545 = state_25572[11];
                                      var inst_25540 = state_25572[9];
                                      var inst_25536 = state_25572[8];
                                      var inst_25544 = inst_25536[inst_25537] = inst_25540;
                                      var inst_25545__$1 = inst_25537 + 1;
                                      var inst_25546 = inst_25545__$1 < n;
                                      var state_25572__$1 = function() {
                                        var statearr_25586 = state_25572;
                                        statearr_25586[12] = inst_25544;
                                        statearr_25586[11] = inst_25545__$1;
                                        return statearr_25586;
                                      }();
                                      if (cljs.core.truth_(inst_25546)) {
                                        var statearr_25587_25612 = state_25572__$1;
                                        statearr_25587_25612[1] = 8;
                                      } else {
                                        var statearr_25588_25613 = state_25572__$1;
                                        statearr_25588_25613[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_25573 === 14) {
                                        var inst_25565 = state_25572[2];
                                        var inst_25566 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_25572__$1 = function() {
                                          var statearr_25590 = state_25572;
                                          statearr_25590[13] = inst_25565;
                                          return statearr_25590;
                                        }();
                                        var statearr_25591_25614 = state_25572__$1;
                                        statearr_25591_25614[2] = inst_25566;
                                        statearr_25591_25614[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_25573 === 10) {
                                          var inst_25556 = state_25572[2];
                                          var state_25572__$1 = state_25572;
                                          var statearr_25592_25615 = state_25572__$1;
                                          statearr_25592_25615[2] = inst_25556;
                                          statearr_25592_25615[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25573 === 8) {
                                            var inst_25545 = state_25572[11];
                                            var inst_25536 = state_25572[8];
                                            var tmp25589 = inst_25536;
                                            var inst_25536__$1 = tmp25589;
                                            var inst_25537 = inst_25545;
                                            var state_25572__$1 = function() {
                                              var statearr_25593 = state_25572;
                                              statearr_25593[7] = inst_25537;
                                              statearr_25593[8] = inst_25536__$1;
                                              return statearr_25593;
                                            }();
                                            var statearr_25594_25616 = state_25572__$1;
                                            statearr_25594_25616[2] = null;
                                            statearr_25594_25616[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___25602, out);
          return function(switch__6493__auto__, c__6508__auto___25602, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_25598 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_25598[0] = state_machine__6494__auto__;
                statearr_25598[1] = 1;
                return statearr_25598;
              };
              var state_machine__6494__auto____1 = function(state_25572) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_25572);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e25599) {
                      if (e25599 instanceof Object) {
                        var ex__6497__auto__ = e25599;
                        var statearr_25600_25617 = state_25572;
                        statearr_25600_25617[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25572);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e25599;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25618 = state_25572;
                    state_25572 = G__25618;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_25572) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_25572);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___25602, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_25601 = f__6509__auto__.call(null);
          statearr_25601[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___25602;
          return statearr_25601;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___25602, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6508__auto___25761 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___25761, out) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___25761, out) {
            return function(state_25731) {
              var state_val_25732 = state_25731[1];
              if (state_val_25732 === 7) {
                var inst_25727 = state_25731[2];
                var state_25731__$1 = state_25731;
                var statearr_25733_25762 = state_25731__$1;
                statearr_25733_25762[2] = inst_25727;
                statearr_25733_25762[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_25732 === 1) {
                  var inst_25690 = [];
                  var inst_25691 = inst_25690;
                  var inst_25692 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_25731__$1 = function() {
                    var statearr_25734 = state_25731;
                    statearr_25734[7] = inst_25692;
                    statearr_25734[8] = inst_25691;
                    return statearr_25734;
                  }();
                  var statearr_25735_25763 = state_25731__$1;
                  statearr_25735_25763[2] = null;
                  statearr_25735_25763[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_25732 === 4) {
                    var inst_25695 = state_25731[9];
                    var inst_25695__$1 = state_25731[2];
                    var inst_25696 = inst_25695__$1 == null;
                    var inst_25697 = cljs.core.not.call(null, inst_25696);
                    var state_25731__$1 = function() {
                      var statearr_25736 = state_25731;
                      statearr_25736[9] = inst_25695__$1;
                      return statearr_25736;
                    }();
                    if (inst_25697) {
                      var statearr_25737_25764 = state_25731__$1;
                      statearr_25737_25764[1] = 5;
                    } else {
                      var statearr_25738_25765 = state_25731__$1;
                      statearr_25738_25765[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_25732 === 15) {
                      var inst_25721 = state_25731[2];
                      var state_25731__$1 = state_25731;
                      var statearr_25739_25766 = state_25731__$1;
                      statearr_25739_25766[2] = inst_25721;
                      statearr_25739_25766[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_25732 === 13) {
                        var state_25731__$1 = state_25731;
                        var statearr_25740_25767 = state_25731__$1;
                        statearr_25740_25767[2] = null;
                        statearr_25740_25767[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_25732 === 6) {
                          var inst_25691 = state_25731[8];
                          var inst_25716 = inst_25691.length;
                          var inst_25717 = inst_25716 > 0;
                          var state_25731__$1 = state_25731;
                          if (cljs.core.truth_(inst_25717)) {
                            var statearr_25741_25768 = state_25731__$1;
                            statearr_25741_25768[1] = 12;
                          } else {
                            var statearr_25742_25769 = state_25731__$1;
                            statearr_25742_25769[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_25732 === 3) {
                            var inst_25729 = state_25731[2];
                            var state_25731__$1 = state_25731;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25731__$1, inst_25729);
                          } else {
                            if (state_val_25732 === 12) {
                              var inst_25691 = state_25731[8];
                              var inst_25719 = cljs.core.vec.call(null, inst_25691);
                              var state_25731__$1 = state_25731;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25731__$1, 15, out, inst_25719);
                            } else {
                              if (state_val_25732 === 2) {
                                var state_25731__$1 = state_25731;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25731__$1, 4, ch);
                              } else {
                                if (state_val_25732 === 11) {
                                  var inst_25699 = state_25731[10];
                                  var inst_25695 = state_25731[9];
                                  var inst_25709 = state_25731[2];
                                  var inst_25710 = [];
                                  var inst_25711 = inst_25710.push(inst_25695);
                                  var inst_25691 = inst_25710;
                                  var inst_25692 = inst_25699;
                                  var state_25731__$1 = function() {
                                    var statearr_25743 = state_25731;
                                    statearr_25743[7] = inst_25692;
                                    statearr_25743[8] = inst_25691;
                                    statearr_25743[11] = inst_25711;
                                    statearr_25743[12] = inst_25709;
                                    return statearr_25743;
                                  }();
                                  var statearr_25744_25770 = state_25731__$1;
                                  statearr_25744_25770[2] = null;
                                  statearr_25744_25770[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_25732 === 9) {
                                    var inst_25691 = state_25731[8];
                                    var inst_25707 = cljs.core.vec.call(null, inst_25691);
                                    var state_25731__$1 = state_25731;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25731__$1, 11, out, inst_25707);
                                  } else {
                                    if (state_val_25732 === 5) {
                                      var inst_25692 = state_25731[7];
                                      var inst_25699 = state_25731[10];
                                      var inst_25695 = state_25731[9];
                                      var inst_25699__$1 = f.call(null, inst_25695);
                                      var inst_25700 = cljs.core._EQ_.call(null, inst_25699__$1, inst_25692);
                                      var inst_25701 = cljs.core.keyword_identical_QMARK_.call(null, inst_25692, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_25702 = inst_25700 || inst_25701;
                                      var state_25731__$1 = function() {
                                        var statearr_25745 = state_25731;
                                        statearr_25745[10] = inst_25699__$1;
                                        return statearr_25745;
                                      }();
                                      if (cljs.core.truth_(inst_25702)) {
                                        var statearr_25746_25771 = state_25731__$1;
                                        statearr_25746_25771[1] = 8;
                                      } else {
                                        var statearr_25747_25772 = state_25731__$1;
                                        statearr_25747_25772[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_25732 === 14) {
                                        var inst_25724 = state_25731[2];
                                        var inst_25725 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_25731__$1 = function() {
                                          var statearr_25749 = state_25731;
                                          statearr_25749[13] = inst_25724;
                                          return statearr_25749;
                                        }();
                                        var statearr_25750_25773 = state_25731__$1;
                                        statearr_25750_25773[2] = inst_25725;
                                        statearr_25750_25773[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_25732 === 10) {
                                          var inst_25714 = state_25731[2];
                                          var state_25731__$1 = state_25731;
                                          var statearr_25751_25774 = state_25731__$1;
                                          statearr_25751_25774[2] = inst_25714;
                                          statearr_25751_25774[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_25732 === 8) {
                                            var inst_25691 = state_25731[8];
                                            var inst_25699 = state_25731[10];
                                            var inst_25695 = state_25731[9];
                                            var inst_25704 = inst_25691.push(inst_25695);
                                            var tmp25748 = inst_25691;
                                            var inst_25691__$1 = tmp25748;
                                            var inst_25692 = inst_25699;
                                            var state_25731__$1 = function() {
                                              var statearr_25752 = state_25731;
                                              statearr_25752[7] = inst_25692;
                                              statearr_25752[8] = inst_25691__$1;
                                              statearr_25752[14] = inst_25704;
                                              return statearr_25752;
                                            }();
                                            var statearr_25753_25775 = state_25731__$1;
                                            statearr_25753_25775[2] = null;
                                            statearr_25753_25775[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6508__auto___25761, out);
          return function(switch__6493__auto__, c__6508__auto___25761, out) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_25757 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_25757[0] = state_machine__6494__auto__;
                statearr_25757[1] = 1;
                return statearr_25757;
              };
              var state_machine__6494__auto____1 = function(state_25731) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_25731);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e25758) {
                      if (e25758 instanceof Object) {
                        var ex__6497__auto__ = e25758;
                        var statearr_25759_25776 = state_25731;
                        statearr_25759_25776[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25731);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e25758;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__25777 = state_25731;
                    state_25731 = G__25777;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_25731) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_25731);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___25761, out);
        }();
        var state__6510__auto__ = function() {
          var statearr_25760 = f__6509__auto__.call(null);
          statearr_25760[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___25761;
          return statearr_25760;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___25761, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("cljs_http.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs_http.util");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
cljs_http.core.pending_requests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cljs_http.core.abort_BANG_ = function abort_BANG_(channel) {
  var temp__4126__auto__ = cljs.core.deref.call(null, cljs_http.core.pending_requests).call(null, channel);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var xhr = temp__4126__auto__;
    cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
    cljs.core.async.close_BANG_.call(null, channel);
    return xhr.abort();
  } else {
    return null;
  }
};
cljs_http.core.request = function request(p__28038) {
  var map__28041 = p__28038;
  var map__28041__$1 = cljs.core.seq_QMARK_.call(null, map__28041) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28041) : map__28041;
  var request__$1 = map__28041__$1;
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__28041__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var body = cljs.core.get.call(null, map__28041__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var headers = cljs.core.get.call(null, map__28041__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var request_method = cljs.core.get.call(null, map__28041__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  var channel = cljs.core.async.chan.call(null);
  var request_url = cljs_http.util.build_url.call(null, request__$1);
  var method = cljs.core.name.call(null, function() {
    var or__3628__auto__ = request_method;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return new cljs.core.Keyword(null, "get", "get", 1683182755);
    }
  }());
  var timeout = function() {
    var or__3628__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(request__$1);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return 0;
    }
  }();
  var headers__$1 = cljs_http.util.build_headers.call(null, headers);
  var send_credentials = with_credentials_QMARK_ == null ? true : with_credentials_QMARK_;
  var xhr = function() {
    var G__28042 = new goog.net.XhrIo;
    G__28042.setTimeoutInterval(timeout);
    G__28042.setWithCredentials(send_credentials);
    return G__28042;
  }();
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, xhr);
  xhr.listen(goog.net.EventType.COMPLETE, function(channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__28041, map__28041__$1, request__$1, with_credentials_QMARK_, body, headers, request_method) {
    return function(p1__28037_SHARP_) {
      var target = p1__28037_SHARP_.target;
      cljs.core.async.put_BANG_.call(null, channel, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "status", "status", -1997798413), target.getStatus(), new cljs.core.Keyword(null, "success", "success", 1890645906), target.isSuccess(), new cljs.core.Keyword(null, "body", "body", -2049205669), target.getResponseText(), new cljs.core.Keyword(null, "headers", "headers", -835030129), cljs_http.util.parse_headers.call(null, target.getAllResponseHeaders()), new cljs.core.Keyword(null, 
      "trace-redirects", "trace-redirects", -1149427907), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [request_url, target.getLastUri()], null)], null));
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, request_url, method, timeout, headers__$1, send_credentials, xhr, map__28041, map__28041__$1, request__$1, with_credentials_QMARK_, body, headers, request_method));
  xhr.send(request_url, method, body, headers__$1);
  return channel;
};
goog.provide("cljs_http.client");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("cljs_http.core");
goog.require("no.en.core");
goog.require("cljs_http.util");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs_http.client.if_pos = function if_pos(v) {
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = v;
    if (cljs.core.truth_(and__3616__auto__)) {
      return v > 0;
    } else {
      return and__3616__auto__;
    }
  }())) {
    return v;
  } else {
    return null;
  }
};
cljs_http.client.parse_query_params = function parse_query_params(s) {
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, s))) {
    return cljs.core.reduce.call(null, function(p1__27665_SHARP_, p2__27664_SHARP_) {
      var vec__27667 = clojure.string.split.call(null, p2__27664_SHARP_, /=/);
      var k = cljs.core.nth.call(null, vec__27667, 0, null);
      var v = cljs.core.nth.call(null, vec__27667, 1, null);
      return cljs.core.assoc.call(null, p1__27665_SHARP_, cljs.core.keyword.call(null, no.en.core.url_decode.call(null, k)), no.en.core.url_decode.call(null, v));
    }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, [cljs.core.str(s)].join(""), /&/));
  } else {
    return null;
  }
};
cljs_http.client.parse_url = function parse_url(url) {
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, url))) {
    var uri = goog.Uri.parse(url);
    var query_data = uri.getQueryData();
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), cljs.core.keyword.call(null, uri.getScheme()), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), uri.getDomain(), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), cljs_http.client.if_pos.call(null, uri.getPort()), new cljs.core.Keyword(null, "uri", "uri", -774711847), uri.getPath(), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), 
    cljs.core.not.call(null, query_data.isEmpty()) ? [cljs.core.str(query_data)].join("") : null, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), cljs.core.not.call(null, query_data.isEmpty()) ? cljs_http.client.parse_query_params.call(null, [cljs.core.str(query_data)].join("")) : null], null);
  } else {
    return null;
  }
};
cljs_http.client.unexceptional_status_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [205, null, 206, null, 300, null, 204, null, 307, null, 303, null, 301, null, 201, null, 302, null, 202, null, 200, null, 203, null, 207, null], null), null);
cljs_http.client.encode_val = function encode_val(k, v) {
  return[cljs.core.str(no.en.core.url_encode.call(null, cljs.core.name.call(null, k))), cljs.core.str("\x3d"), cljs.core.str(no.en.core.url_encode.call(null, [cljs.core.str(v)].join("")))].join("");
};
cljs_http.client.encode_vals = function encode_vals(k, vs) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__27668_SHARP_) {
    return cljs_http.client.encode_val.call(null, k, p1__27668_SHARP_);
  }, vs));
};
cljs_http.client.encode_param = function encode_param(p__27669) {
  var vec__27671 = p__27669;
  var k = cljs.core.nth.call(null, vec__27671, 0, null);
  var v = cljs.core.nth.call(null, vec__27671, 1, null);
  if (cljs.core.coll_QMARK_.call(null, v)) {
    return cljs_http.client.encode_vals.call(null, k, v);
  } else {
    return cljs_http.client.encode_val.call(null, k, v);
  }
};
cljs_http.client.generate_query_string = function generate_query_string(params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, cljs_http.client.encode_param, params));
};
cljs_http.client.regex_char_esc_smap = function() {
  var esc_chars = "()*\x26^%$#!+";
  return cljs.core.zipmap.call(null, esc_chars, cljs.core.map.call(null, function(esc_chars) {
    return function(p1__27672_SHARP_) {
      return[cljs.core.str("\\"), cljs.core.str(p1__27672_SHARP_)].join("");
    };
  }(esc_chars), esc_chars));
}();
cljs_http.client.escape_special = function escape_special(string) {
  return cljs.core.reduce.call(null, cljs.core.str, cljs.core.replace.call(null, cljs_http.client.regex_char_esc_smap, string));
};
cljs_http.client.decode_body = function decode_body(response, decode_fn, content_type, request_method) {
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "head", "head", -771383919), request_method);
    if (and__3616__auto__) {
      return cljs.core.re_find.call(null, cljs.core.re_pattern.call(null, [cljs.core.str("(?i)"), cljs.core.str(cljs_http.client.escape_special.call(null, content_type))].join("")), [cljs.core.str(cljs.core.get.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(response), "content-type", ""))].join(""));
    } else {
      return and__3616__auto__;
    }
  }())) {
    return cljs.core.update_in.call(null, response, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "body", "body", -2049205669)], null), decode_fn);
  } else {
    return response;
  }
};
cljs_http.client.wrap_edn_params = function wrap_edn_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.pr_str.call(null, params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/edn"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_edn_response = function wrap_edn_response(client) {
  return function(request) {
    var channel = cljs.core.async.chan.call(null);
    var c__6508__auto___27709 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___27709, channel) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___27709, channel) {
            return function(state_27699) {
              var state_val_27700 = state_27699[1];
              if (state_val_27700 === 2) {
                var inst_27693 = state_27699[2];
                var inst_27694 = (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request);
                var inst_27695 = cljs_http.client.decode_body.call(null, inst_27693, cljs.reader.read_string, "application/edn", inst_27694);
                var inst_27696 = cljs.core.async.put_BANG_.call(null, channel, inst_27695);
                var inst_27697 = cljs.core.async.close_BANG_.call(null, channel);
                var state_27699__$1 = function() {
                  var statearr_27701 = state_27699;
                  statearr_27701[7] = inst_27696;
                  return statearr_27701;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27699__$1, inst_27697);
              } else {
                if (state_val_27700 === 1) {
                  var inst_27691 = client.call(null, request);
                  var state_27699__$1 = state_27699;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27699__$1, 2, inst_27691);
                } else {
                  return null;
                }
              }
            };
          }(c__6508__auto___27709, channel);
          return function(switch__6493__auto__, c__6508__auto___27709, channel) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_27705 = [null, null, null, null, null, null, null, null];
                statearr_27705[0] = state_machine__6494__auto__;
                statearr_27705[1] = 1;
                return statearr_27705;
              };
              var state_machine__6494__auto____1 = function(state_27699) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_27699);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e27706) {
                      if (e27706 instanceof Object) {
                        var ex__6497__auto__ = e27706;
                        var statearr_27707_27710 = state_27699;
                        statearr_27707_27710[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27699);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e27706;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__27711 = state_27699;
                    state_27699 = G__27711;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_27699) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_27699);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___27709, channel);
        }();
        var state__6510__auto__ = function() {
          var statearr_27708 = f__6509__auto__.call(null);
          statearr_27708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___27709;
          return statearr_27708;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___27709, channel));
    return channel;
  };
};
cljs_http.client.wrap_accept = function() {
  var wrap_accept__delegate = function(client, p__27712) {
    var vec__27714 = p__27712;
    var accept = cljs.core.nth.call(null, vec__27714, 0, null);
    return function(vec__27714, accept) {
      return function(request) {
        var temp__4124__auto__ = function() {
          var or__3628__auto__ = (new cljs.core.Keyword(null, "accept", "accept", 1874130431)).cljs$core$IFn$_invoke$arity$1(request);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return accept;
          }
        }();
        if (cljs.core.truth_(temp__4124__auto__)) {
          var accept__$1 = temp__4124__auto__;
          return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "accept"], null), accept__$1));
        } else {
          return client.call(null, request);
        }
      };
    }(vec__27714, accept);
  };
  var wrap_accept = function(client, var_args) {
    var p__27712 = null;
    if (arguments.length > 1) {
      p__27712 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wrap_accept__delegate.call(this, client, p__27712);
  };
  wrap_accept.cljs$lang$maxFixedArity = 1;
  wrap_accept.cljs$lang$applyTo = function(arglist__27715) {
    var client = cljs.core.first(arglist__27715);
    var p__27712 = cljs.core.rest(arglist__27715);
    return wrap_accept__delegate(client, p__27712);
  };
  wrap_accept.cljs$core$IFn$_invoke$arity$variadic = wrap_accept__delegate;
  return wrap_accept;
}();
cljs_http.client.wrap_content_type = function() {
  var wrap_content_type__delegate = function(client, p__27716) {
    var vec__27718 = p__27716;
    var content_type = cljs.core.nth.call(null, vec__27718, 0, null);
    return function(vec__27718, content_type) {
      return function(request) {
        var temp__4124__auto__ = function() {
          var or__3628__auto__ = (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(request);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return content_type;
          }
        }();
        if (cljs.core.truth_(temp__4124__auto__)) {
          var content_type__$1 = temp__4124__auto__;
          return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), content_type__$1));
        } else {
          return client.call(null, request);
        }
      };
    }(vec__27718, content_type);
  };
  var wrap_content_type = function(client, var_args) {
    var p__27716 = null;
    if (arguments.length > 1) {
      p__27716 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wrap_content_type__delegate.call(this, client, p__27716);
  };
  wrap_content_type.cljs$lang$maxFixedArity = 1;
  wrap_content_type.cljs$lang$applyTo = function(arglist__27719) {
    var client = cljs.core.first(arglist__27719);
    var p__27716 = cljs.core.rest(arglist__27719);
    return wrap_content_type__delegate(client, p__27716);
  };
  wrap_content_type.cljs$core$IFn$_invoke$arity$variadic = wrap_content_type__delegate;
  return wrap_content_type;
}();
cljs_http.client.default_transit_opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "decoding", "decoding", -568180903), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 
1050289140), cljs.core.PersistentArrayMap.EMPTY], null);
cljs_http.client.wrap_transit_params = function wrap_transit_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      var map__27721 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
      var map__27721__$1 = cljs.core.seq_QMARK_.call(null, map__27721) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27721) : map__27721;
      var encoding_opts = cljs.core.get.call(null, map__27721__$1, new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631));
      var encoding = cljs.core.get.call(null, map__27721__$1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272));
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.transit_encode.call(null, params, encoding, encoding_opts)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), 
      "application/transit+json"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_transit_response = function wrap_transit_response(client) {
  return function(request) {
    var channel = cljs.core.async.chan.call(null);
    var map__27743 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
    var map__27743__$1 = cljs.core.seq_QMARK_.call(null, map__27743) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27743) : map__27743;
    var decoding_opts = cljs.core.get.call(null, map__27743__$1, new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 1050289140));
    var decoding = cljs.core.get.call(null, map__27743__$1, new cljs.core.Keyword(null, "decoding", "decoding", -568180903));
    var c__6508__auto___27763 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding) {
            return function(state_27753) {
              var state_val_27754 = state_27753[1];
              if (state_val_27754 === 2) {
                var inst_27746 = state_27753[2];
                var inst_27747 = function() {
                  var response = inst_27746;
                  return function(response, inst_27746, state_val_27754, c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding) {
                    return function(p1__27722_SHARP_) {
                      return cljs_http.util.transit_decode.call(null, p1__27722_SHARP_, decoding, decoding_opts);
                    };
                  }(response, inst_27746, state_val_27754, c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding);
                }();
                var inst_27748 = (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request);
                var inst_27749 = cljs_http.client.decode_body.call(null, inst_27746, inst_27747, "application/transit+json", inst_27748);
                var inst_27750 = cljs.core.async.put_BANG_.call(null, channel, inst_27749);
                var inst_27751 = cljs.core.async.close_BANG_.call(null, channel);
                var state_27753__$1 = function() {
                  var statearr_27755 = state_27753;
                  statearr_27755[7] = inst_27750;
                  return statearr_27755;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27753__$1, inst_27751);
              } else {
                if (state_val_27754 === 1) {
                  var inst_27744 = client.call(null, request);
                  var state_27753__$1 = state_27753;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27753__$1, 2, inst_27744);
                } else {
                  return null;
                }
              }
            };
          }(c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding);
          return function(switch__6493__auto__, c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_27759 = [null, null, null, null, null, null, null, null];
                statearr_27759[0] = state_machine__6494__auto__;
                statearr_27759[1] = 1;
                return statearr_27759;
              };
              var state_machine__6494__auto____1 = function(state_27753) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_27753);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e27760) {
                      if (e27760 instanceof Object) {
                        var ex__6497__auto__ = e27760;
                        var statearr_27761_27764 = state_27753;
                        statearr_27761_27764[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27753);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e27760;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__27765 = state_27753;
                    state_27753 = G__27765;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_27753) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_27753);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding);
        }();
        var state__6510__auto__ = function() {
          var statearr_27762 = f__6509__auto__.call(null);
          statearr_27762[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___27763;
          return statearr_27762;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___27763, channel, map__27743, map__27743__$1, decoding_opts, decoding));
    return channel;
  };
};
cljs_http.client.wrap_json_params = function wrap_json_params(client) {
  return function(request) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var params = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.json_encode.call(null, params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/json"));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_json_response = function wrap_json_response(client) {
  return function(request) {
    var channel = cljs.core.async.chan.call(null);
    var c__6508__auto___27802 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___27802, channel) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___27802, channel) {
            return function(state_27792) {
              var state_val_27793 = state_27792[1];
              if (state_val_27793 === 2) {
                var inst_27786 = state_27792[2];
                var inst_27787 = (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request);
                var inst_27788 = cljs_http.client.decode_body.call(null, inst_27786, cljs_http.util.json_decode, "application/json", inst_27787);
                var inst_27789 = cljs.core.async.put_BANG_.call(null, channel, inst_27788);
                var inst_27790 = cljs.core.async.close_BANG_.call(null, channel);
                var state_27792__$1 = function() {
                  var statearr_27794 = state_27792;
                  statearr_27794[7] = inst_27789;
                  return statearr_27794;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27792__$1, inst_27790);
              } else {
                if (state_val_27793 === 1) {
                  var inst_27784 = client.call(null, request);
                  var state_27792__$1 = state_27792;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27792__$1, 2, inst_27784);
                } else {
                  return null;
                }
              }
            };
          }(c__6508__auto___27802, channel);
          return function(switch__6493__auto__, c__6508__auto___27802, channel) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_27798 = [null, null, null, null, null, null, null, null];
                statearr_27798[0] = state_machine__6494__auto__;
                statearr_27798[1] = 1;
                return statearr_27798;
              };
              var state_machine__6494__auto____1 = function(state_27792) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_27792);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e27799) {
                      if (e27799 instanceof Object) {
                        var ex__6497__auto__ = e27799;
                        var statearr_27800_27803 = state_27792;
                        statearr_27800_27803[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27792);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e27799;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__27804 = state_27792;
                    state_27792 = G__27804;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_27792) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_27792);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___27802, channel);
        }();
        var state__6510__auto__ = function() {
          var statearr_27801 = f__6509__auto__.call(null);
          statearr_27801[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___27802;
          return statearr_27801;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___27802, channel));
    return channel;
  };
};
cljs_http.client.wrap_query_params = function wrap_query_params(client) {
  return function(p__27807) {
    var map__27808 = p__27807;
    var map__27808__$1 = cljs.core.seq_QMARK_.call(null, map__27808) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27808) : map__27808;
    var req = map__27808__$1;
    var query_params = cljs.core.get.call(null, map__27808__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    if (cljs.core.truth_(query_params)) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "query-params", "query-params", 900640534)), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), cljs_http.client.generate_query_string.call(null, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_form_params = function wrap_form_params(client) {
  return function(p__27811) {
    var map__27812 = p__27811;
    var map__27812__$1 = cljs.core.seq_QMARK_.call(null, map__27812) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27812) : map__27812;
    var request = map__27812__$1;
    var request_method = cljs.core.get.call(null, map__27812__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    var form_params = cljs.core.get.call(null, map__27812__$1, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467));
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = form_params;
      if (cljs.core.truth_(and__3616__auto__)) {
        return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__3616__auto__;
      }
    }())) {
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_query_string.call(null, form_params)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), "application/x-www-form-urlencoded"))
      ;
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_android_cors_bugfix = function wrap_android_cors_bugfix(client) {
  return function(request) {
    return client.call(null, cljs.core.truth_(cljs_http.util.android_QMARK_.call(null)) ? cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "android", "android", -2084094573)], null), Math.random.call(null)) : request);
  };
};
cljs_http.client.wrap_method = function wrap_method(client) {
  return function(req) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "method", "method", 55703592)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var m = temp__4124__auto__;
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "method", "method", 55703592)), new cljs.core.Keyword(null, "request-method", "request-method", 1764796830), m));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_server_name = function wrap_server_name(client, server_name) {
  return function(p1__27813_SHARP_) {
    return client.call(null, cljs.core.assoc.call(null, p1__27813_SHARP_, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), server_name));
  };
};
cljs_http.client.wrap_url = function wrap_url(client) {
  return function(p__27817) {
    var map__27818 = p__27817;
    var map__27818__$1 = cljs.core.seq_QMARK_.call(null, map__27818) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27818) : map__27818;
    var req = map__27818__$1;
    var query_params = cljs.core.get.call(null, map__27818__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var temp__4124__auto__ = cljs_http.client.parse_url.call(null, (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(req));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var spec = temp__4124__auto__;
      return client.call(null, cljs.core.update_in.call(null, cljs.core.dissoc.call(null, cljs.core.merge.call(null, req, spec), new cljs.core.Keyword(null, "url", "url", 276297046)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534)], null), function(spec, temp__4124__auto__, map__27818, map__27818__$1, req, query_params) {
        return function(p1__27814_SHARP_) {
          return cljs.core.merge.call(null, p1__27814_SHARP_, query_params);
        };
      }(spec, temp__4124__auto__, map__27818, map__27818__$1, req, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_basic_auth = function() {
  var wrap_basic_auth__delegate = function(client, p__27819) {
    var vec__27821 = p__27819;
    var credentials = cljs.core.nth.call(null, vec__27821, 0, null);
    return function(vec__27821, credentials) {
      return function(req) {
        var credentials__$1 = function() {
          var or__3628__auto__ = (new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)).cljs$core$IFn$_invoke$arity$1(req);
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return credentials;
          }
        }();
        if (!cljs.core.empty_QMARK_.call(null, credentials__$1)) {
          return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), cljs_http.util.basic_auth.call(null, credentials__$1)));
        } else {
          return client.call(null, req);
        }
      };
    }(vec__27821, credentials);
  };
  var wrap_basic_auth = function(client, var_args) {
    var p__27819 = null;
    if (arguments.length > 1) {
      p__27819 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wrap_basic_auth__delegate.call(this, client, p__27819);
  };
  wrap_basic_auth.cljs$lang$maxFixedArity = 1;
  wrap_basic_auth.cljs$lang$applyTo = function(arglist__27822) {
    var client = cljs.core.first(arglist__27822);
    var p__27819 = cljs.core.rest(arglist__27822);
    return wrap_basic_auth__delegate(client, p__27819);
  };
  wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic = wrap_basic_auth__delegate;
  return wrap_basic_auth;
}();
cljs_http.client.wrap_oauth = function wrap_oauth(client) {
  return function(req) {
    var temp__4124__auto__ = (new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var oauth_token = temp__4124__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), [cljs.core.str("Bearer "), cljs.core.str(oauth_token)].join("")));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_request = function wrap_request(request) {
  return cljs_http.client.wrap_url.call(null, cljs_http.client.wrap_method.call(null, cljs_http.client.wrap_android_cors_bugfix.call(null, cljs_http.client.wrap_oauth.call(null, cljs_http.client.wrap_basic_auth.call(null, cljs_http.client.wrap_query_params.call(null, cljs_http.client.wrap_json_response.call(null, cljs_http.client.wrap_json_params.call(null, cljs_http.client.wrap_transit_response.call(null, cljs_http.client.wrap_transit_params.call(null, cljs_http.client.wrap_edn_response.call(null, 
  cljs_http.client.wrap_edn_params.call(null, cljs_http.client.wrap_content_type.call(null, cljs_http.client.wrap_form_params.call(null, cljs_http.client.wrap_accept.call(null, request)))))))))))))));
};
cljs_http.client.request = cljs_http.client.wrap_request.call(null, cljs_http.core.request);
cljs_http.client.delete$ = function() {
  var delete$__delegate = function(url, p__27823) {
    var vec__27825 = p__27823;
    var req = cljs.core.nth.call(null, vec__27825, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var delete$ = function(url, var_args) {
    var p__27823 = null;
    if (arguments.length > 1) {
      p__27823 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return delete$__delegate.call(this, url, p__27823);
  };
  delete$.cljs$lang$maxFixedArity = 1;
  delete$.cljs$lang$applyTo = function(arglist__27826) {
    var url = cljs.core.first(arglist__27826);
    var p__27823 = cljs.core.rest(arglist__27826);
    return delete$__delegate(url, p__27823);
  };
  delete$.cljs$core$IFn$_invoke$arity$variadic = delete$__delegate;
  return delete$;
}();
cljs_http.client.get = function() {
  var get__delegate = function(url, p__27827) {
    var vec__27829 = p__27827;
    var req = cljs.core.nth.call(null, vec__27829, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var get = function(url, var_args) {
    var p__27827 = null;
    if (arguments.length > 1) {
      p__27827 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return get__delegate.call(this, url, p__27827);
  };
  get.cljs$lang$maxFixedArity = 1;
  get.cljs$lang$applyTo = function(arglist__27830) {
    var url = cljs.core.first(arglist__27830);
    var p__27827 = cljs.core.rest(arglist__27830);
    return get__delegate(url, p__27827);
  };
  get.cljs$core$IFn$_invoke$arity$variadic = get__delegate;
  return get;
}();
cljs_http.client.head = function() {
  var head__delegate = function(url, p__27831) {
    var vec__27833 = p__27831;
    var req = cljs.core.nth.call(null, vec__27833, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var head = function(url, var_args) {
    var p__27831 = null;
    if (arguments.length > 1) {
      p__27831 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, url, p__27831);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__27834) {
    var url = cljs.core.first(arglist__27834);
    var p__27831 = cljs.core.rest(arglist__27834);
    return head__delegate(url, p__27831);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
cljs_http.client.move = function() {
  var move__delegate = function(url, p__27835) {
    var vec__27837 = p__27835;
    var req = cljs.core.nth.call(null, vec__27837, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "move", "move", -2110884309), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var move = function(url, var_args) {
    var p__27835 = null;
    if (arguments.length > 1) {
      p__27835 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return move__delegate.call(this, url, p__27835);
  };
  move.cljs$lang$maxFixedArity = 1;
  move.cljs$lang$applyTo = function(arglist__27838) {
    var url = cljs.core.first(arglist__27838);
    var p__27835 = cljs.core.rest(arglist__27838);
    return move__delegate(url, p__27835);
  };
  move.cljs$core$IFn$_invoke$arity$variadic = move__delegate;
  return move;
}();
cljs_http.client.options = function() {
  var options__delegate = function(url, p__27839) {
    var vec__27841 = p__27839;
    var req = cljs.core.nth.call(null, vec__27841, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var options = function(url, var_args) {
    var p__27839 = null;
    if (arguments.length > 1) {
      p__27839 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return options__delegate.call(this, url, p__27839);
  };
  options.cljs$lang$maxFixedArity = 1;
  options.cljs$lang$applyTo = function(arglist__27842) {
    var url = cljs.core.first(arglist__27842);
    var p__27839 = cljs.core.rest(arglist__27842);
    return options__delegate(url, p__27839);
  };
  options.cljs$core$IFn$_invoke$arity$variadic = options__delegate;
  return options;
}();
cljs_http.client.patch = function() {
  var patch__delegate = function(url, p__27843) {
    var vec__27845 = p__27843;
    var req = cljs.core.nth.call(null, vec__27845, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "patch", "patch", 380775109), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var patch = function(url, var_args) {
    var p__27843 = null;
    if (arguments.length > 1) {
      p__27843 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return patch__delegate.call(this, url, p__27843);
  };
  patch.cljs$lang$maxFixedArity = 1;
  patch.cljs$lang$applyTo = function(arglist__27846) {
    var url = cljs.core.first(arglist__27846);
    var p__27843 = cljs.core.rest(arglist__27846);
    return patch__delegate(url, p__27843);
  };
  patch.cljs$core$IFn$_invoke$arity$variadic = patch__delegate;
  return patch;
}();
cljs_http.client.post = function() {
  var post__delegate = function(url, p__27847) {
    var vec__27849 = p__27847;
    var req = cljs.core.nth.call(null, vec__27849, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var post = function(url, var_args) {
    var p__27847 = null;
    if (arguments.length > 1) {
      p__27847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return post__delegate.call(this, url, p__27847);
  };
  post.cljs$lang$maxFixedArity = 1;
  post.cljs$lang$applyTo = function(arglist__27850) {
    var url = cljs.core.first(arglist__27850);
    var p__27847 = cljs.core.rest(arglist__27850);
    return post__delegate(url, p__27847);
  };
  post.cljs$core$IFn$_invoke$arity$variadic = post__delegate;
  return post;
}();
cljs_http.client.put = function() {
  var put__delegate = function(url, p__27851) {
    var vec__27853 = p__27851;
    var req = cljs.core.nth.call(null, vec__27853, 0, null);
    return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "put", "put", 1299772570), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
  };
  var put = function(url, var_args) {
    var p__27851 = null;
    if (arguments.length > 1) {
      p__27851 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return put__delegate.call(this, url, p__27851);
  };
  put.cljs$lang$maxFixedArity = 1;
  put.cljs$lang$applyTo = function(arglist__27854) {
    var url = cljs.core.first(arglist__27854);
    var p__27851 = cljs.core.rest(arglist__27854);
    return put__delegate(url, p__27851);
  };
  put.cljs$core$IFn$_invoke$arity$variadic = put__delegate;
  return put;
}();
goog.provide("hickory.zip");
goog.require("cljs.core");
goog.require("clojure.zip");
hickory.zip.hickory_zip = function hickory_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, new cljs.core.Keyword(null, "content", "content", 15833224)), function(node, children) {
    return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "content", "content", 15833224), function() {
      var and__3616__auto__ = children;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core.apply.call(null, cljs.core.vector, children);
      } else {
        return and__3616__auto__;
      }
    }());
  }, root);
};
hickory.zip.children = function children(node) {
  if (cljs.core.vector_QMARK_.call(null, node)) {
    if (cljs.core.map_QMARK_.call(null, cljs.core.second.call(null, node))) {
      return cljs.core.seq.call(null, cljs.core.subvec.call(null, node, 2));
    } else {
      return cljs.core.seq.call(null, cljs.core.subvec.call(null, node, 1));
    }
  } else {
    return node;
  }
};
hickory.zip.make = function make(node, children) {
  if (cljs.core.vector_QMARK_.call(null, node)) {
    if (cljs.core.map_QMARK_.call(null, cljs.core.second.call(null, node))) {
      return cljs.core.into.call(null, cljs.core.subvec.call(null, node, 0, 2), children);
    } else {
      return cljs.core.apply.call(null, cljs.core.vector, cljs.core.first.call(null, node), children);
    }
  } else {
    return children;
  }
};
hickory.zip.hiccup_zip = function hiccup_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.sequential_QMARK_, hickory.zip.children, hickory.zip.make, root);
};
goog.provide("hickory.select");
goog.require("cljs.core");
goog.require("hickory.zip");
goog.require("clojure.string");
goog.require("clojure.zip");
hickory.select.until = function until(f, val, pred) {
  while (true) {
    var next_val = f.call(null, val);
    if (cljs.core.truth_(pred.call(null, next_val))) {
      return next_val;
    } else {
      var G__28171 = f;
      var G__28172 = next_val;
      var G__28173 = pred;
      f = G__28171;
      val = G__28172;
      pred = G__28173;
      continue;
    }
    break;
  }
};
hickory.select.count_until = function count_until(f, val, pred) {
  var next_val = val;
  var cnt = 0;
  while (true) {
    if (cljs.core.truth_(pred.call(null, next_val))) {
      return cnt;
    } else {
      var G__28174 = f.call(null, next_val);
      var G__28175 = cnt + 1;
      next_val = G__28174;
      cnt = G__28175;
      continue;
    }
    break;
  }
};
hickory.select.next_pred = function next_pred(hzip_loc, pred) {
  return hickory.select.until.call(null, clojure.zip.next, hzip_loc, function(p1__28176_SHARP_) {
    var or__3628__auto__ = clojure.zip.end_QMARK_.call(null, p1__28176_SHARP_);
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return pred.call(null, p1__28176_SHARP_);
    }
  });
};
hickory.select.prev_pred = function prev_pred(hzip_loc, pred) {
  return hickory.select.until.call(null, clojure.zip.prev, hzip_loc, function(p1__28177_SHARP_) {
    var or__3628__auto__ = p1__28177_SHARP_ == null;
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return pred.call(null, p1__28177_SHARP_);
    }
  });
};
hickory.select.left_pred = function left_pred(hzip_loc, pred) {
  return hickory.select.until.call(null, clojure.zip.left, hzip_loc, function(p1__28178_SHARP_) {
    var or__3628__auto__ = p1__28178_SHARP_ == null;
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return pred.call(null, p1__28178_SHARP_);
    }
  });
};
hickory.select.right_pred = function right_pred(hzip_loc, pred) {
  return hickory.select.until.call(null, clojure.zip.right, hzip_loc, function(p1__28179_SHARP_) {
    var or__3628__auto__ = p1__28179_SHARP_ == null;
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return pred.call(null, p1__28179_SHARP_);
    }
  });
};
hickory.select.next_of_node_type = function next_of_node_type(hzip_loc, node_type) {
  return hickory.select.next_pred.call(null, hzip_loc, function(p1__28180_SHARP_) {
    return cljs.core._EQ_.call(null, node_type, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, p1__28180_SHARP_)));
  });
};
hickory.select.prev_of_node_type = function prev_of_node_type(hzip_loc, node_type) {
  return hickory.select.prev_pred.call(null, hzip_loc, function(p1__28181_SHARP_) {
    return cljs.core._EQ_.call(null, node_type, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, p1__28181_SHARP_)));
  });
};
hickory.select.left_of_node_type = function left_of_node_type(hzip_loc, node_type) {
  return hickory.select.left_pred.call(null, hzip_loc, function(p1__28182_SHARP_) {
    return cljs.core._EQ_.call(null, node_type, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, p1__28182_SHARP_)));
  });
};
hickory.select.right_of_node_type = function right_of_node_type(hzip_loc, node_type) {
  return hickory.select.right_pred.call(null, hzip_loc, function(p1__28183_SHARP_) {
    return cljs.core._EQ_.call(null, node_type, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, p1__28183_SHARP_)));
  });
};
hickory.select.after_subtree = function after_subtree(zip_loc) {
  if (clojure.zip.end_QMARK_.call(null, zip_loc)) {
    return zip_loc;
  } else {
    var or__3628__auto__ = clojure.zip.right.call(null, zip_loc);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      var curr_loc = zip_loc;
      while (true) {
        if (cljs.core.truth_(clojure.zip.up.call(null, curr_loc))) {
          var or__3628__auto____$1 = clojure.zip.right.call(null, clojure.zip.up.call(null, curr_loc));
          if (cljs.core.truth_(or__3628__auto____$1)) {
            return or__3628__auto____$1;
          } else {
            var G__28184 = clojure.zip.up.call(null, curr_loc);
            curr_loc = G__28184;
            continue;
          }
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.node.call(null, curr_loc), new cljs.core.Keyword(null, "end", "end", -268185958)], null);
        }
        break;
      }
    }
  }
};
hickory.select.select_next_loc = function() {
  var select_next_loc = null;
  var select_next_loc__2 = function(selector_fn, hzip_loc) {
    return select_next_loc.call(null, selector_fn, hzip_loc, clojure.zip.next);
  };
  var select_next_loc__3 = function(selector_fn, hzip_loc, next_fn) {
    return select_next_loc.call(null, selector_fn, hzip_loc, next_fn, clojure.zip.end_QMARK_);
  };
  var select_next_loc__4 = function(selector_fn, hzip_loc, next_fn, end_QMARK__fn) {
    var loc = hzip_loc;
    while (true) {
      if (cljs.core.truth_(end_QMARK__fn.call(null, loc))) {
        return null;
      } else {
        if (cljs.core.truth_(selector_fn.call(null, loc))) {
          return loc;
        } else {
          var G__28185 = next_fn.call(null, loc);
          loc = G__28185;
          continue;
        }
      }
      break;
    }
  };
  select_next_loc = function(selector_fn, hzip_loc, next_fn, end_QMARK__fn) {
    switch(arguments.length) {
      case 2:
        return select_next_loc__2.call(this, selector_fn, hzip_loc);
      case 3:
        return select_next_loc__3.call(this, selector_fn, hzip_loc, next_fn);
      case 4:
        return select_next_loc__4.call(this, selector_fn, hzip_loc, next_fn, end_QMARK__fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_next_loc.cljs$core$IFn$_invoke$arity$2 = select_next_loc__2;
  select_next_loc.cljs$core$IFn$_invoke$arity$3 = select_next_loc__3;
  select_next_loc.cljs$core$IFn$_invoke$arity$4 = select_next_loc__4;
  return select_next_loc;
}();
hickory.select.select_locs = function select_locs(selector_fn, hickory_tree) {
  var loc = hickory.select.select_next_loc.call(null, selector_fn, hickory.zip.hickory_zip.call(null, hickory_tree));
  var selected_nodes = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (loc == null) {
      return cljs.core.persistent_BANG_.call(null, selected_nodes);
    } else {
      var G__28186 = hickory.select.select_next_loc.call(null, selector_fn, clojure.zip.next.call(null, loc));
      var G__28187 = cljs.core.conj_BANG_.call(null, selected_nodes, loc);
      loc = G__28186;
      selected_nodes = G__28187;
      continue;
    }
    break;
  }
};
hickory.select.select = function select(selector_fn, hickory_tree) {
  return cljs.core.mapv.call(null, clojure.zip.node, hickory.select.select_locs.call(null, selector_fn, hickory_tree));
};
hickory.select.node_type = function node_type(type) {
  return function(hzip_loc) {
    var node = clojure.zip.node.call(null, hzip_loc);
    var node_type__$1 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(node);
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = node_type__$1;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core._EQ_.call(null, clojure.string.lower_case.call(null, cljs.core.name.call(null, node_type__$1)), clojure.string.lower_case.call(null, cljs.core.name.call(null, type)));
      } else {
        return and__3616__auto__;
      }
    }())) {
      return hzip_loc;
    } else {
      return null;
    }
  };
};
hickory.select.tag = function tag(tag__$1) {
  return function(hzip_loc) {
    var node = clojure.zip.node.call(null, hzip_loc);
    var node_tag = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(node);
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = node_tag;
      if (cljs.core.truth_(and__3616__auto__)) {
        return cljs.core._EQ_.call(null, clojure.string.lower_case.call(null, cljs.core.name.call(null, node_tag)), clojure.string.lower_case.call(null, cljs.core.name.call(null, tag__$1)));
      } else {
        return and__3616__auto__;
      }
    }())) {
      return hzip_loc;
    } else {
      return null;
    }
  };
};
hickory.select.attr = function() {
  var attr = null;
  var attr__1 = function(attr_name) {
    return attr.call(null, attr_name, function(_) {
      return true;
    });
  };
  var attr__2 = function(attr_name, predicate) {
    return function(hzip_loc) {
      var node = clojure.zip.node.call(null, hzip_loc);
      var attr_key = cljs.core.keyword.call(null, clojure.string.lower_case.call(null, cljs.core.name.call(null, attr_name)));
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(node), attr_key);
        if (and__3616__auto__) {
          return predicate.call(null, cljs.core.get_in.call(null, node, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), attr_key], null)));
        } else {
          return and__3616__auto__;
        }
      }())) {
        return hzip_loc;
      } else {
        return null;
      }
    };
  };
  attr = function(attr_name, predicate) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, attr_name);
      case 2:
        return attr__2.call(this, attr_name, predicate);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$1 = attr__1;
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  return attr;
}();
hickory.select.id = function id(id__$1) {
  return hickory.select.attr.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), function(p1__28188_SHARP_) {
    return cljs.core._EQ_.call(null, clojure.string.lower_case.call(null, p1__28188_SHARP_), clojure.string.lower_case.call(null, cljs.core.name.call(null, id__$1)));
  });
};
hickory.select.class$ = function class$(class_name) {
  var parse_classes = function parse_classes(class_str) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.mapv.call(null, clojure.string.lower_case, clojure.string.split.call(null, class_str, / /)));
  };
  return hickory.select.attr.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), function(p1__28189_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, parse_classes.call(null, p1__28189_SHARP_), clojure.string.lower_case.call(null, cljs.core.name.call(null, class_name)));
  });
};
hickory.select.any = function any(hzip_loc) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "element", "element", 1974019749), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, hzip_loc)))) {
    return hzip_loc;
  } else {
    return null;
  }
};
hickory.select.element = hickory.select.any;
hickory.select.element_child = function element_child(hzip_loc) {
  var possible_parent = clojure.zip.up.call(null, hzip_loc);
  var and__3616__auto__ = hickory.select.element.call(null, hzip_loc);
  if (cljs.core.truth_(and__3616__auto__)) {
    var and__3616__auto____$1 = possible_parent;
    if (cljs.core.truth_(and__3616__auto____$1)) {
      return hickory.select.element.call(null, possible_parent);
    } else {
      return and__3616__auto____$1;
    }
  } else {
    return and__3616__auto__;
  }
};
hickory.select.root = function root(hzip_loc) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "html", "html", -998796897), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, hzip_loc)))) {
    return hzip_loc;
  } else {
    return null;
  }
};
hickory.select.find_in_text = function find_in_text(re) {
  return function(hzip_loc) {
    return cljs.core.some.call(null, function(p1__28190_SHARP_) {
      return cljs.core.re_find.call(null, re, p1__28190_SHARP_);
    }, cljs.core.filter.call(null, cljs.core.string_QMARK_, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, hzip_loc))));
  };
};
hickory.select.n_moves_until = function n_moves_until(n, c, move, term_pred) {
  return function(hzip_loc) {
    var distance = hickory.select.count_until.call(null, move, hzip_loc, term_pred);
    if (0 === n) {
      if (distance === c) {
        return hzip_loc;
      } else {
        return null;
      }
    } else {
      if (0 === cljs.core.rem.call(null, distance - c, n)) {
        return hzip_loc;
      } else {
        return null;
      }
    }
  };
};
hickory.select.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__2 = function(c, typ) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "odd", "odd", -1213409872), c)) {
      return nth_of_type.call(null, 2, 1, typ);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "even", "even", -275845692), c)) {
        return nth_of_type.call(null, 2, 0, typ);
      } else {
        return nth_of_type.call(null, 0, c, typ);
      }
    }
  };
  var nth_of_type__3 = function(n, c, typ) {
    return function(hzip_loc) {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = hickory.select.element_child.call(null, hzip_loc);
        if (cljs.core.truth_(and__3616__auto__)) {
          return cljs.core._EQ_.call(null, typ, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, hzip_loc)));
        } else {
          return and__3616__auto__;
        }
      }())) {
        var sel = hickory.select.n_moves_until.call(null, n, c, function(p1__28191_SHARP_) {
          return hickory.select.left_pred.call(null, p1__28191_SHARP_, function(x) {
            return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, x)), typ);
          });
        }, cljs.core.nil_QMARK_);
        return sel.call(null, hzip_loc);
      } else {
        return null;
      }
    };
  };
  nth_of_type = function(n, c, typ) {
    switch(arguments.length) {
      case 2:
        return nth_of_type__2.call(this, n, c);
      case 3:
        return nth_of_type__3.call(this, n, c, typ);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_of_type.cljs$core$IFn$_invoke$arity$2 = nth_of_type__2;
  nth_of_type.cljs$core$IFn$_invoke$arity$3 = nth_of_type__3;
  return nth_of_type;
}();
hickory.select.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__2 = function(c, typ) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "odd", "odd", -1213409872), c)) {
      return nth_last_of_type.call(null, 2, 1, typ);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "even", "even", -275845692), c)) {
        return nth_last_of_type.call(null, 2, 0, typ);
      } else {
        return nth_last_of_type.call(null, 0, c, typ);
      }
    }
  };
  var nth_last_of_type__3 = function(n, c, typ) {
    return function(hzip_loc) {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = hickory.select.element_child.call(null, hzip_loc);
        if (cljs.core.truth_(and__3616__auto__)) {
          return cljs.core._EQ_.call(null, typ, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, hzip_loc)));
        } else {
          return and__3616__auto__;
        }
      }())) {
        var sel = hickory.select.n_moves_until.call(null, n, c, function(p1__28192_SHARP_) {
          return hickory.select.right_pred.call(null, p1__28192_SHARP_, function(x) {
            return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(clojure.zip.node.call(null, x)), typ);
          });
        }, cljs.core.nil_QMARK_);
        return sel.call(null, hzip_loc);
      } else {
        return null;
      }
    };
  };
  nth_last_of_type = function(n, c, typ) {
    switch(arguments.length) {
      case 2:
        return nth_last_of_type__2.call(this, n, c);
      case 3:
        return nth_last_of_type__3.call(this, n, c, typ);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = nth_last_of_type__2;
  nth_last_of_type.cljs$core$IFn$_invoke$arity$3 = nth_last_of_type__3;
  return nth_last_of_type;
}();
hickory.select.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(c) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "odd", "odd", -1213409872), c)) {
      return nth_child.call(null, 2, 1);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "even", "even", -275845692), c)) {
        return nth_child.call(null, 2, 0);
      } else {
        return nth_child.call(null, 0, c);
      }
    }
  };
  var nth_child__2 = function(n, c) {
    return function(hzip_loc) {
      if (cljs.core.truth_(hickory.select.element_child.call(null, hzip_loc))) {
        var sel = hickory.select.n_moves_until.call(null, n, c, function(p1__28193_SHARP_) {
          return hickory.select.left_of_node_type.call(null, p1__28193_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
        }, cljs.core.nil_QMARK_);
        return sel.call(null, hzip_loc);
      } else {
        return null;
      }
    };
  };
  nth_child = function(n, c) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, n);
      case 2:
        return nth_child__2.call(this, n, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_child.cljs$core$IFn$_invoke$arity$1 = nth_child__1;
  nth_child.cljs$core$IFn$_invoke$arity$2 = nth_child__2;
  return nth_child;
}();
hickory.select.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(c) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "odd", "odd", -1213409872), c)) {
      return nth_last_child.call(null, 2, 1);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "even", "even", -275845692), c)) {
        return nth_last_child.call(null, 2, 0);
      } else {
        return nth_last_child.call(null, 0, c);
      }
    }
  };
  var nth_last_child__2 = function(n, c) {
    return function(hzip_loc) {
      if (cljs.core.truth_(hickory.select.element_child.call(null, hzip_loc))) {
        var sel = hickory.select.n_moves_until.call(null, n, c, function(p1__28194_SHARP_) {
          return hickory.select.right_of_node_type.call(null, p1__28194_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
        }, cljs.core.nil_QMARK_);
        return sel.call(null, hzip_loc);
      } else {
        return null;
      }
    };
  };
  nth_last_child = function(n, c) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, n);
      case 2:
        return nth_last_child__2.call(this, n, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_child.cljs$core$IFn$_invoke$arity$1 = nth_last_child__1;
  nth_last_child.cljs$core$IFn$_invoke$arity$2 = nth_last_child__2;
  return nth_last_child;
}();
hickory.select.first_child = function first_child(hzip_loc) {
  var and__3616__auto__ = hickory.select.element_child.call(null, hzip_loc);
  if (cljs.core.truth_(and__3616__auto__)) {
    return hickory.select.nth_child.call(null, 1).call(null, hzip_loc);
  } else {
    return and__3616__auto__;
  }
};
hickory.select.last_child = function last_child(hzip_loc) {
  var and__3616__auto__ = hickory.select.element_child.call(null, hzip_loc);
  if (cljs.core.truth_(and__3616__auto__)) {
    return hickory.select.nth_last_child.call(null, 1).call(null, hzip_loc);
  } else {
    return and__3616__auto__;
  }
};
hickory.select.and = function() {
  var and__delegate = function(selectors) {
    return function(zip_loc) {
      if (cljs.core.every_QMARK_.call(null, function(p1__28195_SHARP_) {
        return p1__28195_SHARP_.call(null, zip_loc);
      }, selectors)) {
        return zip_loc;
      } else {
        return null;
      }
    };
  };
  var and = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return and__delegate.call(this, selectors);
  };
  and.cljs$lang$maxFixedArity = 0;
  and.cljs$lang$applyTo = function(arglist__28196) {
    var selectors = cljs.core.seq(arglist__28196);
    return and__delegate(selectors);
  };
  and.cljs$core$IFn$_invoke$arity$variadic = and__delegate;
  return and;
}();
hickory.select.or = function() {
  var or__delegate = function(selectors) {
    return function(zip_loc) {
      if (cljs.core.truth_(cljs.core.some.call(null, function(p1__28197_SHARP_) {
        return p1__28197_SHARP_.call(null, zip_loc);
      }, selectors))) {
        return zip_loc;
      } else {
        return null;
      }
    };
  };
  var or = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return or__delegate.call(this, selectors);
  };
  or.cljs$lang$maxFixedArity = 0;
  or.cljs$lang$applyTo = function(arglist__28198) {
    var selectors = cljs.core.seq(arglist__28198);
    return or__delegate(selectors);
  };
  or.cljs$core$IFn$_invoke$arity$variadic = or__delegate;
  return or;
}();
hickory.select.not = function not(selector) {
  return function(hzip_loc) {
    if (cljs.core.not.call(null, selector.call(null, hzip_loc))) {
      return hzip_loc;
    } else {
      return null;
    }
  };
};
hickory.select.el_not = function el_not(selector) {
  return hickory.select.and.call(null, hickory.select.node_type.call(null, new cljs.core.Keyword(null, "element", "element", 1974019749)), hickory.select.not.call(null, selector));
};
hickory.select.ordered_adjacent = function() {
  var ordered_adjacent__delegate = function(move_fn, selectors) {
    var selectors__$1 = cljs.core.into_array.call(null, cljs.core.IFn, selectors);
    return function(selectors__$1) {
      return function(hzip_loc) {
        var curr_loc = hzip_loc;
        var idx = 0;
        while (true) {
          if (idx >= cljs.core.count.call(null, selectors__$1)) {
            return hzip_loc;
          } else {
            if (curr_loc == null) {
              return null;
            } else {
              var temp__4124__auto__ = cljs.core.nth.call(null, selectors__$1, idx).call(null, curr_loc);
              if (cljs.core.truth_(temp__4124__auto__)) {
                var next_loc = temp__4124__auto__;
                var G__28199 = move_fn.call(null, next_loc);
                var G__28200 = idx + 1;
                curr_loc = G__28199;
                idx = G__28200;
                continue;
              } else {
                return null;
              }
            }
          }
          break;
        }
      };
    }(selectors__$1);
  };
  var ordered_adjacent = function(move_fn, var_args) {
    var selectors = null;
    if (arguments.length > 1) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ordered_adjacent__delegate.call(this, move_fn, selectors);
  };
  ordered_adjacent.cljs$lang$maxFixedArity = 1;
  ordered_adjacent.cljs$lang$applyTo = function(arglist__28201) {
    var move_fn = cljs.core.first(arglist__28201);
    var selectors = cljs.core.rest(arglist__28201);
    return ordered_adjacent__delegate(move_fn, selectors);
  };
  ordered_adjacent.cljs$core$IFn$_invoke$arity$variadic = ordered_adjacent__delegate;
  return ordered_adjacent;
}();
hickory.select.child = function() {
  var child__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered_adjacent, clojure.zip.up, cljs.core.reverse.call(null, selectors));
  };
  var child = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return child__delegate.call(this, selectors);
  };
  child.cljs$lang$maxFixedArity = 0;
  child.cljs$lang$applyTo = function(arglist__28202) {
    var selectors = cljs.core.seq(arglist__28202);
    return child__delegate(selectors);
  };
  child.cljs$core$IFn$_invoke$arity$variadic = child__delegate;
  return child;
}();
hickory.select.follow_adjacent = function() {
  var follow_adjacent__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered_adjacent, function(p1__28203_SHARP_) {
      return hickory.select.left_of_node_type.call(null, p1__28203_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
    }, cljs.core.reverse.call(null, selectors));
  };
  var follow_adjacent = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return follow_adjacent__delegate.call(this, selectors);
  };
  follow_adjacent.cljs$lang$maxFixedArity = 0;
  follow_adjacent.cljs$lang$applyTo = function(arglist__28204) {
    var selectors = cljs.core.seq(arglist__28204);
    return follow_adjacent__delegate(selectors);
  };
  follow_adjacent.cljs$core$IFn$_invoke$arity$variadic = follow_adjacent__delegate;
  return follow_adjacent;
}();
hickory.select.precede_adjacent = function() {
  var precede_adjacent__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered_adjacent, function(p1__28205_SHARP_) {
      return hickory.select.right_of_node_type.call(null, p1__28205_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
    }, selectors);
  };
  var precede_adjacent = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return precede_adjacent__delegate.call(this, selectors);
  };
  precede_adjacent.cljs$lang$maxFixedArity = 0;
  precede_adjacent.cljs$lang$applyTo = function(arglist__28206) {
    var selectors = cljs.core.seq(arglist__28206);
    return precede_adjacent__delegate(selectors);
  };
  precede_adjacent.cljs$core$IFn$_invoke$arity$variadic = precede_adjacent__delegate;
  return precede_adjacent;
}();
hickory.select.ordered = function() {
  var ordered__delegate = function(move_fn, selectors) {
    var selectors__$1 = cljs.core.into_array.call(null, cljs.core.IFn, selectors);
    return function(selectors__$1) {
      return function(hzip_loc) {
        var fst_selector = cljs.core.nth.call(null, selectors__$1, 0);
        if (cljs.core.truth_(fst_selector.call(null, hzip_loc))) {
          var curr_loc = move_fn.call(null, hzip_loc);
          var idx = 1;
          while (true) {
            if (idx >= cljs.core.count.call(null, selectors__$1)) {
              return hzip_loc;
            } else {
              if (curr_loc == null) {
                return null;
              } else {
                if (cljs.core.truth_(cljs.core.nth.call(null, selectors__$1, idx).call(null, curr_loc))) {
                  var G__28207 = move_fn.call(null, curr_loc);
                  var G__28208 = idx + 1;
                  curr_loc = G__28207;
                  idx = G__28208;
                  continue;
                } else {
                  var G__28209 = move_fn.call(null, curr_loc);
                  var G__28210 = idx;
                  curr_loc = G__28209;
                  idx = G__28210;
                  continue;
                }
              }
            }
            break;
          }
        } else {
          return null;
        }
      };
    }(selectors__$1);
  };
  var ordered = function(move_fn, var_args) {
    var selectors = null;
    if (arguments.length > 1) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ordered__delegate.call(this, move_fn, selectors);
  };
  ordered.cljs$lang$maxFixedArity = 1;
  ordered.cljs$lang$applyTo = function(arglist__28211) {
    var move_fn = cljs.core.first(arglist__28211);
    var selectors = cljs.core.rest(arglist__28211);
    return ordered__delegate(move_fn, selectors);
  };
  ordered.cljs$core$IFn$_invoke$arity$variadic = ordered__delegate;
  return ordered;
}();
hickory.select.descendant = function() {
  var descendant__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered, clojure.zip.up, cljs.core.reverse.call(null, selectors));
  };
  var descendant = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return descendant__delegate.call(this, selectors);
  };
  descendant.cljs$lang$maxFixedArity = 0;
  descendant.cljs$lang$applyTo = function(arglist__28212) {
    var selectors = cljs.core.seq(arglist__28212);
    return descendant__delegate(selectors);
  };
  descendant.cljs$core$IFn$_invoke$arity$variadic = descendant__delegate;
  return descendant;
}();
hickory.select.follow = function() {
  var follow__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered, function(p1__28213_SHARP_) {
      return hickory.select.left_of_node_type.call(null, p1__28213_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
    }, cljs.core.reverse.call(null, selectors));
  };
  var follow = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return follow__delegate.call(this, selectors);
  };
  follow.cljs$lang$maxFixedArity = 0;
  follow.cljs$lang$applyTo = function(arglist__28214) {
    var selectors = cljs.core.seq(arglist__28214);
    return follow__delegate(selectors);
  };
  follow.cljs$core$IFn$_invoke$arity$variadic = follow__delegate;
  return follow;
}();
hickory.select.precede = function() {
  var precede__delegate = function(selectors) {
    return cljs.core.apply.call(null, hickory.select.ordered, function(p1__28215_SHARP_) {
      return hickory.select.right_of_node_type.call(null, p1__28215_SHARP_, new cljs.core.Keyword(null, "element", "element", 1974019749));
    }, selectors);
  };
  var precede = function(var_args) {
    var selectors = null;
    if (arguments.length > 0) {
      selectors = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return precede__delegate.call(this, selectors);
  };
  precede.cljs$lang$maxFixedArity = 0;
  precede.cljs$lang$applyTo = function(arglist__28216) {
    var selectors = cljs.core.seq(arglist__28216);
    return precede__delegate(selectors);
  };
  precede.cljs$core$IFn$_invoke$arity$variadic = precede__delegate;
  return precede;
}();
hickory.select.has_descendant = function has_descendant(selector) {
  return function(hzip_loc) {
    var subtree_start_loc = clojure.zip.down.call(null, hzip_loc);
    var has_children_QMARK_ = cljs.core.not_EQ_.call(null, null, subtree_start_loc);
    if (has_children_QMARK_) {
      var subtree_end_loc = hickory.select.after_subtree.call(null, hzip_loc);
      if (cljs.core.truth_(hickory.select.select_next_loc.call(null, selector, subtree_start_loc, clojure.zip.next, function(subtree_end_loc, subtree_start_loc, has_children_QMARK_) {
        return function(p1__28217_SHARP_) {
          return cljs.core._EQ_.call(null, p1__28217_SHARP_, subtree_end_loc);
        };
      }(subtree_end_loc, subtree_start_loc, has_children_QMARK_)))) {
        return hzip_loc;
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
hickory.select.has_child = function has_child(selector) {
  return function(hzip_loc) {
    var subtree_start_loc = clojure.zip.down.call(null, hzip_loc);
    var has_children_QMARK_ = cljs.core.not_EQ_.call(null, null, subtree_start_loc);
    if (has_children_QMARK_) {
      if (cljs.core.truth_(hickory.select.select_next_loc.call(null, selector, subtree_start_loc, clojure.zip.right, function(subtree_start_loc, has_children_QMARK_) {
        return function(p1__28218_SHARP_) {
          return p1__28218_SHARP_ == null;
        };
      }(subtree_start_loc, has_children_QMARK_)))) {
        return hzip_loc;
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
goog.provide("clui_om.page_svg_alt");
goog.require("cljs.core");
goog.require("hickory.render");
goog.require("om.dom");
goog.require("hickory.core");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
goog.require("hickory.select");
goog.require("om.core");
goog.require("clojure.string");
clui_om.page_svg_alt.state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
clui_om.page_svg_alt.loaded = cljs.core.async.chan.call(null);
clui_om.page_svg_alt.get_async_frag = function get_async_frag(uri) {
  var result_chan = cljs.core.async.chan.call(null);
  var handler = function(result_chan) {
    return function(frag) {
      return cljs.core.async.put_BANG_.call(null, result_chan, frag);
    };
  }(result_chan);
  Snap.load(uri, handler);
  return result_chan;
};
clui_om.page_svg_alt.get_icon_paper = function get_icon_paper(real_width, real_height, virt_width, virt_height) {
  return clui_om.page_svg_alt.paper.svg(0, 0, real_width, real_height, 0, 0, virt_width, virt_height);
};
clui_om.page_svg_alt.get_heart = function get_heart() {
  console.log("Loading the heart SVG");
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__) {
          return function(state_19305) {
            var state_val_19306 = state_19305[1];
            if (state_val_19306 === 2) {
              var inst_19296 = state_19305[2];
              var inst_19297 = inst_19296.select("#heart-icon");
              var inst_19298 = clui_om.page_svg_alt.paper.svg(0, 0, 100, 100, 0, 0, 32, 32);
              var inst_19299 = inst_19298.append(inst_19297);
              var inst_19300 = inst_19297.attr({"class":"original"});
              var inst_19301 = console.log("Heart loaded and added to main SVG");
              var inst_19302 = cljs.core.swap_BANG_.call(null, clui_om.page_svg_alt.state, cljs.core.assoc, new cljs.core.Keyword(null, "original", "original", -445386197), inst_19297);
              var inst_19303 = cljs.core.async.put_BANG_.call(null, clui_om.page_svg_alt.loaded, inst_19297);
              var state_19305__$1 = function() {
                var statearr_19307 = state_19305;
                statearr_19307[7] = inst_19301;
                statearr_19307[8] = inst_19300;
                statearr_19307[9] = inst_19299;
                statearr_19307[10] = inst_19302;
                return statearr_19307;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19305__$1, inst_19303);
            } else {
              if (state_val_19306 === 1) {
                var inst_19294 = clui_om.page_svg_alt.get_async_frag.call(null, "images/heart.svg");
                var state_19305__$1 = state_19305;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19305__$1, 2, inst_19294);
              } else {
                return null;
              }
            }
          };
        }(c__6508__auto__);
        return function(switch__6493__auto__, c__6508__auto__) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_19311 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_19311[0] = state_machine__6494__auto__;
              statearr_19311[1] = 1;
              return statearr_19311;
            };
            var state_machine__6494__auto____1 = function(state_19305) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_19305);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e19312) {
                    if (e19312 instanceof Object) {
                      var ex__6497__auto__ = e19312;
                      var statearr_19313_19315 = state_19305;
                      statearr_19313_19315[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19305);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19312;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19316 = state_19305;
                  state_19305 = G__19316;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_19305) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_19305);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__);
      }();
      var state__6510__auto__ = function() {
        var statearr_19314 = f__6509__auto__.call(null);
        statearr_19314[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_19314;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__));
  return c__6508__auto__;
};
clui_om.page_svg_alt.commence_cloning = function commence_cloning() {
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__) {
          return function(state_19389) {
            var state_val_19390 = state_19389[1];
            if (state_val_19390 === 2) {
              var inst_19359 = state_19389[2];
              var inst_19361 = inst_19359.clone();
              var inst_19362 = inst_19361.attr({"class":"bluish"});
              var inst_19363 = clui_om.page_svg_alt.paper.svg(100, 0, 66, 66, 0, 0, 32, 32);
              var inst_19365 = inst_19359.clone();
              var inst_19366 = inst_19365.attr({"class":"greeny"});
              var inst_19367 = clui_om.page_svg_alt.paper.svg(200, 0, 32, 32, 0, 0, 32, 32);
              var inst_19368 = Snap.filter;
              var inst_19369 = inst_19368.blur(2, 2);
              var inst_19370 = clui_om.page_svg_alt.paper.filter(inst_19369);
              var inst_19372 = inst_19359.clone();
              var inst_19373 = [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "filter", "filter", -948537934)];
              var inst_19374 = ["blurred", inst_19370];
              var inst_19375 = cljs.core.PersistentHashMap.fromArrays(inst_19373, inst_19374);
              var inst_19376 = cljs.core.clj__GT_js.call(null, inst_19375);
              var inst_19377 = inst_19372.attr(inst_19376);
              var inst_19378 = clui_om.page_svg_alt.paper.svg(0, 110, 80, 80, 0, 0, 35, 35);
              var inst_19380 = inst_19359.clone();
              var inst_19381 = inst_19380.attr({"class":"golden"});
              var inst_19382 = clui_om.page_svg_alt.paper.svg(250, 50, 100, 100, 0, 0, 35, 35);
              var inst_19383 = inst_19382.attr({"class":"goldsvg"});
              var inst_19384 = inst_19363.append(inst_19361);
              var inst_19385 = inst_19367.append(inst_19365);
              var inst_19386 = inst_19378.append(inst_19372);
              var inst_19387 = inst_19382.append(inst_19380);
              var state_19389__$1 = function() {
                var statearr_19391 = state_19389;
                statearr_19391[7] = inst_19386;
                statearr_19391[8] = inst_19377;
                statearr_19391[9] = inst_19381;
                statearr_19391[10] = inst_19366;
                statearr_19391[11] = inst_19383;
                statearr_19391[12] = inst_19385;
                statearr_19391[13] = inst_19384;
                statearr_19391[14] = inst_19362;
                return statearr_19391;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19389__$1, inst_19387);
            } else {
              if (state_val_19390 === 1) {
                var state_19389__$1 = state_19389;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19389__$1, 2, clui_om.page_svg_alt.loaded);
              } else {
                return null;
              }
            }
          };
        }(c__6508__auto__);
        return function(switch__6493__auto__, c__6508__auto__) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_19395 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19395[0] = state_machine__6494__auto__;
              statearr_19395[1] = 1;
              return statearr_19395;
            };
            var state_machine__6494__auto____1 = function(state_19389) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_19389);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e19396) {
                    if (e19396 instanceof Object) {
                      var ex__6497__auto__ = e19396;
                      var statearr_19397_19399 = state_19389;
                      statearr_19397_19399[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19389);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19396;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19400 = state_19389;
                  state_19389 = G__19400;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_19389) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_19389);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__);
      }();
      var state__6510__auto__ = function() {
        var statearr_19398 = f__6509__auto__.call(null);
        statearr_19398[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_19398;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__));
  return c__6508__auto__;
};
clui_om.page_svg_alt.load_svg = function load_svg() {
  var result = cljs.core.async.chan.call(null);
  var c__6508__auto___19505 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___19505, result) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___19505, result) {
          return function(state_19490) {
            var state_val_19491 = state_19490[1];
            if (state_val_19491 === 5) {
              var inst_19462 = state_19490[2];
              var inst_19463 = cljs.core.get.call(null, inst_19462, new cljs.core.Keyword(null, "headers", "headers", -835030129));
              var inst_19464 = cljs.core.get.call(null, inst_19462, new cljs.core.Keyword(null, "body", "body", -2049205669));
              var inst_19465 = cljs.core.get.call(null, inst_19462, new cljs.core.Keyword(null, "status", "status", -1997798413));
              var inst_19466 = hickory.core.parse.call(null, inst_19464);
              var inst_19467 = hickory.core.as_hickory.call(null, inst_19466);
              var inst_19468 = hickory.select.tag.call(null, new cljs.core.Keyword(null, "svg", "svg", 856789142));
              var inst_19469 = hickory.select.select.call(null, inst_19468, inst_19467);
              var inst_19470 = cljs.core.first.call(null, inst_19469);
              var inst_19471 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_19472 = [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "width", "width", -384071477)];
              var inst_19473 = new cljs.core.PersistentVector(null, 2, 5, inst_19471, inst_19472, null);
              var inst_19474 = cljs.core.get_in.call(null, inst_19470, inst_19473, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577));
              var inst_19475 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_19476 = [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "height", "height", 1025178622)];
              var inst_19477 = new cljs.core.PersistentVector(null, 2, 5, inst_19475, inst_19476, null);
              var inst_19478 = cljs.core.get_in.call(null, inst_19470, inst_19477, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577));
              var inst_19479 = cljs.core.get.call(null, inst_19470, new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.Keyword(null, "wtf", "wtf", -1581114577));
              var inst_19480 = cljs.core.filter.call(null, cljs.core.map_QMARK_, inst_19479);
              var inst_19481 = cljs.core.mapv.call(null, hickory.render.hickory_to_html, inst_19480);
              var inst_19482 = cljs.core.apply.call(null, cljs.core.str, inst_19481);
              var inst_19483 = [cljs.core.str("Found SVG Root: "), cljs.core.str(inst_19470)].join("");
              var inst_19484 = console.log(inst_19483);
              var inst_19485 = [new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "height", "height", 1025178622), new cljs.core.Keyword(null, "inner-html", "inner-html", 1794096354)];
              var inst_19486 = [inst_19474, inst_19478, inst_19482];
              var inst_19487 = cljs.core.PersistentHashMap.fromArrays(inst_19485, inst_19486);
              var inst_19488 = cljs.core.async.put_BANG_.call(null, result, inst_19487);
              var state_19490__$1 = function() {
                var statearr_19492 = state_19490;
                statearr_19492[7] = inst_19465;
                statearr_19492[8] = inst_19463;
                statearr_19492[9] = inst_19484;
                return statearr_19492;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19490__$1, inst_19488);
            } else {
              if (state_val_19491 === 4) {
                var inst_19456 = state_19490[10];
                var state_19490__$1 = state_19490;
                var statearr_19493_19506 = state_19490__$1;
                statearr_19493_19506[2] = inst_19456;
                statearr_19493_19506[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19491 === 3) {
                  var inst_19456 = state_19490[10];
                  var inst_19459 = cljs.core.apply.call(null, cljs.core.hash_map, inst_19456);
                  var state_19490__$1 = state_19490;
                  var statearr_19494_19507 = state_19490__$1;
                  statearr_19494_19507[2] = inst_19459;
                  statearr_19494_19507[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19491 === 2) {
                    var inst_19456 = state_19490[10];
                    var inst_19456__$1 = state_19490[2];
                    var inst_19457 = cljs.core.seq_QMARK_.call(null, inst_19456__$1);
                    var state_19490__$1 = function() {
                      var statearr_19495 = state_19490;
                      statearr_19495[10] = inst_19456__$1;
                      return statearr_19495;
                    }();
                    if (inst_19457) {
                      var statearr_19496_19508 = state_19490__$1;
                      statearr_19496_19508[1] = 3;
                    } else {
                      var statearr_19497_19509 = state_19490__$1;
                      statearr_19497_19509[1] = 4;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19491 === 1) {
                      var inst_19454 = cljs_http.client.get.call(null, "images/gears3.svg");
                      var state_19490__$1 = state_19490;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19490__$1, 2, inst_19454);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto___19505, result);
        return function(switch__6493__auto__, c__6508__auto___19505, result) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_19501 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_19501[0] = state_machine__6494__auto__;
              statearr_19501[1] = 1;
              return statearr_19501;
            };
            var state_machine__6494__auto____1 = function(state_19490) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_19490);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e19502) {
                    if (e19502 instanceof Object) {
                      var ex__6497__auto__ = e19502;
                      var statearr_19503_19510 = state_19490;
                      statearr_19503_19510[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19490);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19502;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19511 = state_19490;
                  state_19490 = G__19511;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_19490) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_19490);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___19505, result);
      }();
      var state__6510__auto__ = function() {
        var statearr_19504 = f__6509__auto__.call(null);
        statearr_19504[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___19505;
        return statearr_19504;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___19505, result));
  return result;
};
clui_om.page_svg_alt.app_state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
clui_om.page_svg_alt.ALPHA_ROOT = document.getElementById("alphaRoot");
clui_om.page_svg_alt.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_svg_alt.t19530 !== "undefined") {
  } else {
    clui_om.page_svg_alt.t19530 = function(opts, owner, app, main_widget, meta19531) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta19531 = meta19531;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_svg_alt.t19530.prototype.om$core$IRenderState$ = true;
    clui_om.page_svg_alt.t19530.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__19533) {
      var self__ = this;
      var map__19534 = p__19533;
      var map__19534__$1 = cljs.core.seq_QMARK_.call(null, map__19534) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19534) : map__19534;
      var state = map__19534__$1;
      var svg_data = cljs.core.get.call(null, map__19534__$1, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348));
      var ___$1 = this;
      var w = clojure.string.replace.call(null, cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "width", "width", -384071477), "0"), /px/, "");
      var h = clojure.string.replace.call(null, cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "height", "height", 1025178622), "0"), /px/, "");
      var raw = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "inner-html", "inner-html", 1794096354), "wtf");
      return React.DOM.div({"className":"mainWidget"}, React.DOM.div({"className":"mainInner"}, React.DOM.p(null, "Om Component Begins here:"), React.DOM.p(null, [cljs.core.str("Width: "), cljs.core.str(w)].join("")), React.DOM.p(null, [cljs.core.str("Height: "), cljs.core.str(h)].join("")), React.DOM.svg(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "className", "className", -1983287057), "foobar", new cljs.core.Keyword(null, "viewBox", "viewBox", 
      -469489477), [cljs.core.str("0 0 "), cljs.core.str(w), cljs.core.str(" "), cljs.core.str(h)].join(""), new cljs.core.Keyword(null, "width", "width", -384071477), "111", new cljs.core.Keyword(null, "height", "height", 1025178622), "111", new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), "http://www.w3.org/2000/svg", new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", -554971138), {"__html":raw}, new cljs.core.Keyword(null, "onMouseOver", "onMouseOver", 
      1787360977), function(w, h, raw, ___$1, map__19534, map__19534__$1, state, svg_data) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), true);
        };
      }(w, h, raw, ___$1, map__19534, map__19534__$1, state, svg_data), new cljs.core.Keyword(null, "onMouseOut", "onMouseOut", 1953812864), function(w, h, raw, ___$1, map__19534, map__19534__$1, state, svg_data) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false);
        };
      }(w, h, raw, ___$1, map__19534, map__19534__$1, state, svg_data)], null)))));
    };
    clui_om.page_svg_alt.t19530.prototype.om$core$IWillMount$ = true;
    clui_om.page_svg_alt.t19530.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var arrivals = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, arrivals, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, arrivals, ___$1) {
              return function(state_19539) {
                var state_val_19540 = state_19539[1];
                if (state_val_19540 === 2) {
                  var inst_19536 = state_19539[2];
                  var inst_19537 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), inst_19536);
                  var state_19539__$1 = state_19539;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19539__$1, inst_19537);
                } else {
                  if (state_val_19540 === 1) {
                    var state_19539__$1 = state_19539;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19539__$1, 2, arrivals);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6508__auto__, arrivals, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, arrivals, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_19544 = [null, null, null, null, null, null, null];
                  statearr_19544[0] = state_machine__6494__auto__;
                  statearr_19544[1] = 1;
                  return statearr_19544;
                };
                var state_machine__6494__auto____1 = function(state_19539) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_19539);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e19545) {
                        if (e19545 instanceof Object) {
                          var ex__6497__auto__ = e19545;
                          var statearr_19546_19548 = state_19539;
                          statearr_19546_19548[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19539);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e19545;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__19549 = state_19539;
                      state_19539 = G__19549;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_19539) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_19539);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, arrivals, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_19547 = f__6509__auto__.call(null);
            statearr_19547[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_19547;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, arrivals, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_svg_alt.t19530.prototype.om$core$IInitState$ = true;
    clui_om.page_svg_alt.t19530.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), null, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614), clui_om.page_svg_alt.load_svg.call(null), new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false], null);
    };
    clui_om.page_svg_alt.t19530.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19532) {
      var self__ = this;
      var _19532__$1 = this;
      return self__.meta19531;
    };
    clui_om.page_svg_alt.t19530.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19532, meta19531__$1) {
      var self__ = this;
      var _19532__$1 = this;
      return new clui_om.page_svg_alt.t19530(self__.opts, self__.owner, self__.app, self__.main_widget, meta19531__$1);
    };
    clui_om.page_svg_alt.t19530.cljs$lang$type = true;
    clui_om.page_svg_alt.t19530.cljs$lang$ctorStr = "clui-om.page-svg-alt/t19530";
    clui_om.page_svg_alt.t19530.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-svg-alt/t19530");
    };
    clui_om.page_svg_alt.__GT_t19530 = function __GT_t19530(opts__$1, owner__$1, app__$1, main_widget__$1, meta19531) {
      return new clui_om.page_svg_alt.t19530(opts__$1, owner__$1, app__$1, main_widget__$1, meta19531);
    };
  }
  return new clui_om.page_svg_alt.t19530(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 151, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 122, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_svg_alt.cljs"], 
  null));
};
clui_om.page_svg_alt.main = function main() {
  var msg = "(main):: page_svg_alt (main) function...";
  clui_om.page_svg_alt.paper = Snap("#bigOlCanvas");
  console.log(msg);
  clui_om.page_svg_alt.get_heart.call(null);
  clui_om.page_svg_alt.commence_cloning.call(null);
  return om.core.root.call(null, clui_om.page_svg_alt.main_widget, clui_om.page_svg_alt.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_svg_alt.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_svg_alt.main", clui_om.page_svg_alt.main);
goog.provide("clui_om.widgets.palettes");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
clui_om.widgets.palettes.PROTOGENIE = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "slate", "slate", 1394989518), "#BBCCDD", new cljs.core.Keyword(null, "navy", "navy", 1626342120), "#003366", new cljs.core.Keyword(null, "haze", "haze", -1024870708), "#EEEFFF", new cljs.core.Keyword(null, "gold", "gold", -806826416), "#FFCC00", new cljs.core.Keyword(null, "tan", "tan", 1273609893), "#EEBB66"], null);
clui_om.widgets.palettes.CAMPFIRE = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "green", "green", -945526839), "#588C73", new cljs.core.Keyword(null, "cream", "cream", -934119101), "#F2E394", new cljs.core.Keyword(null, "orange", "orange", 73816386), "#F2AE72", new cljs.core.Keyword(null, "flame", "flame", -813204755), "#D96459", new cljs.core.Keyword(null, "brick", "brick", 895065736), "#8C4646"], null);
clui_om.widgets.palettes.OSAKI = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "orange", "orange", 73816386), "#FF9700", new cljs.core.Keyword(null, "umber", "umber", -72283588), "#CC6600", new cljs.core.Keyword(null, "green", "green", -945526839), "#999900", new cljs.core.Keyword(null, "brown", "brown", 1414854429), "#333300", new cljs.core.Keyword(null, "purple", "purple", -876021126), "#660066"], null);
clui_om.widgets.palettes.NYC = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mauve", "mauve", -1586890894), "#753A48", new cljs.core.Keyword(null, "brown", "brown", 1414854429), "#954F47", new cljs.core.Keyword(null, "rust", "rust", -1382432294), "#C05949", new cljs.core.Keyword(null, "sky", "sky", 1271496862), "#9AADBD", new cljs.core.Keyword(null, "soylent", "soylent", -1384549348), "#CBBB58"], null);
clui_om.widgets.palettes.CHEERY = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "lime", "lime", -1796425088), "#B1EB00", new cljs.core.Keyword(null, "baby", "baby", -1305225347), "#53BBF4", new cljs.core.Keyword(null, "pink", "pink", 393815864), "#FF85CB", new cljs.core.Keyword(null, "red", "red", -969428204), "#FF432E", new cljs.core.Keyword(null, "pumpkin", "pumpkin", -1097228616), "#FFAC00"], null);
clui_om.widgets.palettes.DEFAULT_PALETTE = clui_om.widgets.palettes.PROTOGENIE;
clui_om.widgets.palettes.palettes = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "protogenie", "protogenie", -201610668), clui_om.widgets.palettes.PROTOGENIE, new cljs.core.Keyword(null, "campfire", "campfire", -294874362), clui_om.widgets.palettes.CAMPFIRE, new cljs.core.Keyword(null, "osaki", "osaki", 640887759), clui_om.widgets.palettes.OSAKI, new cljs.core.Keyword(null, "nyc", "nyc", -1505421345), clui_om.widgets.palettes.NYC, new cljs.core.Keyword(null, "cheery", "cheery", 
-2047351461), clui_om.widgets.palettes.CHEERY], null);
clui_om.widgets.palettes.parse_choice = function parse_choice(e, callback) {
  var target = e.target;
  var selected = target.value;
  var kw = cljs.core.keyword.call(null, selected);
  var palette = clui_om.widgets.palettes.palettes.call(null, kw);
  return callback.call(null, palette);
};
clui_om.widgets.palettes.palette_chooser = function palette_chooser(cursor, owner, p__21040) {
  var map__21045 = p__21040;
  var map__21045__$1 = cljs.core.seq_QMARK_.call(null, map__21045) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21045) : map__21045;
  var callback = cljs.core.get.call(null, map__21045__$1, new cljs.core.Keyword(null, "callback", "callback", -705136228));
  if (typeof clui_om.widgets.palettes.t21046 !== "undefined") {
  } else {
    clui_om.widgets.palettes.t21046 = function(callback, map__21045, p__21040, owner, cursor, palette_chooser, meta21047) {
      this.callback = callback;
      this.map__21045 = map__21045;
      this.p__21040 = p__21040;
      this.owner = owner;
      this.cursor = cursor;
      this.palette_chooser = palette_chooser;
      this.meta21047 = meta21047;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.widgets.palettes.t21046.prototype.om$core$IRender$ = true;
    clui_om.widgets.palettes.t21046.prototype.om$core$IRender$render$arity$1 = function(map__21045, map__21045__$1, callback) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.apply.call(null, om.dom.select, {"onChange":function(___$1, map__21045, map__21045__$1, callback) {
          return function(p1__21038_SHARP_) {
            return clui_om.widgets.palettes.parse_choice.call(null, p1__21038_SHARP_, self__.callback);
          };
        }(___$1, map__21045, map__21045__$1, callback)}, cljs.core.map.call(null, function(___$1, map__21045, map__21045__$1, callback) {
          return function(p1__21039_SHARP_) {
            return om.dom.option.call(null, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.name.call(null, p1__21039_SHARP_)], null)), clojure.string.capitalize.call(null, cljs.core.name.call(null, p1__21039_SHARP_)));
          };
        }(___$1, map__21045, map__21045__$1, callback), cljs.core.keys.call(null, clui_om.widgets.palettes.palettes)));
      };
    }(map__21045, map__21045__$1, callback);
    clui_om.widgets.palettes.t21046.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__21045, map__21045__$1, callback) {
      return function(_21048) {
        var self__ = this;
        var _21048__$1 = this;
        return self__.meta21047;
      };
    }(map__21045, map__21045__$1, callback);
    clui_om.widgets.palettes.t21046.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__21045, map__21045__$1, callback) {
      return function(_21048, meta21047__$1) {
        var self__ = this;
        var _21048__$1 = this;
        return new clui_om.widgets.palettes.t21046(self__.callback, self__.map__21045, self__.p__21040, self__.owner, self__.cursor, self__.palette_chooser, meta21047__$1);
      };
    }(map__21045, map__21045__$1, callback);
    clui_om.widgets.palettes.t21046.cljs$lang$type = true;
    clui_om.widgets.palettes.t21046.cljs$lang$ctorStr = "clui-om.widgets.palettes/t21046";
    clui_om.widgets.palettes.t21046.cljs$lang$ctorPrWriter = function(map__21045, map__21045__$1, callback) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.widgets.palettes/t21046");
      };
    }(map__21045, map__21045__$1, callback);
    clui_om.widgets.palettes.__GT_t21046 = function(map__21045, map__21045__$1, callback) {
      return function __GT_t21046(callback__$1, map__21045__$2, p__21040__$1, owner__$1, cursor__$1, palette_chooser__$1, meta21047) {
        return new clui_om.widgets.palettes.t21046(callback__$1, map__21045__$2, p__21040__$1, owner__$1, cursor__$1, palette_chooser__$1, meta21047);
      };
    }(map__21045, map__21045__$1, callback);
  }
  return new clui_om.widgets.palettes.t21046(callback, map__21045__$1, p__21040, owner, cursor, palette_chooser, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 38, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 59, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 53, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/widgets/palettes.cljs"], 
  null));
};
goog.provide("clui_om.misc.music_theory");
goog.require("cljs.core");
clui_om.misc.music_theory.note_frequencies = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "d#", "d#", -97310400), new cljs.core.Keyword(null, "g#", "g#", 604660353), new cljs.core.Keyword(null, "a#", "a#", -1635132371), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "f#", "f#", -734555085), new cljs.core.Keyword(null, "c#", "c#", 1780831315), 
new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "c5", "c5", -615073545), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "a", "a", -2123407586)], [311.13, 415.31, 466.16, 329.63, 391.99, 261.6, 369.99, 277.18, 493.88, 523.2, 293.66, 349.23, 440]);
clui_om.misc.music_theory.note_cents = cljs.core.into.call(null, cljs.core.sorted_map.call(null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "d#", "d#", -97310400), new cljs.core.Keyword(null, "g#", "g#", 604660353), new cljs.core.Keyword(null, "a#", "a#", -1635132371), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "f#", "f#", -734555085), 
new cljs.core.Keyword(null, "c#", "c#", 1780831315), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "c5", "c5", -615073545), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "a", "a", -2123407586)], [300, 800, 1E3, 400, 700, 0, 600, 100, 1100, 1200, 200, 500, 900]));
clui_om.misc.music_theory.sorted_frequencies = cljs.core.into.call(null, cljs.core.sorted_map_by.call(null, function(k1, k2) {
  return cljs.core.compare.call(null, clui_om.misc.music_theory.note_frequencies.call(null, k1), clui_om.misc.music_theory.note_frequencies.call(null, k2));
}), clui_om.misc.music_theory.note_frequencies);
clui_om.misc.music_theory.minor_QMARK_ = function minor_QMARK_(note) {
  if (cljs.core.truth_(cljs.core.re_seq.call(null, /.+[#b]+/, cljs.core.name.call(null, note)))) {
    return true;
  } else {
    return false;
  }
};
clui_om.misc.music_theory.piano_offsets = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, .5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7], null);
clui_om.misc.music_theory.build_notes = function build_notes(note_freqs) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map_indexed.call(null, function(i, p__17407) {
    var vec__17408 = p__17407;
    var n = cljs.core.nth.call(null, vec__17408, 0, null);
    var f = cljs.core.nth.call(null, vec__17408, 1, null);
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "note", "note", 1426297904), n, new cljs.core.Keyword(null, "freq", "freq", -1855845278), f, new cljs.core.Keyword(null, "cent", "cent", -673959391), i, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.nth.call(null, clui_om.misc.music_theory.piano_offsets, i)], null);
  }, cljs.core.seq.call(null, note_freqs)));
};
clui_om.misc.music_theory.chromatic_scale = function chromatic_scale() {
  return clui_om.misc.music_theory.build_notes.call(null, clui_om.misc.music_theory.sorted_frequencies);
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  var safeStyle = new goog.html.SafeStyle;
  safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return safeStyle;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-.%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.VALUE_RE_ = /^[-.%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet("link", "script", "style");
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toLowerCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      if (value instanceof goog.string.Const) {
        value = goog.string.Const.unwrap(value);
      } else {
        if (name.toLowerCase() == "style") {
          value = goog.html.SafeHtml.getStyleValue_(value);
        } else {
          if (/^on/i.test(name)) {
            throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
                throw Error('Attribute "' + name + '" requires goog.string.Const or goog.html.SafeUrl value, "' + value + '" given.');
              }
            }
          }
        }
      }
      goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
      result += " " + name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
    }
  }
  var content = opt_content;
  if (!goog.isDef(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  var safeHtml = new goog.html.SafeHtml;
  safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  safeHtml.dir_ = dir;
  return safeHtml;
};
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.create("iframe", {"onload":goog.string.Const.from("this.xpcOnload()")}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.IEventType = function() {
  var obj28064 = {};
  return obj28064;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clojure$browser$event$IEventType$event_types$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__28065) {
      var vec__28066 = p__28065;
      var k = cljs.core.nth.call(null, vec__28066, 0, null);
      var v = cljs.core.nth.call(null, vec__28066, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = true;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__28067) {
        var vec__28068 = p__28067;
        var k = cljs.core.nth.call(null, vec__28068, 0, null);
        var v = cljs.core.nth.call(null, vec__28068, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.json");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__28043) {
  var vec__28044 = p__28043;
  var k = cljs.core.nth.call(null, vec__28044, 0, null);
  var v = cljs.core.nth.call(null, vec__28044, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj28046 = {};
  return obj28046;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.connect[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.connect[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.connect[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.connect[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clojure.browser.net.close[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clojure.browser.net.close["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__28047) {
      var vec__28048 = p__28047;
      var k = cljs.core.nth.call(null, vec__28048, 0, null);
      var v = cljs.core.nth.call(null, vec__28048, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__28049) {
  var vec__28050 = p__28049;
  var k = cljs.core.nth.call(null, vec__28050, 0, null);
  var v = cljs.core.nth.call(null, vec__28050, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj28052 = {};
  return obj28052;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3616__auto__ = this$;
      if (and__3616__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3616__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4272__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3628__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4272__auto__)];
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__28058) {
      var vec__28059 = p__28058;
      var k = cljs.core.nth.call(null, vec__28059, 0, null);
      var v = cljs.core.nth.call(null, vec__28059, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__28060 = sum;
        G__28060[field] = v;
        return G__28060;
      } else {
        return sum;
      }
    }, function() {
      var obj28062 = {};
      return obj28062;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("clui_om.page_epsilon");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("joy.music");
goog.require("clojure.browser.event");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
goog.require("clui_om.misc.music_theory");
goog.require("clojure.string");
goog.require("clojure.browser.net");
goog.require("om.core");
clui_om.page_epsilon.make_once = cljs.core.memoize.call(null, function(audio_api) {
  return new audio_api;
});
clui_om.page_epsilon.oscillator_node = function oscillator_node(p__18589) {
  var map__18591 = p__18589;
  var map__18591__$1 = cljs.core.seq_QMARK_.call(null, map__18591) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18591) : map__18591;
  var freq = cljs.core.get.call(null, map__18591__$1, new cljs.core.Keyword(null, "freq", "freq", -1855845278));
  var temp__4124__auto__ = function() {
    var or__3628__auto__ = window.AudioContext;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return window.webkitAudioContext;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var audio_api = temp__4124__auto__;
    var ctx = clui_om.page_epsilon.make_once.call(null, audio_api);
    var compressor = ctx.createDynamicsCompressor();
    var node = ctx.createOscillator();
    node.frequency.value = freq;
    node.connect(compressor);
    compressor.connect(ctx.destination);
    return node;
  } else {
    return null;
  }
};
clui_om.page_epsilon.get_audio_context = function get_audio_context() {
  var temp__4124__auto__ = function() {
    var or__3628__auto__ = window.AudioContext;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return window.webkitAudioContext;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var audio_api = temp__4124__auto__;
    return clui_om.page_epsilon.make_once.call(null, audio_api);
  } else {
    return null;
  }
};
clui_om.page_epsilon.decode_file = function decode_file(audio_file) {
  var temp__4124__auto__ = clui_om.page_epsilon.get_audio_context.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var ctx = temp__4124__auto__;
    var handler = function(ctx, temp__4124__auto__) {
      return function(buffer) {
        var abs_node = ctx.createBufferSource();
        abs_node.source = buffer;
        return abs_node.connect(ctx.destination);
      };
    }(ctx, temp__4124__auto__);
    return ctx.decodeAudioData(audio_file, handler);
  } else {
    return null;
  }
};
clui_om.page_epsilon.file__GT_channel = function file__GT_channel(audio_file) {
  var temp__4124__auto__ = clui_om.page_epsilon.get_audio_context.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var ctx = temp__4124__auto__;
    var buffer_chan = cljs.core.async.chan.call(null);
    var node_chan = cljs.core.async.chan.call(null);
    ctx.decodeAudioData(audio_file, function(buffer_chan, node_chan, ctx, temp__4124__auto__) {
      return function(p1__18592_SHARP_) {
        return cljs.core.async.put_BANG_.call(null, buffer_chan, p1__18592_SHARP_);
      };
    }(buffer_chan, node_chan, ctx, temp__4124__auto__));
    var c__6508__auto___18629 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__) {
      return function() {
        var f__6509__auto__ = function() {
          var switch__6493__auto__ = function(c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__) {
            return function(state_18619) {
              var state_val_18620 = state_18619[1];
              if (state_val_18620 === 2) {
                var inst_18612 = state_18619[2];
                var inst_18613 = ctx.createBufferSource();
                var inst_18614 = inst_18613.buffer = inst_18612;
                var inst_18615 = ctx.destination;
                var inst_18616 = inst_18613.connect(inst_18615);
                var inst_18617 = cljs.core.async.put_BANG_.call(null, node_chan, inst_18613);
                var state_18619__$1 = function() {
                  var statearr_18621 = state_18619;
                  statearr_18621[7] = inst_18616;
                  statearr_18621[8] = inst_18614;
                  return statearr_18621;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18619__$1, inst_18617);
              } else {
                if (state_val_18620 === 1) {
                  var state_18619__$1 = state_18619;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18619__$1, 2, buffer_chan);
                } else {
                  return null;
                }
              }
            };
          }(c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__);
          return function(switch__6493__auto__, c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__) {
            return function() {
              var state_machine__6494__auto__ = null;
              var state_machine__6494__auto____0 = function() {
                var statearr_18625 = [null, null, null, null, null, null, null, null, null];
                statearr_18625[0] = state_machine__6494__auto__;
                statearr_18625[1] = 1;
                return statearr_18625;
              };
              var state_machine__6494__auto____1 = function(state_18619) {
                while (true) {
                  var ret_value__6495__auto__ = function() {
                    try {
                      while (true) {
                        var result__6496__auto__ = switch__6493__auto__.call(null, state_18619);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6496__auto__;
                        }
                        break;
                      }
                    } catch (e18626) {
                      if (e18626 instanceof Object) {
                        var ex__6497__auto__ = e18626;
                        var statearr_18627_18630 = state_18619;
                        statearr_18627_18630[5] = ex__6497__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18619);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18626;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18631 = state_18619;
                    state_18619 = G__18631;
                    continue;
                  } else {
                    return ret_value__6495__auto__;
                  }
                  break;
                }
              };
              state_machine__6494__auto__ = function(state_18619) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6494__auto____0.call(this);
                  case 1:
                    return state_machine__6494__auto____1.call(this, state_18619);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
              state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
              return state_machine__6494__auto__;
            }();
          }(switch__6493__auto__, c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__);
        }();
        var state__6510__auto__ = function() {
          var statearr_18628 = f__6509__auto__.call(null);
          statearr_18628[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18629;
          return statearr_18628;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
      };
    }(c__6508__auto___18629, buffer_chan, node_chan, ctx, temp__4124__auto__));
    return node_chan;
  } else {
    return null;
  }
};
clui_om.page_epsilon.handle_success = function handle_success(ev) {
  var result = ev.target;
  var status = result.getStatus();
  var headers = result.getResponseHeaders();
  var audio_file = result.getResponse();
  console.log("(handle-success):: status code ", status);
  console.log("(handle-success):: headers ", headers);
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, result, status, headers, audio_file) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__, result, status, headers, audio_file) {
          return function(state_18654) {
            var state_val_18655 = state_18654[1];
            if (state_val_18655 === 2) {
              var inst_18650 = state_18654[2];
              var inst_18651 = console.log("(handle-success):: got an audio node!");
              var inst_18652 = inst_18650.start();
              var state_18654__$1 = function() {
                var statearr_18656 = state_18654;
                statearr_18656[7] = inst_18651;
                return statearr_18656;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18654__$1, inst_18652);
            } else {
              if (state_val_18655 === 1) {
                var inst_18648 = clui_om.page_epsilon.file__GT_channel.call(null, audio_file);
                var state_18654__$1 = state_18654;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18654__$1, 2, inst_18648);
              } else {
                return null;
              }
            }
          };
        }(c__6508__auto__, result, status, headers, audio_file);
        return function(switch__6493__auto__, c__6508__auto__, result, status, headers, audio_file) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_18660 = [null, null, null, null, null, null, null, null];
              statearr_18660[0] = state_machine__6494__auto__;
              statearr_18660[1] = 1;
              return statearr_18660;
            };
            var state_machine__6494__auto____1 = function(state_18654) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_18654);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e18661) {
                    if (e18661 instanceof Object) {
                      var ex__6497__auto__ = e18661;
                      var statearr_18662_18664 = state_18654;
                      statearr_18662_18664[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18654);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18661;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18665 = state_18654;
                  state_18654 = G__18665;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_18654) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_18654);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__, result, status, headers, audio_file);
      }();
      var state__6510__auto__ = function() {
        var statearr_18663 = f__6509__auto__.call(null);
        statearr_18663[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_18663;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__, result, status, headers, audio_file));
  return c__6508__auto__;
};
clui_om.page_epsilon.fetch_and_play_BANG_ = function fetch_and_play_BANG_(url) {
  var xhr = clojure.browser.net.xhr_connection.call(null);
  var G__18667_18668 = xhr;
  clojure.browser.event.listen.call(null, G__18667_18668, new cljs.core.Keyword(null, "success", "success", 1890645906), clui_om.page_epsilon.handle_success);
  clojure.browser.event.listen.call(null, G__18667_18668, new cljs.core.Keyword(null, "error", "error", -978969032), function(G__18667_18668, xhr) {
    return function() {
      return console.log("XHR Request Error");
    };
  }(G__18667_18668, xhr));
  G__18667_18668.setResponseType("arraybuffer");
  return clojure.browser.net.transmit.call(null, xhr, url, "GET");
};
clui_om.page_epsilon.track_names = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "affirmative", "affirmative", 36305091), new cljs.core.Keyword(null, "beep", "beep", -1120313130), new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), new cljs.core.Keyword(null, "swoosh", "swoosh", 642245265), new cljs.core.Keyword(null, "working", "working", 1699655245)], null);
clui_om.page_epsilon.get_tracks = function get_tracks(tracks) {
  return cljs.core.reduce.call(null, function(v, k) {
    return cljs.core.conj.call(null, v, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), k, new cljs.core.Keyword(null, "file", "file", -1269645878), [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(".mp3")].join(""), new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), false], null));
  }, cljs.core.PersistentVector.EMPTY, tracks);
};
clui_om.page_epsilon.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "notes", "notes", -1039600523), clui_om.misc.music_theory.chromatic_scale.call(null), new cljs.core.Keyword(null, "tracks", "tracks", -326768501), clui_om.page_epsilon.get_tracks.call(null, clui_om.page_epsilon.track_names)], null));
clui_om.page_epsilon.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.page_epsilon.piano_key_props = function piano_key_props(p__18669, p__18670) {
  var map__18673 = p__18669;
  var map__18673__$1 = cljs.core.seq_QMARK_.call(null, map__18673) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18673) : map__18673;
  var cursor = map__18673__$1;
  var offset = cljs.core.get.call(null, map__18673__$1, new cljs.core.Keyword(null, "offset", "offset", 296498311));
  var freq = cljs.core.get.call(null, map__18673__$1, new cljs.core.Keyword(null, "freq", "freq", -1855845278));
  var cent = cljs.core.get.call(null, map__18673__$1, new cljs.core.Keyword(null, "cent", "cent", -673959391));
  var note = cljs.core.get.call(null, map__18673__$1, new cljs.core.Keyword(null, "note", "note", 1426297904));
  var map__18674 = p__18670;
  var map__18674__$1 = cljs.core.seq_QMARK_.call(null, map__18674) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18674) : map__18674;
  var state = map__18674__$1;
  var active = cljs.core.get.call(null, map__18674__$1, new cljs.core.Keyword(null, "active", "active", 1895962068));
  var hovering = cljs.core.get.call(null, map__18674__$1, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
  var motion = cljs.core.get.call(null, map__18674__$1, new cljs.core.Keyword(null, "motion", "motion", 36831425));
  var pressure = cljs.core.get.call(null, map__18674__$1, new cljs.core.Keyword(null, "pressure", "pressure", 505343747));
  var minor = clui_om.misc.music_theory.minor_QMARK_.call(null, note);
  var left = offset * 6;
  var classes = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), [cljs.core.str("pianoKey"), cljs.core.str(minor ? " minor" : null), cljs.core.str(cljs.core.truth_(hovering) ? " glow" : null), cljs.core.str(cljs.core.truth_(active) ? " active" : null)].join("")], null);
  var handlers = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "onMouseDown", "onMouseDown", -1496366516), function(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, pressure, new cljs.core.Keyword(null, "down", "down", 1565245570));
    };
  }(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure), new cljs.core.Keyword(null, "onMouseUp", "onMouseUp", -180363297), function(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, pressure, new cljs.core.Keyword(null, "up", "up", -269712113));
    };
  }(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure), new cljs.core.Keyword(null, "onMouseOver", "onMouseOver", 1787360977), function(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, motion, new cljs.core.Keyword(null, "over", "over", 192553051));
    };
  }(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure), new cljs.core.Keyword(null, "onMouseOut", "onMouseOut", 1953812864), function(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, motion, new cljs.core.Keyword(null, "out", "out", -910545517));
    };
  }(minor, left, classes, map__18673, map__18673__$1, cursor, offset, freq, cent, note, map__18674, map__18674__$1, state, active, hovering, motion, pressure)], null);
  var styles = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "left", "left", -399115937), [cljs.core.str(left), cljs.core.str("em")].join("")], null);
  var final$ = cljs.core.merge.call(null, classes, handlers, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), styles], null));
  return cljs.core.clj__GT_js.call(null, final$);
};
clui_om.page_epsilon.piano_key = function piano_key(cursor, owner, opts) {
  if (typeof clui_om.page_epsilon.t18770 !== "undefined") {
  } else {
    clui_om.page_epsilon.t18770 = function(opts, owner, cursor, piano_key, meta18771) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.piano_key = piano_key;
      this.meta18771 = meta18771;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_epsilon.t18770.prototype.om$core$IRenderState$ = true;
    clui_om.page_epsilon.t18770.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__18773) {
      var self__ = this;
      var map__18774 = p__18773;
      var map__18774__$1 = cljs.core.seq_QMARK_.call(null, map__18774) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18774) : map__18774;
      var state = map__18774__$1;
      var hovering = cljs.core.get.call(null, map__18774__$1, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
      var ___$1 = this;
      return React.DOM.div(clui_om.page_epsilon.piano_key_props.call(null, self__.cursor, state), React.DOM.div({"className":"noteName"}, clojure.string.upper_case.call(null, [cljs.core.str(cljs.core.name.call(null, self__.cursor.call(null, new cljs.core.Keyword(null, "note", "note", 1426297904))))].join(""))));
    };
    clui_om.page_epsilon.t18770.prototype.om$core$IWillMount$ = true;
    clui_om.page_epsilon.t18770.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var pressure = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "pressure", "pressure", 505343747));
      var motion = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "motion", "motion", 36831425));
      var label = (new cljs.core.Keyword(null, "note", "note", 1426297904)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var c__6508__auto___18865 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18865, pressure, motion, label, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18865, pressure, motion, label, ___$1) {
              return function(state_18807) {
                var state_val_18808 = state_18807[1];
                if (state_val_18808 === 7) {
                  var inst_18802 = state_18807[2];
                  var state_18807__$1 = function() {
                    var statearr_18809 = state_18807;
                    statearr_18809[7] = inst_18802;
                    return statearr_18809;
                  }();
                  var statearr_18810_18866 = state_18807__$1;
                  statearr_18810_18866[2] = null;
                  statearr_18810_18866[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18808 === 1) {
                    var state_18807__$1 = state_18807;
                    var statearr_18811_18867 = state_18807__$1;
                    statearr_18811_18867[2] = null;
                    statearr_18811_18867[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18808 === 4) {
                      var inst_18777 = state_18807[2];
                      var inst_18778 = cljs.core._EQ_.call(null, inst_18777, new cljs.core.Keyword(null, "down", "down", 1565245570));
                      var state_18807__$1 = state_18807;
                      if (inst_18778) {
                        var statearr_18812_18868 = state_18807__$1;
                        statearr_18812_18868[1] = 5;
                      } else {
                        var statearr_18813_18869 = state_18807__$1;
                        statearr_18813_18869[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18808 === 13) {
                        var inst_18800 = state_18807[2];
                        var state_18807__$1 = state_18807;
                        var statearr_18814_18870 = state_18807__$1;
                        statearr_18814_18870[2] = inst_18800;
                        statearr_18814_18870[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18808 === 6) {
                          var inst_18793 = state_18807[8];
                          var inst_18792 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "active", "active", 1895962068), false);
                          var inst_18793__$1 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "sound", "sound", -2127407070));
                          var inst_18794 = cljs.core.not_EQ_.call(null, inst_18793__$1, new cljs.core.Keyword(null, "silence", "silence", 1707565736));
                          var state_18807__$1 = function() {
                            var statearr_18815 = state_18807;
                            statearr_18815[8] = inst_18793__$1;
                            statearr_18815[9] = inst_18792;
                            return statearr_18815;
                          }();
                          if (inst_18794) {
                            var statearr_18816_18871 = state_18807__$1;
                            statearr_18816_18871[1] = 11;
                          } else {
                            var statearr_18817_18872 = state_18807__$1;
                            statearr_18817_18872[1] = 12;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18808 === 3) {
                            var inst_18805 = state_18807[2];
                            var state_18807__$1 = state_18807;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18807__$1, inst_18805);
                          } else {
                            if (state_val_18808 === 12) {
                              var state_18807__$1 = state_18807;
                              var statearr_18818_18873 = state_18807__$1;
                              statearr_18818_18873[2] = null;
                              statearr_18818_18873[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18808 === 2) {
                                var state_18807__$1 = state_18807;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18807__$1, 4, pressure);
                              } else {
                                if (state_val_18808 === 11) {
                                  var inst_18793 = state_18807[8];
                                  var inst_18796 = inst_18793.stop();
                                  var inst_18797 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "sound", "sound", -2127407070), new cljs.core.Keyword(null, "silence", "silence", 1707565736));
                                  var state_18807__$1 = function() {
                                    var statearr_18819 = state_18807;
                                    statearr_18819[10] = inst_18796;
                                    return statearr_18819;
                                  }();
                                  var statearr_18820_18874 = state_18807__$1;
                                  statearr_18820_18874[2] = inst_18797;
                                  statearr_18820_18874[1] = 13;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18808 === 9) {
                                    var state_18807__$1 = state_18807;
                                    var statearr_18821_18875 = state_18807__$1;
                                    statearr_18821_18875[2] = null;
                                    statearr_18821_18875[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18808 === 5) {
                                      var inst_18780 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "active", "active", 1895962068), true);
                                      var inst_18781 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "sound", "sound", -2127407070));
                                      var inst_18782 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "silence", "silence", 1707565736), inst_18781);
                                      var state_18807__$1 = function() {
                                        var statearr_18822 = state_18807;
                                        statearr_18822[11] = inst_18780;
                                        return statearr_18822;
                                      }();
                                      if (inst_18782) {
                                        var statearr_18823_18876 = state_18807__$1;
                                        statearr_18823_18876[1] = 8;
                                      } else {
                                        var statearr_18824_18877 = state_18807__$1;
                                        statearr_18824_18877[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18808 === 10) {
                                        var inst_18790 = state_18807[2];
                                        var state_18807__$1 = state_18807;
                                        var statearr_18825_18878 = state_18807__$1;
                                        statearr_18825_18878[2] = inst_18790;
                                        statearr_18825_18878[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18808 === 8) {
                                          var inst_18784 = cljs.core.deref.call(null, self__.cursor);
                                          var inst_18785 = clui_om.page_epsilon.oscillator_node.call(null, inst_18784);
                                          var inst_18786 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "sound", "sound", -2127407070), inst_18785);
                                          var inst_18787 = inst_18785.start();
                                          var state_18807__$1 = function() {
                                            var statearr_18826 = state_18807;
                                            statearr_18826[12] = inst_18786;
                                            return statearr_18826;
                                          }();
                                          var statearr_18827_18879 = state_18807__$1;
                                          statearr_18827_18879[2] = inst_18787;
                                          statearr_18827_18879[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18865, pressure, motion, label, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18865, pressure, motion, label, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18831 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_18831[0] = state_machine__6494__auto__;
                  statearr_18831[1] = 1;
                  return statearr_18831;
                };
                var state_machine__6494__auto____1 = function(state_18807) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18807);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18832) {
                        if (e18832 instanceof Object) {
                          var ex__6497__auto__ = e18832;
                          var statearr_18833_18880 = state_18807;
                          statearr_18833_18880[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18807);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18832;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18881 = state_18807;
                      state_18807 = G__18881;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18807) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18807);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18865, pressure, motion, label, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18834 = f__6509__auto__.call(null);
            statearr_18834[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18865;
            return statearr_18834;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18865, pressure, motion, label, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, pressure, motion, label, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, pressure, motion, label, ___$1) {
              return function(state_18849) {
                var state_val_18850 = state_18849[1];
                if (state_val_18850 === 7) {
                  var inst_18844 = state_18849[2];
                  var state_18849__$1 = function() {
                    var statearr_18851 = state_18849;
                    statearr_18851[7] = inst_18844;
                    return statearr_18851;
                  }();
                  var statearr_18852_18882 = state_18849__$1;
                  statearr_18852_18882[2] = null;
                  statearr_18852_18882[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18850 === 6) {
                    var inst_18842 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false);
                    var state_18849__$1 = state_18849;
                    var statearr_18853_18883 = state_18849__$1;
                    statearr_18853_18883[2] = inst_18842;
                    statearr_18853_18883[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18850 === 5) {
                      var inst_18840 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), true);
                      var state_18849__$1 = state_18849;
                      var statearr_18854_18884 = state_18849__$1;
                      statearr_18854_18884[2] = inst_18840;
                      statearr_18854_18884[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18850 === 4) {
                        var inst_18837 = state_18849[2];
                        var inst_18838 = cljs.core._EQ_.call(null, inst_18837, new cljs.core.Keyword(null, "over", "over", 192553051));
                        var state_18849__$1 = state_18849;
                        if (inst_18838) {
                          var statearr_18855_18885 = state_18849__$1;
                          statearr_18855_18885[1] = 5;
                        } else {
                          var statearr_18856_18886 = state_18849__$1;
                          statearr_18856_18886[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18850 === 3) {
                          var inst_18847 = state_18849[2];
                          var state_18849__$1 = state_18849;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18849__$1, inst_18847);
                        } else {
                          if (state_val_18850 === 2) {
                            var state_18849__$1 = state_18849;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18849__$1, 4, motion);
                          } else {
                            if (state_val_18850 === 1) {
                              var state_18849__$1 = state_18849;
                              var statearr_18857_18887 = state_18849__$1;
                              statearr_18857_18887[2] = null;
                              statearr_18857_18887[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, pressure, motion, label, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, pressure, motion, label, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18861 = [null, null, null, null, null, null, null, null];
                  statearr_18861[0] = state_machine__6494__auto__;
                  statearr_18861[1] = 1;
                  return statearr_18861;
                };
                var state_machine__6494__auto____1 = function(state_18849) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18849);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18862) {
                        if (e18862 instanceof Object) {
                          var ex__6497__auto__ = e18862;
                          var statearr_18863_18888 = state_18849;
                          statearr_18863_18888[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18849);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18862;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18889 = state_18849;
                      state_18849 = G__18889;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18849) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18849);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, pressure, motion, label, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18864 = f__6509__auto__.call(null);
            statearr_18864[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_18864;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, pressure, motion, label, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_epsilon.t18770.prototype.om$core$IInitState$ = true;
    clui_om.page_epsilon.t18770.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false, new cljs.core.Keyword(null, "active", "active", 1895962068), false, new cljs.core.Keyword(null, "pressure", "pressure", 505343747), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "motion", "motion", 36831425), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "sound", "sound", -2127407070), new cljs.core.Keyword(null, "silence", "silence", 1707565736)], 
      null);
    };
    clui_om.page_epsilon.t18770.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18772) {
      var self__ = this;
      var _18772__$1 = this;
      return self__.meta18771;
    };
    clui_om.page_epsilon.t18770.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18772, meta18771__$1) {
      var self__ = this;
      var _18772__$1 = this;
      return new clui_om.page_epsilon.t18770(self__.opts, self__.owner, self__.cursor, self__.piano_key, meta18771__$1);
    };
    clui_om.page_epsilon.t18770.cljs$lang$type = true;
    clui_om.page_epsilon.t18770.cljs$lang$ctorStr = "clui-om.page-epsilon/t18770";
    clui_om.page_epsilon.t18770.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-epsilon/t18770");
    };
    clui_om.page_epsilon.__GT_t18770 = function __GT_t18770(opts__$1, owner__$1, cursor__$1, piano_key__$1, meta18771) {
      return new clui_om.page_epsilon.t18770(opts__$1, owner__$1, cursor__$1, piano_key__$1, meta18771);
    };
  }
  return new clui_om.page_epsilon.t18770(opts, owner, cursor, piano_key, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 71, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 219, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 173, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_epsilon.cljs"], 
  null));
};
clui_om.page_epsilon.piano_bar = function piano_bar(app, owner, opts) {
  if (typeof clui_om.page_epsilon.t18893 !== "undefined") {
  } else {
    clui_om.page_epsilon.t18893 = function(opts, owner, app, piano_bar, meta18894) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.piano_bar = piano_bar;
      this.meta18894 = meta18894;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_epsilon.t18893.prototype.om$core$IRender$ = true;
    clui_om.page_epsilon.t18893.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"pianoBar"}, React.DOM.div({"className":"pianoOuter"}, cljs.core.apply.call(null, om.dom.div, {"className":"pianoInner"}, om.core.build_all.call(null, clui_om.page_epsilon.piano_key, (new cljs.core.Keyword(null, "notes", "notes", -1039600523)).cljs$core$IFn$_invoke$arity$1(self__.app)))));
    };
    clui_om.page_epsilon.t18893.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18895) {
      var self__ = this;
      var _18895__$1 = this;
      return self__.meta18894;
    };
    clui_om.page_epsilon.t18893.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18895, meta18894__$1) {
      var self__ = this;
      var _18895__$1 = this;
      return new clui_om.page_epsilon.t18893(self__.opts, self__.owner, self__.app, self__.piano_bar, meta18894__$1);
    };
    clui_om.page_epsilon.t18893.cljs$lang$type = true;
    clui_om.page_epsilon.t18893.cljs$lang$ctorStr = "clui-om.page-epsilon/t18893";
    clui_om.page_epsilon.t18893.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-epsilon/t18893");
    };
    clui_om.page_epsilon.__GT_t18893 = function __GT_t18893(opts__$1, owner__$1, app__$1, piano_bar__$1, meta18894) {
      return new clui_om.page_epsilon.t18893(opts__$1, owner__$1, app__$1, piano_bar__$1, meta18894);
    };
  }
  return new clui_om.page_epsilon.t18893(opts, owner, app, piano_bar, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 74, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 230, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 224, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_epsilon.cljs"], 
  null));
};
clui_om.page_epsilon.juke_button = function juke_button(cursor, owner, opts) {
  if (typeof clui_om.page_epsilon.t18926 !== "undefined") {
  } else {
    clui_om.page_epsilon.t18926 = function(opts, owner, cursor, juke_button, meta18927) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.juke_button = juke_button;
      this.meta18927 = meta18927;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_epsilon.t18926.prototype.om$core$IRenderState$ = true;
    clui_om.page_epsilon.t18926.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__18929) {
      var self__ = this;
      var map__18930 = p__18929;
      var map__18930__$1 = cljs.core.seq_QMARK_.call(null, map__18930) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18930) : map__18930;
      var state = map__18930__$1;
      var clicks = cljs.core.get.call(null, map__18930__$1, new cljs.core.Keyword(null, "clicks", "clicks", 673274951));
      var ___$1 = this;
      return React.DOM.div({"className":"trackButton"}, React.DOM.button({"onClick":function(___$1, map__18930, map__18930__$1, state, clicks) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, clicks, new cljs.core.Keyword(null, "play", "play", -580418022));
        };
      }(___$1, map__18930, map__18930__$1, state, clicks)}, [cljs.core.str((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(self__.cursor))].join("")));
    };
    clui_om.page_epsilon.t18926.prototype.om$core$IWillMount$ = true;
    clui_om.page_epsilon.t18926.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var clicks = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "clicks", "clicks", 673274951));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, clicks, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, clicks, ___$1) {
              return function(state_18944) {
                var state_val_18945 = state_18944[1];
                if (state_val_18945 === 4) {
                  var inst_18933 = state_18944[2];
                  var inst_18934 = cljs.core.deref.call(null, self__.cursor);
                  var inst_18935 = (new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(inst_18934);
                  var inst_18936 = [cljs.core.str("/audio/"), cljs.core.str(inst_18935)].join("");
                  var inst_18937 = [cljs.core.str("Requesting track: "), cljs.core.str(inst_18936)].join("");
                  var inst_18938 = console.log(inst_18937);
                  var inst_18939 = clui_om.page_epsilon.fetch_and_play_BANG_.call(null, inst_18936);
                  var state_18944__$1 = function() {
                    var statearr_18946 = state_18944;
                    statearr_18946[7] = inst_18939;
                    statearr_18946[8] = inst_18933;
                    statearr_18946[9] = inst_18938;
                    return statearr_18946;
                  }();
                  var statearr_18947_18956 = state_18944__$1;
                  statearr_18947_18956[2] = null;
                  statearr_18947_18956[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18945 === 3) {
                    var inst_18942 = state_18944[2];
                    var state_18944__$1 = state_18944;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18944__$1, inst_18942);
                  } else {
                    if (state_val_18945 === 2) {
                      var state_18944__$1 = state_18944;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18944__$1, 4, clicks);
                    } else {
                      if (state_val_18945 === 1) {
                        var state_18944__$1 = state_18944;
                        var statearr_18948_18957 = state_18944__$1;
                        statearr_18948_18957[2] = null;
                        statearr_18948_18957[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, clicks, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, clicks, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18952 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_18952[0] = state_machine__6494__auto__;
                  statearr_18952[1] = 1;
                  return statearr_18952;
                };
                var state_machine__6494__auto____1 = function(state_18944) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18944);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18953) {
                        if (e18953 instanceof Object) {
                          var ex__6497__auto__ = e18953;
                          var statearr_18954_18958 = state_18944;
                          statearr_18954_18958[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18944);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18953;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18959 = state_18944;
                      state_18944 = G__18959;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18944) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18944);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, clicks, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18955 = f__6509__auto__.call(null);
            statearr_18955[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_18955;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, clicks, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_epsilon.t18926.prototype.om$core$IInitState$ = true;
    clui_om.page_epsilon.t18926.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clicks", "clicks", 673274951), cljs.core.async.chan.call(null)], null);
    };
    clui_om.page_epsilon.t18926.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18928) {
      var self__ = this;
      var _18928__$1 = this;
      return self__.meta18927;
    };
    clui_om.page_epsilon.t18926.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18928, meta18927__$1) {
      var self__ = this;
      var _18928__$1 = this;
      return new clui_om.page_epsilon.t18926(self__.opts, self__.owner, self__.cursor, self__.juke_button, meta18927__$1);
    };
    clui_om.page_epsilon.t18926.cljs$lang$type = true;
    clui_om.page_epsilon.t18926.cljs$lang$ctorStr = "clui-om.page-epsilon/t18926";
    clui_om.page_epsilon.t18926.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-epsilon/t18926");
    };
    clui_om.page_epsilon.__GT_t18926 = function __GT_t18926(opts__$1, owner__$1, cursor__$1, juke_button__$1, meta18927) {
      return new clui_om.page_epsilon.t18926(opts__$1, owner__$1, cursor__$1, juke_button__$1, meta18927);
    };
  }
  return new clui_om.page_epsilon.t18926(opts, owner, cursor, juke_button, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 53, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 255, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 237, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_epsilon.cljs"], 
  null));
};
clui_om.page_epsilon.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_epsilon.t18963 !== "undefined") {
  } else {
    clui_om.page_epsilon.t18963 = function(opts, owner, app, main_widget, meta18964) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta18964 = meta18964;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_epsilon.t18963.prototype.om$core$IRender$ = true;
    clui_om.page_epsilon.t18963.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"mainWidget"}, React.DOM.div({"className":"mainInner"}, om.core.build.call(null, clui_om.page_epsilon.piano_bar, self__.app)), React.DOM.hr(null), React.DOM.div({"className":"joyDemo"}, React.DOM.div(null, React.DOM.p(null, "From: 'Joy of Clojure':"), React.DOM.button({"onClick":function(___$1) {
        return function() {
          return joy.music.main.call(null);
        };
      }(___$1)}, "A Magical Theme"))), React.DOM.hr(null), cljs.core.apply.call(null, om.dom.div, {"className":"trackBar"}, React.DOM.p(null, "Individual MP3 tracks:"), om.core.build_all.call(null, clui_om.page_epsilon.juke_button, (new cljs.core.Keyword(null, "tracks", "tracks", -326768501)).cljs$core$IFn$_invoke$arity$1(self__.app))));
    };
    clui_om.page_epsilon.t18963.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18965) {
      var self__ = this;
      var _18965__$1 = this;
      return self__.meta18964;
    };
    clui_om.page_epsilon.t18963.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18965, meta18964__$1) {
      var self__ = this;
      var _18965__$1 = this;
      return new clui_om.page_epsilon.t18963(self__.opts, self__.owner, self__.app, self__.main_widget, meta18964__$1);
    };
    clui_om.page_epsilon.t18963.cljs$lang$type = true;
    clui_om.page_epsilon.t18963.cljs$lang$ctorStr = "clui-om.page-epsilon/t18963";
    clui_om.page_epsilon.t18963.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-epsilon/t18963");
    };
    clui_om.page_epsilon.__GT_t18963 = function __GT_t18963(opts__$1, owner__$1, app__$1, main_widget__$1, meta18964) {
      return new clui_om.page_epsilon.t18963(opts__$1, owner__$1, app__$1, main_widget__$1, meta18964);
    };
  }
  return new clui_om.page_epsilon.t18963(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 67, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 274, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 259, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_epsilon.cljs"], 
  null));
};
clui_om.page_epsilon.main = function main() {
  var msg = "(main):: page_epsilon (main) function...";
  console.log(msg);
  return om.core.root.call(null, clui_om.page_epsilon.main_widget, clui_om.page_epsilon.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_epsilon.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_epsilon.main", clui_om.page_epsilon.main);
goog.provide("om_tools.dom");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("clojure.string");
om_tools.dom.camel_case = function camel_case(s) {
  return clojure.string.replace.call(null, s, /-(\w)/, cljs.core.comp.call(null, clojure.string.upper_case, cljs.core.second));
};
om_tools.dom.opt_key_case = function opt_key_case(attr) {
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = cljs.core.count.call(null, attr) < 5;
    if (or__3628__auto__) {
      return or__3628__auto__;
    } else {
      return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria-", null, "data-", null], null), null)).call(null, cljs.core.subs.call(null, attr, 0, 5));
    }
  }())) {
    return attr;
  } else {
    return om_tools.dom.camel_case.call(null, attr);
  }
};
om_tools.dom.opt_key_alias = function opt_key_alias(opt) {
  var G__27165 = opt instanceof cljs.core.Keyword ? opt.fqn : null;
  switch(G__27165) {
    case "for":
      return new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720);
      break;
    case "class":
      return new cljs.core.Keyword(null, "className", "className", -1983287057);
      break;
    default:
      return opt;
  }
};
om_tools.dom.format_opt_key = function format_opt_key(opt_key) {
  return cljs.core.keyword.call(null, om_tools.dom.opt_key_case.call(null, cljs.core.name.call(null, om_tools.dom.opt_key_alias.call(null, opt_key))));
};
om_tools.dom.format_opt_val = function format_opt_val(opt_val) {
  if (cljs.core.map_QMARK_.call(null, opt_val)) {
    return om_tools.dom.format_opts.call(null, opt_val);
  } else {
    return opt_val;
  }
};
om_tools.dom.format_opts = function format_opts(opts) {
  if (cljs.core.map_QMARK_.call(null, opts)) {
    return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__27169) {
      var vec__27170 = p__27169;
      var k = cljs.core.nth.call(null, vec__27170, 0, null);
      var v = cljs.core.nth.call(null, vec__27170, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opt_key.call(null, k), om_tools.dom.format_opt_val.call(null, v)], null);
    }, opts)));
  } else {
    return opts;
  }
};
om_tools.dom.possible_coll_QMARK_ = function possible_coll_QMARK_(form) {
  return cljs.core.coll_QMARK_.call(null, form) || form instanceof cljs.core.Symbol || cljs.core.list_QMARK_.call(null, form);
};
om_tools.dom.form_tags = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.Symbol(null, "textarea", "textarea", 990155703, null), new cljs.core.Symbol(null, "option", "option", 1705663799, null)], null);
om_tools.dom.el_ctor = function el_ctor(tag) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.partial.call(null, cljs.core._EQ_, tag), om_tools.dom.form_tags))) {
    return cljs.core.symbol.call(null, "om.dom", cljs.core.name.call(null, tag));
  } else {
    return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
  }
};
om_tools.dom.element_args = function element_args(opts, children) {
  if (opts == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, children], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, opts)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opts.call(null, opts), children], null);
    } else {
      if (cljs.core.object_QMARK_.call(null, opts)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [opts, children], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.cons.call(null, opts, children)], null);
      }
    }
  }
};
om_tools.dom.element = function element(ctor, opts, children) {
  var vec__27172 = om_tools.dom.element_args.call(null, opts, children);
  var opts__$1 = cljs.core.nth.call(null, vec__27172, 0, null);
  var children__$1 = cljs.core.nth.call(null, vec__27172, 1, null);
  return cljs.core.apply.call(null, ctor, cljs.core.flatten.call(null, cljs.core.cons.call(null, opts__$1, children__$1)));
};
om_tools.dom.class_set = function class_set(m) {
  var temp__4126__auto__ = cljs.core.seq.call(null, cljs.core.distinct.call(null, cljs.core.map.call(null, cljs.core.name, cljs.core.keys.call(null, cljs.core.filter.call(null, cljs.core.val, m)))));
  if (temp__4126__auto__) {
    var ks = temp__4126__auto__;
    return clojure.string.join.call(null, " ", ks);
  } else {
    return null;
  }
};
goog.provide("om_tools.mixin");
goog.require("cljs.core");
goog.require("om.core");
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("plumbing.core");
goog.require("plumbing.fnk.schema");
goog.require("om.core");
om_tools.core.state_proxy = function state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t26594 !== "undefined") {
    } else {
      om_tools.core.t26594 = function(get_state, owner, state_proxy, meta26595) {
        this.get_state = get_state;
        this.owner = owner;
        this.state_proxy = state_proxy;
        this.meta26595 = meta26595;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
      };
      om_tools.core.t26594.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_26596) {
          var self__ = this;
          var _26596__$1 = this;
          return self__.meta26595;
        };
      }(get_state);
      om_tools.core.t26594.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_26596, meta26595__$1) {
          var self__ = this;
          var _26596__$1 = this;
          return new om_tools.core.t26594(self__.get_state, self__.owner, self__.state_proxy, meta26595__$1);
        };
      }(get_state);
      om_tools.core.t26594.cljs$lang$type = true;
      om_tools.core.t26594.cljs$lang$ctorStr = "om-tools.core/t26594";
      om_tools.core.t26594.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "om-tools.core/t26594");
        };
      }(get_state);
      om_tools.core.__GT_t26594 = function(get_state) {
        return function __GT_t26594(get_state__$1, owner__$1, state_proxy__$1, meta26595) {
          return new om_tools.core.t26594(get_state__$1, owner__$1, state_proxy__$1, meta26595);
        };
      }(get_state);
    }
    return new om_tools.core.t26594(get_state, owner, state_proxy, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 55, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 176, new cljs.core.Keyword(null, "column", "column", 2078222095), 7, new cljs.core.Keyword(null, "line", "line", 212345235), 161, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/resources/public/js/out-dev/om_tools/core.cljs"], 
    null));
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function() {
  var set_state_QMARK__BANG_ = null;
  var set_state_QMARK__BANG___2 = function(owner, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, v);
    }
  };
  var set_state_QMARK__BANG___3 = function(owner, korks, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, korks, v);
    }
  };
  set_state_QMARK__BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_QMARK__BANG___2.call(this, owner, korks);
      case 3:
        return set_state_QMARK__BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_QMARK__BANG___2;
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_QMARK__BANG___3;
  return set_state_QMARK__BANG_;
}();
goog.provide("om_bootstrap.mixins");
goog.require("cljs.core");
goog.require("schema.core");
goog.require("om_tools.mixin");
goog.require("om.core");
goog.require("cljs.core.async");
var ufv___26561 = schema.utils.use_fn_validation;
var output_schema26554_26562 = schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null));
var input_schema26555_26563 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "target", "target", 1893533248, null)), schema.core.one.call(null, schema.core.Str, new cljs.core.Symbol(null, "event-type", "event-type", 1960254340, null)), schema.core.one.call(null, schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), new cljs.core.Symbol(null, "callback", "callback", 935395299, null))], null);
var input_checker26556_26564 = schema.core.checker.call(null, input_schema26555_26563);
var output_checker26557_26565 = schema.core.checker.call(null, output_schema26554_26562);
om_bootstrap.mixins.event_listener = function(ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565) {
  return function event_listener(G__26558, G__26559, G__26560) {
    var validate__10827__auto__ = ufv___26561.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26566 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26558, G__26559, G__26560], null);
      var temp__4126__auto___26567 = input_checker26556_26564.call(null, args__10828__auto___26566);
      if (cljs.core.truth_(temp__4126__auto___26567)) {
        var error__10829__auto___26568 = temp__4126__auto___26567;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "event-listener", "event-listener", 809979412, null), cljs.core.pr_str.call(null, error__10829__auto___26568)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26568, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26566, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26555_26563, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var target = G__26558;
      var event_type = G__26559;
      var callback = G__26560;
      while (true) {
        if (cljs.core.truth_(target.addEventListener)) {
          target.addEventListener(event_type, callback, false);
          return function(validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565) {
            return function() {
              return target.removeEventListener(event_type, callback, false);
            };
          }(validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565);
        } else {
          if (cljs.core.truth_(target.attachEvent)) {
            var event_type__$1 = [cljs.core.str("on"), cljs.core.str(event_type)].join("");
            target.attachEvent(event_type__$1, callback);
            return function(event_type__$1, validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565) {
              return function() {
                return target.detachEvent(event_type__$1, callback);
              };
            }(event_type__$1, validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565);
          } else {
            return function(validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565) {
              return function() {
                return null;
              };
            }(validate__10827__auto__, ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565);
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26569 = output_checker26557_26565.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26569)) {
        var error__10829__auto___26570 = temp__4126__auto___26569;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "event-listener", "event-listener", 809979412, null), cljs.core.pr_str.call(null, error__10829__auto___26570)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26570, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26554_26562, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26561, output_schema26554_26562, input_schema26555_26563, input_checker26556_26564, output_checker26557_26565);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.mixins.event_listener), schema.core.make_fn_schema.call(null, output_schema26554_26562, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26555_26563], null)));
om_bootstrap.mixins.set_listener_mixin = {"set_listener":function(target26575, event_type26576, callback26577) {
  var this26574 = this;
  return function(this26574) {
    return function(owner, target, event_type, callback) {
      var remove_fn = om_bootstrap.mixins.event_listener.call(null, target, event_type, callback);
      return owner.listeners.push(remove_fn);
    };
  }(this26574).call(null, this26574, target26575, event_type26576, callback26577);
}, "componentWillUnmount":function() {
  var this26573 = this;
  return function(this26573) {
    return function(owner) {
      return owner.listeners.map(function(this26573) {
        return function(p1__26571_SHARP_) {
          return p1__26571_SHARP_.call(null);
        };
      }(this26573));
    };
  }(this26573).call(null, this26573);
}, "componentWillMount":function() {
  var this26572 = this;
  return function(this26572) {
    return function(owner) {
      return owner.listeners = [];
    };
  }(this26572).call(null, this26572);
}};
om_bootstrap.mixins.set_timeout_mixin = {"set_timeout":function(f26582, timeout26583) {
  var this26581 = this;
  return function(this26581) {
    return function(owner, f, timeout) {
      var timeout__$1 = setTimeout(f, timeout);
      return owner.timeouts.push(timeout__$1);
    };
  }(this26581).call(null, this26581, f26582, timeout26583);
}, "componentWillUnmount":function() {
  var this26580 = this;
  return function(this26580) {
    return function(owner) {
      return owner.timeouts.map(function(this26580) {
        return function(p1__26578_SHARP_) {
          return clearTimeout(p1__26578_SHARP_);
        };
      }(this26580));
    };
  }(this26580).call(null, this26580);
}, "componentWillMount":function() {
  var this26579 = this;
  return function(this26579) {
    return function(owner) {
      return owner.timeouts = [];
    };
  }(this26579).call(null, this26579);
}};
om_bootstrap.mixins.in_root_QMARK_ = function in_root_QMARK_(node, root) {
  var node__$1 = node;
  while (true) {
    if (node__$1 == null) {
      return false;
    } else {
      if (cljs.core._EQ_.call(null, root, node__$1)) {
        return true;
      } else {
        var G__26584 = node__$1.parentNode;
        node__$1 = G__26584;
        continue;
      }
    }
    break;
  }
};
om_bootstrap.mixins.ESCAPE_KEY = 27;
om_bootstrap.mixins.bind_root_close_handlers_BANG_ = function bind_root_close_handlers_BANG_(owner) {
  var set_state = owner["setDropdownState"];
  return owner.dropdownListeners = [om_bootstrap.mixins.event_listener.call(null, document, "click", function(set_state) {
    return function(e) {
      if (om_bootstrap.mixins.in_root_QMARK_.call(null, e.target, om.core.get_node.call(null, owner))) {
        return null;
      } else {
        return set_state.call(null, false);
      }
    };
  }(set_state)), om_bootstrap.mixins.event_listener.call(null, document, "keyup", function(set_state) {
    return function(e) {
      if (cljs.core._EQ_.call(null, om_bootstrap.mixins.ESCAPE_KEY, e.keyCode)) {
        return set_state.call(null, false);
      } else {
        return null;
      }
    };
  }(set_state))];
};
om_bootstrap.mixins.unbind_root_close_handlers_BANG_ = function unbind_root_close_handlers_BANG_(owner) {
  var temp__4126__auto__ = owner.dropdownListeners;
  if (cljs.core.truth_(temp__4126__auto__)) {
    var listeners = temp__4126__auto__;
    cljs.core.map.call(null, function(listeners, temp__4126__auto__) {
      return function(p1__26585_SHARP_) {
        return p1__26585_SHARP_.call(null);
      };
    }(listeners, temp__4126__auto__), listeners);
    return owner.dropdownListeners = null;
  } else {
    return null;
  }
};
om_bootstrap.mixins.dropdown_mixin = {"setDropdownState":function(open_QMARK_26590) {
  var this26589 = this;
  return function(this26589) {
    return function(owner, open_QMARK_) {
      if (cljs.core.truth_(open_QMARK_)) {
        om_bootstrap.mixins.bind_root_close_handlers_BANG_.call(null, owner);
      } else {
        om_bootstrap.mixins.unbind_root_close_handlers_BANG_.call(null, owner);
      }
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "open?", "open?", 1238443125)], null), open_QMARK_);
    };
  }(this26589).call(null, this26589, open_QMARK_26590);
}, "isDropdownOpen":function() {
  var this26588 = this;
  return function(this26588) {
    return function(owner) {
      return om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1238443125));
    };
  }(this26588).call(null, this26588);
}, "componentWillUnmount":function() {
  var this26587 = this;
  return function(this26587) {
    return function(owner) {
      return om_bootstrap.mixins.unbind_root_close_handlers_BANG_.call(null, owner);
    };
  }(this26587).call(null, this26587);
}, "getInitialState":function() {
  var this26586 = this;
  return function(this26586) {
    return function(_) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null);
    };
  }(this26586).call(null, this26586);
}};
goog.provide("om_bootstrap.util");
goog.require("cljs.core");
goog.require("schema.core");
goog.require("om.core");
om_bootstrap.util.merge_with_fns = function merge_with_fns(k__GT_fn, maps) {
  var merge_entry = function merge_entry(m, e) {
    var k = cljs.core.key.call(null, e);
    var v = cljs.core.val.call(null, e);
    var temp__4124__auto__ = function() {
      var and__3616__auto__ = cljs.core.contains_QMARK_.call(null, m, k);
      if (and__3616__auto__) {
        return k__GT_fn.call(null, k);
      } else {
        return and__3616__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var f = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
    } else {
      return cljs.core.assoc.call(null, m, k, v);
    }
  };
  var merge = function merge(m1, m2) {
    return cljs.core.reduce.call(null, merge_entry, function() {
      var or__3628__auto__ = m1;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), cljs.core.seq.call(null, m2));
  };
  return cljs.core.reduce.call(null, merge, cljs.core.PersistentArrayMap.EMPTY, maps);
};
var ufv___26446 = schema.utils.use_fn_validation;
var output_schema26441_26447 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Any], null);
var input_schema26442_26448 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "x", "x", -555367584, null))], null);
var input_checker26443_26449 = schema.core.checker.call(null, input_schema26442_26448);
var output_checker26444_26450 = schema.core.checker.call(null, output_schema26441_26447);
om_bootstrap.util.collectify = function(ufv___26446, output_schema26441_26447, input_schema26442_26448, input_checker26443_26449, output_checker26444_26450) {
  return function collectify(G__26445) {
    var validate__10827__auto__ = ufv___26446.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26451 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26445], null);
      var temp__4126__auto___26452 = input_checker26443_26449.call(null, args__10828__auto___26451);
      if (cljs.core.truth_(temp__4126__auto___26452)) {
        var error__10829__auto___26453 = temp__4126__auto___26452;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "collectify", "collectify", -1779603030, null), cljs.core.pr_str.call(null, error__10829__auto___26453)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26453, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26451, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), input_schema26442_26448, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var x = G__26445;
      while (true) {
        if (cljs.core.sequential_QMARK_.call(null, x)) {
          return x;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26454 = output_checker26444_26450.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26454)) {
        var error__10829__auto___26455 = temp__4126__auto___26454;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "collectify", "collectify", -1779603030, null), cljs.core.pr_str.call(null, error__10829__auto___26455)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26455, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), output_schema26441_26447, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26446, output_schema26441_26447, input_schema26442_26448, input_checker26443_26449, output_checker26444_26450);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.collectify), schema.core.make_fn_schema.call(null, output_schema26441_26447, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26442_26448], null)));
om_bootstrap.util.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
var ufv___26461 = schema.utils.use_fn_validation;
var output_schema26456_26462 = schema.core.Bool;
var input_schema26457_26463 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "x", "x", -555367584, null))], null);
var input_checker26458_26464 = schema.core.checker.call(null, input_schema26457_26463);
var output_checker26459_26465 = schema.core.checker.call(null, output_schema26456_26462);
om_bootstrap.util.om_component_QMARK_ = function(ufv___26461, output_schema26456_26462, input_schema26457_26463, input_checker26458_26464, output_checker26459_26465) {
  return function om_component_QMARK_(G__26460) {
    var validate__10827__auto__ = ufv___26461.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26466 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26460], null);
      var temp__4126__auto___26467 = input_checker26458_26464.call(null, args__10828__auto___26466);
      if (cljs.core.truth_(temp__4126__auto___26467)) {
        var error__10829__auto___26468 = temp__4126__auto___26467;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "om-component?", "om-component?", 534068525, null), cljs.core.pr_str.call(null, error__10829__auto___26468)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26468, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26466, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26457_26463, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var x = G__26460;
      while (true) {
        return cljs.core.boolean$.call(null, om_bootstrap.util.get_props.call(null, x));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26469 = output_checker26459_26465.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26469)) {
        var error__10829__auto___26470 = temp__4126__auto___26469;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "om-component?", "om-component?", 534068525, null), cljs.core.pr_str.call(null, error__10829__auto___26470)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26470, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26456_26462, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26461, output_schema26456_26462, input_schema26457_26463, input_checker26458_26464, output_checker26459_26465);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.om_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema26456_26462, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26457_26463], null)));
var ufv___26476 = schema.utils.use_fn_validation;
var output_schema26471_26477 = schema.core.Bool;
var input_schema26472_26478 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "child", "child", -2030468224, null))], null);
var input_checker26473_26479 = schema.core.checker.call(null, input_schema26472_26478);
var output_checker26474_26480 = schema.core.checker.call(null, output_schema26471_26477);
om_bootstrap.util.strict_valid_component_QMARK_ = function(ufv___26476, output_schema26471_26477, input_schema26472_26478, input_checker26473_26479, output_checker26474_26480) {
  return function strict_valid_component_QMARK_(G__26475) {
    var validate__10827__auto__ = ufv___26476.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26481 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26475], null);
      var temp__4126__auto___26482 = input_checker26473_26479.call(null, args__10828__auto___26481);
      if (cljs.core.truth_(temp__4126__auto___26482)) {
        var error__10829__auto___26483 = temp__4126__auto___26482;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "strict-valid-component?", "strict-valid-component?", 130165335, null), cljs.core.pr_str.call(null, error__10829__auto___26483)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26483, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26481, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26472_26478, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var child = G__26475;
      while (true) {
        return React["isValidComponent"].call(null, child);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26484 = output_checker26474_26480.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26484)) {
        var error__10829__auto___26485 = temp__4126__auto___26484;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "strict-valid-component?", "strict-valid-component?", 130165335, null), cljs.core.pr_str.call(null, error__10829__auto___26485)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26485, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26471_26477, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26476, output_schema26471_26477, input_schema26472_26478, input_checker26473_26479, output_checker26474_26480);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.strict_valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema26471_26477, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26472_26478], null)));
var ufv___26491 = schema.utils.use_fn_validation;
var output_schema26486_26492 = schema.core.Bool;
var input_schema26487_26493 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "child", "child", -2030468224, null))], null);
var input_checker26488_26494 = schema.core.checker.call(null, input_schema26487_26493);
var output_checker26489_26495 = schema.core.checker.call(null, output_schema26486_26492);
om_bootstrap.util.valid_component_QMARK_ = function(ufv___26491, output_schema26486_26492, input_schema26487_26493, input_checker26488_26494, output_checker26489_26495) {
  return function valid_component_QMARK_(G__26490) {
    var validate__10827__auto__ = ufv___26491.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26496 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26490], null);
      var temp__4126__auto___26497 = input_checker26488_26494.call(null, args__10828__auto___26496);
      if (cljs.core.truth_(temp__4126__auto___26497)) {
        var error__10829__auto___26498 = temp__4126__auto___26497;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "valid-component?", "valid-component?", -519675438, null), cljs.core.pr_str.call(null, error__10829__auto___26498)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26498, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26496, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26487_26493, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var child = G__26490;
      while (true) {
        var or__3628__auto__ = typeof child === "string";
        if (or__3628__auto__) {
          return or__3628__auto__;
        } else {
          var or__3628__auto____$1 = typeof child === "number";
          if (or__3628__auto____$1) {
            return or__3628__auto____$1;
          } else {
            return om_bootstrap.util.strict_valid_component_QMARK_.call(null, child);
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26499 = output_checker26489_26495.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26499)) {
        var error__10829__auto___26500 = temp__4126__auto___26499;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "valid-component?", "valid-component?", -519675438, null), cljs.core.pr_str.call(null, error__10829__auto___26500)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26500, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26486_26492, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26491, output_schema26486_26492, input_schema26487_26493, input_checker26488_26494, output_checker26489_26495);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema26486_26492, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26487_26493], null)));
var ufv___26506 = schema.utils.use_fn_validation;
var output_schema26501_26507 = schema.core.Bool;
var input_schema26502_26508 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "children", "children", 699969545, null))], null);
var input_checker26503_26509 = schema.core.checker.call(null, input_schema26502_26508);
var output_checker26504_26510 = schema.core.checker.call(null, output_schema26501_26507);
om_bootstrap.util.some_valid_component_QMARK_ = function(ufv___26506, output_schema26501_26507, input_schema26502_26508, input_checker26503_26509, output_checker26504_26510) {
  return function some_valid_component_QMARK_(G__26505) {
    var validate__10827__auto__ = ufv___26506.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26511 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26505], null);
      var temp__4126__auto___26512 = input_checker26503_26509.call(null, args__10828__auto___26511);
      if (cljs.core.truth_(temp__4126__auto___26512)) {
        var error__10829__auto___26513 = temp__4126__auto___26512;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "some-valid-component?", "some-valid-component?", -171767082, null), cljs.core.pr_str.call(null, error__10829__auto___26513)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26513, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26511, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26502_26508, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var children = G__26505;
      while (true) {
        return cljs.core.boolean$.call(null, cljs.core.some.call(null, om_bootstrap.util.valid_component_QMARK_, children));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26514 = output_checker26504_26510.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26514)) {
        var error__10829__auto___26515 = temp__4126__auto___26514;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "some-valid-component?", "some-valid-component?", -171767082, null), cljs.core.pr_str.call(null, error__10829__auto___26515)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26515, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema26501_26507, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26506, output_schema26501_26507, input_schema26502_26508, input_checker26503_26509, output_checker26504_26510);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.some_valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema26501_26507, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26502_26508], null)));
om_bootstrap.util.chain_fns = function chain_fns(l, r) {
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = l;
    if (cljs.core.truth_(and__3616__auto__)) {
      return r;
    } else {
      return and__3616__auto__;
    }
  }())) {
    return function() {
      var G__26516__delegate = function(args) {
        cljs.core.apply.call(null, l, args);
        return cljs.core.apply.call(null, r, args);
      };
      var G__26516 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__26516__delegate.call(this, args);
      };
      G__26516.cljs$lang$maxFixedArity = 0;
      G__26516.cljs$lang$applyTo = function(arglist__26517) {
        var args = cljs.core.seq(arglist__26517);
        return G__26516__delegate(args);
      };
      G__26516.cljs$core$IFn$_invoke$arity$variadic = G__26516__delegate;
      return G__26516;
    }();
  } else {
    var or__3628__auto__ = l;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return r;
    }
  }
};
om_bootstrap.util.react_merges = function() {
  var merge_class = function(l, r) {
    return[cljs.core.str(l), cljs.core.str(" "), cljs.core.str(r)].join("");
  };
  var orig_fn = function(merge_class) {
    return function(l, r) {
      var or__3628__auto__ = l;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return r;
      }
    };
  }(merge_class);
  var empty_fn = function(merge_class, orig_fn) {
    return function(_, ___$1) {
      return null;
    };
  }(merge_class, orig_fn);
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "on-blur", "on-blur", 814300747), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, 
  "on-select", "on-select", -192407950), new cljs.core.Keyword(null, "class", "class", -2030961996)], [empty_fn, empty_fn, orig_fn, om_bootstrap.util.chain_fns, om_bootstrap.util.chain_fns, merge_class, cljs.core.merge, om_bootstrap.util.chain_fns, merge_class]);
}();
om_bootstrap.util.merge_props = function() {
  var merge_props__delegate = function(prop_maps) {
    var react_merge = function react_merge(xs) {
      return om_bootstrap.util.merge_with_fns.call(null, om_bootstrap.util.react_merges, xs);
    };
    var normalize_class = function normalize_class(m) {
      if (cljs.core.contains_QMARK_.call(null, m, new cljs.core.Keyword(null, "class", "class", -2030961996))) {
        return react_merge.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.dissoc.call(null, m, new cljs.core.Keyword(null, "class", "class", -2030961996)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(m)], null)], null));
      } else {
        return m;
      }
    };
    return react_merge.call(null, cljs.core.map.call(null, normalize_class, prop_maps));
  };
  var merge_props = function(var_args) {
    var prop_maps = null;
    if (arguments.length > 0) {
      prop_maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_props__delegate.call(this, prop_maps);
  };
  merge_props.cljs$lang$maxFixedArity = 0;
  merge_props.cljs$lang$applyTo = function(arglist__26518) {
    var prop_maps = cljs.core.seq(arglist__26518);
    return merge_props__delegate(prop_maps);
  };
  merge_props.cljs$core$IFn$_invoke$arity$variadic = merge_props__delegate;
  return merge_props;
}();
om_bootstrap.util.copy_js = function copy_js(arr) {
  var ret = function() {
    var obj26526 = {};
    return obj26526;
  }();
  var seq__26527_26531 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, arr));
  var chunk__26528_26532 = null;
  var count__26529_26533 = 0;
  var i__26530_26534 = 0;
  while (true) {
    if (i__26530_26534 < count__26529_26533) {
      var k_26535 = cljs.core._nth.call(null, chunk__26528_26532, i__26530_26534);
      if (cljs.core.truth_(arr.hasOwnProperty(k_26535))) {
        ret[k_26535] = arr[k_26535];
      } else {
      }
      var G__26536 = seq__26527_26531;
      var G__26537 = chunk__26528_26532;
      var G__26538 = count__26529_26533;
      var G__26539 = i__26530_26534 + 1;
      seq__26527_26531 = G__26536;
      chunk__26528_26532 = G__26537;
      count__26529_26533 = G__26538;
      i__26530_26534 = G__26539;
      continue;
    } else {
      var temp__4126__auto___26540 = cljs.core.seq.call(null, seq__26527_26531);
      if (temp__4126__auto___26540) {
        var seq__26527_26541__$1 = temp__4126__auto___26540;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__26527_26541__$1)) {
          var c__4415__auto___26542 = cljs.core.chunk_first.call(null, seq__26527_26541__$1);
          var G__26543 = cljs.core.chunk_rest.call(null, seq__26527_26541__$1);
          var G__26544 = c__4415__auto___26542;
          var G__26545 = cljs.core.count.call(null, c__4415__auto___26542);
          var G__26546 = 0;
          seq__26527_26531 = G__26543;
          chunk__26528_26532 = G__26544;
          count__26529_26533 = G__26545;
          i__26530_26534 = G__26546;
          continue;
        } else {
          var k_26547 = cljs.core.first.call(null, seq__26527_26541__$1);
          if (cljs.core.truth_(arr.hasOwnProperty(k_26547))) {
            ret[k_26547] = arr[k_26547];
          } else {
          }
          var G__26548 = cljs.core.next.call(null, seq__26527_26541__$1);
          var G__26549 = null;
          var G__26550 = 0;
          var G__26551 = 0;
          seq__26527_26531 = G__26548;
          chunk__26528_26532 = G__26549;
          count__26529_26533 = G__26550;
          i__26530_26534 = G__26551;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
om_bootstrap.util.clone_om = function clone_om(child, extra_props) {
  var om_props = om_bootstrap.util.get_props.call(null, child);
  return child.constructor(function() {
    var G__26553 = om_bootstrap.util.copy_js.call(null, child.props);
    G__26553["__om_cursor"] = cljs.core.fn_QMARK_.call(null, extra_props) ? extra_props.call(null, om_props) : om_bootstrap.util.merge_props.call(null, om_props, extra_props);
    return G__26553;
  }());
};
om_bootstrap.util.clone_basic_react = function clone_basic_react(child, extra_props) {
  var props = cljs.core.js__GT_clj.call(null, child.props, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  var new_props = cljs.core.merge.call(null, cljs.core.fn_QMARK_.call(null, extra_props) ? extra_props.call(null, props) : om_bootstrap.util.merge_props.call(null, props, extra_props), function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(props);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var children = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), children], null);
    } else {
      return null;
    }
  }());
  return child.constructor(cljs.core.clj__GT_js.call(null, new_props));
};
om_bootstrap.util.clone_with_props = function() {
  var clone_with_props = null;
  var clone_with_props__1 = function(child) {
    return clone_with_props.call(null, child, cljs.core.PersistentArrayMap.EMPTY);
  };
  var clone_with_props__2 = function(child, extra_props) {
    if (cljs.core.not.call(null, om_bootstrap.util.strict_valid_component_QMARK_.call(null, child))) {
      return child;
    } else {
      if (cljs.core.map_QMARK_.call(null, extra_props) && cljs.core.empty_QMARK_.call(null, extra_props)) {
        return child.constructor(child.props);
      } else {
        if (om_bootstrap.util.om_component_QMARK_.call(null, child)) {
          return om_bootstrap.util.clone_om.call(null, child, extra_props);
        } else {
          return om_bootstrap.util.clone_basic_react.call(null, child, extra_props);
        }
      }
    }
  };
  clone_with_props = function(child, extra_props) {
    switch(arguments.length) {
      case 1:
        return clone_with_props__1.call(this, child);
      case 2:
        return clone_with_props__2.call(this, child, extra_props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_with_props.cljs$core$IFn$_invoke$arity$1 = clone_with_props__1;
  clone_with_props.cljs$core$IFn$_invoke$arity$2 = clone_with_props__2;
  return clone_with_props;
}();
goog.provide("om_bootstrap.types");
goog.require("cljs.core");
goog.require("schema.core");
var ufv___26363 = schema.utils.use_fn_validation;
var output_schema26358_26364 = schema.core.Any;
var input_schema26359_26365 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), new cljs.core.Symbol(null, "schema", "schema", 58529736, null))], null);
var input_checker26360_26366 = schema.core.checker.call(null, input_schema26359_26365);
var output_checker26361_26367 = schema.core.checker.call(null, output_schema26358_26364);
om_bootstrap.types.schema_keys = function(ufv___26363, output_schema26358_26364, input_schema26359_26365, input_checker26360_26366, output_checker26361_26367) {
  return function schema_keys(G__26362) {
    var validate__10827__auto__ = ufv___26363.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26368 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26362], null);
      var temp__4126__auto___26369 = input_checker26360_26366.call(null, args__10828__auto___26368);
      if (cljs.core.truth_(temp__4126__auto___26369)) {
        var error__10829__auto___26370 = temp__4126__auto___26369;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "schema-keys", "schema-keys", 947810359, null), cljs.core.pr_str.call(null, error__10829__auto___26370)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26370, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26368, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), input_schema26359_26365, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var schema__$1 = G__26362;
      while (true) {
        return cljs.core.map.call(null, function(validate__10827__auto__, ufv___26363, output_schema26358_26364, input_schema26359_26365, input_checker26360_26366, output_checker26361_26367) {
          return function(k) {
            if (schema.core.optional_key_QMARK_.call(null, k)) {
              return(new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(k);
            } else {
              return k;
            }
          };
        }(validate__10827__auto__, ufv___26363, output_schema26358_26364, input_schema26359_26365, input_checker26360_26366, output_checker26361_26367), cljs.core.keys.call(null, schema__$1));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26371 = output_checker26361_26367.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26371)) {
        var error__10829__auto___26372 = temp__4126__auto___26371;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "schema-keys", "schema-keys", 947810359, null), cljs.core.pr_str.call(null, error__10829__auto___26372)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26372, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), output_schema26358_26364, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26363, output_schema26358_26364, input_schema26359_26365, input_checker26360_26366, output_checker26361_26367);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.schema_keys), schema.core.make_fn_schema.call(null, output_schema26358_26364, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26359_26365], null)));
var ufv___26378 = schema.utils.use_fn_validation;
var output_schema26373_26379 = schema.core.Any;
var input_schema26374_26380 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "schema", "schema", 58529736, null))], null);
var input_checker26375_26381 = schema.core.checker.call(null, input_schema26374_26380);
var output_checker26376_26382 = schema.core.checker.call(null, output_schema26373_26379);
om_bootstrap.types.at_least = function(ufv___26378, output_schema26373_26379, input_schema26374_26380, input_checker26375_26381, output_checker26376_26382) {
  return function at_least(G__26377) {
    var validate__10827__auto__ = ufv___26378.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26383 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26377], null);
      var temp__4126__auto___26384 = input_checker26375_26381.call(null, args__10828__auto___26383);
      if (cljs.core.truth_(temp__4126__auto___26384)) {
        var error__10829__auto___26385 = temp__4126__auto___26384;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "at-least", "at-least", 1907728373, null), cljs.core.pr_str.call(null, error__10829__auto___26385)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26385, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26383, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), input_schema26374_26380, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var schema__$1 = G__26377;
      while (true) {
        return cljs.core.assoc.call(null, schema__$1, schema.core.Any, schema.core.Any);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26386 = output_checker26376_26382.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26386)) {
        var error__10829__auto___26387 = temp__4126__auto___26386;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "at-least", "at-least", 1907728373, null), cljs.core.pr_str.call(null, error__10829__auto___26387)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26387, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), output_schema26373_26379, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26378, output_schema26373_26379, input_schema26374_26380, input_checker26375_26381, output_checker26376_26382);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.at_least), schema.core.make_fn_schema.call(null, output_schema26373_26379, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26374_26380], null)));
om_bootstrap.types.Component = schema.core.named.call(null, schema.core.Any, "Alias for an om component, since I don't know what type to put here.");
om_bootstrap.types.Renderable = schema.core.named.call(null, schema.core.Any, "Anything that can get rendered.");
om_bootstrap.types.class_map = cljs.core.PersistentHashMap.fromArrays(["alert", "label", "form", "progress-bar", "modal", "navbar", "button-toolbar", "panel-group", "nav", "column", "row", "input-group", "panel", "well", "button-group", "button", "glyphicon"], ["alert", "label", "form", "progress-bar", "modal", "navbar", "btn-toolbar", "panel-group", "nav", "col", "row", "input-group", "panel", "well", "btn-group", "btn", "glyphicon"]);
om_bootstrap.types.style_map = cljs.core.PersistentHashMap.fromArrays(["success", "warning", "inline", "pills", "info", "tabs", "primary", "danger", "link", "default"], ["success", "warning", "inline", "pills", "info", "tabs", "primary", "danger", "link", "default"]);
om_bootstrap.types.size_map = new cljs.core.PersistentArrayMap(null, 4, ["large", "lg", "medium", "md", "small", "sm", "xsmall", "xs"], null);
om_bootstrap.types.BSClass = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.class_map));
om_bootstrap.types.BSStyle = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.style_map));
om_bootstrap.types.BSSize = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.size_map));
om_bootstrap.types.BootstrapClass = new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590)), om_bootstrap.types.BSClass, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998)), om_bootstrap.types.BSStyle, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)), om_bootstrap.types.BSSize], true, false);
om_bootstrap.types.bootstrap = function bootstrap(schema__$1) {
  var bootstrap_schema = cljs.core.apply.call(null, cljs.core.dissoc, om_bootstrap.types.BootstrapClass, cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, cljs.core.select_keys.call(null, schema__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)], 
  null)))));
  return om_bootstrap.types.at_least.call(null, cljs.core.merge.call(null, bootstrap_schema, schema__$1));
};
var ufv___26400 = schema.utils.use_fn_validation;
var output_schema26388_26401 = schema.core.pair.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), "om-bootstrap options.", new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), "all other props.");
var input_schema26389_26402 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "schema", "schema", 58529736, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null))], null);
var input_schema26394_26403 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "schema", "schema", 58529736, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "defaults", "defaults", -1678408555, null))], null);
var input_checker26390_26404 = schema.core.checker.call(null, input_schema26389_26402);
var output_checker26391_26405 = schema.core.checker.call(null, output_schema26388_26401);
var input_checker26395_26406 = schema.core.checker.call(null, input_schema26394_26403);
var output_checker26396_26407 = schema.core.checker.call(null, output_schema26388_26401);
om_bootstrap.types.separate = function(ufv___26400, output_schema26388_26401, input_schema26389_26402, input_schema26394_26403, input_checker26390_26404, output_checker26391_26405, input_checker26395_26406, output_checker26396_26407) {
  return function() {
    var separate = null;
    var separate__2 = function(G__26392, G__26393) {
      var validate__10827__auto__ = ufv___26400.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26408 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26392, G__26393], null);
        var temp__4126__auto___26409 = input_checker26390_26404.call(null, args__10828__auto___26408);
        if (cljs.core.truth_(temp__4126__auto___26409)) {
          var error__10829__auto___26410 = temp__4126__auto___26409;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "separate", "separate", 15703118, null), cljs.core.pr_str.call(null, error__10829__auto___26410)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26410, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26408, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26389_26402, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var schema__$1 = G__26392;
        var opts = G__26393;
        while (true) {
          return separate.call(null, schema__$1, opts, cljs.core.PersistentArrayMap.EMPTY);
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26411 = output_checker26391_26405.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26411)) {
          var error__10829__auto___26412 = temp__4126__auto___26411;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "separate", "separate", 15703118, null), cljs.core.pr_str.call(null, error__10829__auto___26412)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26412, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26388_26401, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var separate__3 = function(G__26397, G__26398, G__26399) {
      var validate__10827__auto__ = ufv___26400.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26413 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26397, G__26398, G__26399], null);
        var temp__4126__auto___26414 = input_checker26395_26406.call(null, args__10828__auto___26413);
        if (cljs.core.truth_(temp__4126__auto___26414)) {
          var error__10829__auto___26415 = temp__4126__auto___26414;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "separate", "separate", 15703118, null), cljs.core.pr_str.call(null, error__10829__auto___26415)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26415, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26413, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26394_26403, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var schema__$1 = G__26397;
        var opts = G__26398;
        var defaults = G__26399;
        while (true) {
          var ks = cljs.core.set.call(null, om_bootstrap.types.schema_keys.call(null, om_bootstrap.types.bootstrap.call(null, schema__$1)));
          var opts__$1 = cljs.core.merge.call(null, defaults, opts);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.comp.call(null, ks, cljs.core.key), opts__$1)), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, cljs.core.comp.call(null, ks, cljs.core.key), opts__$1))], null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26416 = output_checker26396_26407.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26416)) {
          var error__10829__auto___26417 = temp__4126__auto___26416;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "separate", "separate", 15703118, null), cljs.core.pr_str.call(null, error__10829__auto___26417)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26417, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26388_26401, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    separate = function(G__26397, G__26398, G__26399) {
      switch(arguments.length) {
        case 2:
          return separate__2.call(this, G__26397, G__26398);
        case 3:
          return separate__3.call(this, G__26397, G__26398, G__26399);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    separate.cljs$core$IFn$_invoke$arity$2 = separate__2;
    separate.cljs$core$IFn$_invoke$arity$3 = separate__3;
    return separate;
  }();
}(ufv___26400, output_schema26388_26401, input_schema26389_26402, input_schema26394_26403, input_checker26390_26404, output_checker26391_26405, input_checker26395_26406, output_checker26396_26407);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.separate), schema.core.make_fn_schema.call(null, output_schema26388_26401, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26389_26402, input_schema26394_26403], null)));
var ufv___26431 = schema.utils.use_fn_validation;
var output_schema26418_26432 = new cljs.core.PersistentArrayMap.fromArray([schema.core.Str, schema.core.Bool], true, false);
var input_schema26419_26433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.types.at_least.call(null, om_bootstrap.types.BootstrapClass), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null);
var input_checker26420_26434 = schema.core.checker.call(null, input_schema26419_26433);
var output_checker26421_26435 = schema.core.checker.call(null, output_schema26418_26432);
om_bootstrap.types.bs_class_set = function(ufv___26431, output_schema26418_26432, input_schema26419_26433, input_checker26420_26434, output_checker26421_26435) {
  return function bs_class_set(G__26422) {
    var validate__10827__auto__ = ufv___26431.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26436 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26422], null);
      var temp__4126__auto___26437 = input_checker26420_26434.call(null, args__10828__auto___26436);
      if (cljs.core.truth_(temp__4126__auto___26437)) {
        var error__10829__auto___26438 = temp__4126__auto___26437;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "bs-class-set", "bs-class-set", 1457832630, null), cljs.core.pr_str.call(null, error__10829__auto___26438)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26438, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26436, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), input_schema26419_26433, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var G__26428 = G__26422;
      var map__26429 = G__26428;
      var map__26429__$1 = cljs.core.seq_QMARK_.call(null, map__26429) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26429) : map__26429;
      var bs_size = cljs.core.get.call(null, map__26429__$1, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754));
      var bs_style = cljs.core.get.call(null, map__26429__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
      var bs_class = cljs.core.get.call(null, map__26429__$1, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590));
      var G__26428__$1 = G__26428;
      while (true) {
        var map__26430 = G__26428__$1;
        var map__26430__$1 = cljs.core.seq_QMARK_.call(null, map__26430) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26430) : map__26430;
        var bs_size__$1 = cljs.core.get.call(null, map__26430__$1, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754));
        var bs_style__$1 = cljs.core.get.call(null, map__26430__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
        var bs_class__$1 = cljs.core.get.call(null, map__26430__$1, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590));
        var temp__4124__auto__ = om_bootstrap.types.class_map.call(null, bs_class__$1);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var klass = temp__4124__auto__;
          var prefix = [cljs.core.str(cljs.core.name.call(null, klass)), cljs.core.str("-")].join("");
          return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap.fromArray([klass, true], true, false), function() {
            var temp__4126__auto__ = om_bootstrap.types.size_map.call(null, bs_size__$1);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var size = temp__4126__auto__;
              return new cljs.core.PersistentArrayMap.fromArray([[cljs.core.str(prefix), cljs.core.str(cljs.core.name.call(null, size))].join(""), true], true, false);
            } else {
              return null;
            }
          }(), function() {
            var temp__4126__auto__ = om_bootstrap.types.style_map.call(null, bs_style__$1);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var style = temp__4126__auto__;
              return new cljs.core.PersistentArrayMap.fromArray([[cljs.core.str(prefix), cljs.core.str(cljs.core.name.call(null, style))].join(""), true], true, false);
            } else {
              return null;
            }
          }());
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26439 = output_checker26421_26435.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26439)) {
        var error__10829__auto___26440 = temp__4126__auto___26439;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "bs-class-set", "bs-class-set", 1457832630, null), cljs.core.pr_str.call(null, error__10829__auto___26440)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26440, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26418_26432, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26431, output_schema26418_26432, input_schema26419_26433, input_checker26420_26434, output_checker26421_26435);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.bs_class_set), schema.core.make_fn_schema.call(null, output_schema26418_26432, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26419_26433], null)));
goog.provide("om_bootstrap.button");
goog.require("cljs.core");
goog.require("om_bootstrap.types");
goog.require("schema.core");
goog.require("om_bootstrap.util");
goog.require("om_tools.dom");
goog.require("om_tools.mixin");
goog.require("om_tools.core");
goog.require("om_bootstrap.mixins");
goog.require("om.core");
om_bootstrap.button.Button = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "active?", "active?", 459499776)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "block?", "block?", 1102479923)), schema.core.Bool, schema.core.optional_key.call(null, 
new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)), schema.core.Bool], true, false));
om_bootstrap.button.ButtonGroup = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "justified?", "justified?", -1045366764)), schema.core.Bool], true, false));
var ufv___26130 = schema.utils.use_fn_validation;
var output_schema26124_26131 = schema.core.Any;
var input_schema26125_26132 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "classes", "classes", 2037804510), new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), schema.core.maybe.call(null, schema.core.Bool), new cljs.core.Keyword(null, "props", "props", 
453281727), new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false)], null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "children", "children", 699969545, null))], null);
var input_checker26126_26133 = schema.core.checker.call(null, input_schema26125_26132);
var output_checker26127_26134 = schema.core.checker.call(null, output_schema26124_26131);
om_bootstrap.button.render_anchor = function(ufv___26130, output_schema26124_26131, input_schema26125_26132, input_checker26126_26133, output_checker26127_26134) {
  return function render_anchor(G__26128, G__26129) {
    var validate__10827__auto__ = ufv___26130.get_cell();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var args__10828__auto___26135 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26128, G__26129], null);
      var temp__4126__auto___26136 = input_checker26126_26133.call(null, args__10828__auto___26135);
      if (cljs.core.truth_(temp__4126__auto___26136)) {
        var error__10829__auto___26137 = temp__4126__auto___26136;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "render-anchor", "render-anchor", -1892709609, null), cljs.core.pr_str.call(null, error__10829__auto___26137)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26137, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26135, new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema26125_26132, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    var o__10830__auto__ = function() {
      var opts = G__26128;
      var children = G__26129;
      while (true) {
        var props = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(opts), "#"), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "classes", "classes", 2037804510)).cljs$core$IFn$_invoke$arity$1(opts), 
        new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(opts))), new cljs.core.Keyword(null, "role", "role", -736691072), "button"], null);
        return om_tools.dom.element.call(null, React.DOM.a, om_bootstrap.util.merge_props.call(null, props, (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(opts)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10827__auto__)) {
      var temp__4126__auto___26138 = output_checker26127_26134.call(null, o__10830__auto__);
      if (cljs.core.truth_(temp__4126__auto___26138)) {
        var error__10829__auto___26139 = temp__4126__auto___26138;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "render-anchor", "render-anchor", -1892709609, null), cljs.core.pr_str.call(null, error__10829__auto___26139)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26139, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
        "schema", -1582001791), output_schema26124_26131, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
      } else {
      }
    } else {
    }
    return o__10830__auto__;
  };
}(ufv___26130, output_schema26124_26131, input_schema26125_26132, input_checker26126_26133, output_checker26127_26134);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.render_anchor), schema.core.make_fn_schema.call(null, output_schema26124_26131, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26125_26132], null)));
var ufv___26148 = schema.utils.use_fn_validation;
var output_schema26140_26149 = om_bootstrap.types.Component;
var input_schema26141_26150 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.Button, new cljs.core.Symbol(null, "props", "props", 2093813254, null)), schema.core.Any], null);
var input_checker26142_26151 = schema.core.checker.call(null, input_schema26141_26150);
var output_checker26143_26152 = schema.core.checker.call(null, output_schema26140_26149);
om_bootstrap.button.button = function(ufv___26148, output_schema26140_26149, input_schema26141_26150, input_checker26142_26151, output_checker26143_26152) {
  return function() {
    var button__delegate = function(G__26144, rest26145) {
      var validate__10827__auto__ = ufv___26148.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26153 = cljs.core.list_STAR_.call(null, G__26144, rest26145);
        var temp__4126__auto___26154 = input_checker26142_26151.call(null, args__10828__auto___26153);
        if (cljs.core.truth_(temp__4126__auto___26154)) {
          var error__10829__auto___26155 = temp__4126__auto___26154;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "button", "button", -1197855826, null), cljs.core.pr_str.call(null, error__10829__auto___26155)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26155, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26153, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26141_26150, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var props = G__26144;
        var children = rest26145;
        while (true) {
          var vec__26147 = om_bootstrap.types.separate.call(null, om_bootstrap.button.Button, props, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button", new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "default", new cljs.core.Keyword(null, "type", "type", 1174270348), "button"], null));
          var bs = cljs.core.nth.call(null, vec__26147, 0, null);
          var props__$1 = cljs.core.nth.call(null, vec__26147, 1, null);
          var klasses = cljs.core.truth_((new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)).cljs$core$IFn$_invoke$arity$1(bs)) ? cljs.core.PersistentArrayMap.EMPTY : om_bootstrap.types.bs_class_set.call(null, bs);
          var klasses__$1 = cljs.core.merge.call(null, klasses, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 1895962068), (new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "btn-block", "btn-block", 967079535), (new cljs.core.Keyword(null, "block?", "block?", 1102479923)).cljs$core$IFn$_invoke$arity$1(bs)], null));
          if (cljs.core.truth_((new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs))) {
            return cljs.core.apply.call(null, React.DOM.li, {"className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "active", "active", 1895962068), (new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(bs)], null)))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.button.render_anchor.call(null, 
            new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "props", "props", 453281727), props__$1, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "classes", "classes", 2037804510), klasses__$1], null), children)], null)));
          } else {
            if (cljs.core.truth_(function() {
              var or__3628__auto__ = (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$1(props__$1);
              if (cljs.core.truth_(or__3628__auto__)) {
                return or__3628__auto__;
              } else {
                return(new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)).cljs$core$IFn$_invoke$arity$1(bs);
              }
            }())) {
              return om_bootstrap.button.render_anchor.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "props", "props", 453281727), props__$1, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "classes", "classes", 2037804510), klasses__$1], null), children);
            } else {
              return om_tools.dom.element.call(null, React.DOM.button, om_bootstrap.util.merge_props.call(null, props__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, klasses__$1), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [children], null));
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26156 = output_checker26143_26152.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26156)) {
          var error__10829__auto___26157 = temp__4126__auto___26156;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "button", "button", -1197855826, null), cljs.core.pr_str.call(null, error__10829__auto___26157)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26157, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26140_26149, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var button = function(G__26144, var_args) {
      var rest26145 = null;
      if (arguments.length > 1) {
        rest26145 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return button__delegate.call(this, G__26144, rest26145);
    };
    button.cljs$lang$maxFixedArity = 1;
    button.cljs$lang$applyTo = function(arglist__26158) {
      var G__26144 = cljs.core.first(arglist__26158);
      var rest26145 = cljs.core.rest(arglist__26158);
      return button__delegate(G__26144, rest26145);
    };
    button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
    return button;
  }();
}(ufv___26148, output_schema26140_26149, input_schema26141_26150, input_checker26142_26151, output_checker26143_26152);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.button), schema.core.make_fn_schema.call(null, output_schema26140_26149, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26141_26150], null)));
var ufv___26167 = schema.utils.use_fn_validation;
var output_schema26159_26168 = om_bootstrap.types.Component;
var input_schema26160_26169 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26161_26170 = schema.core.checker.call(null, input_schema26160_26169);
var output_checker26162_26171 = schema.core.checker.call(null, output_schema26159_26168);
om_bootstrap.button.toolbar = function(ufv___26167, output_schema26159_26168, input_schema26160_26169, input_checker26161_26170, output_checker26162_26171) {
  return function() {
    var toolbar__delegate = function(G__26163, rest26164) {
      var validate__10827__auto__ = ufv___26167.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26172 = cljs.core.list_STAR_.call(null, G__26163, rest26164);
        var temp__4126__auto___26173 = input_checker26161_26170.call(null, args__10828__auto___26172);
        if (cljs.core.truth_(temp__4126__auto___26173)) {
          var error__10829__auto___26174 = temp__4126__auto___26173;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "toolbar", "toolbar", 467742462, null), cljs.core.pr_str.call(null, error__10829__auto___26174)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26174, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26172, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26160_26169, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26163;
        var children = rest26164;
        while (true) {
          var vec__26166 = om_bootstrap.types.separate.call(null, cljs.core.PersistentArrayMap.EMPTY, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button-toolbar"], null));
          var bs = cljs.core.nth.call(null, vec__26166, 0, null);
          var props = cljs.core.nth.call(null, vec__26166, 1, null);
          return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, om_bootstrap.types.bs_class_set.call(null, bs))), "role":"toolbar"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26175 = output_checker26162_26171.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26175)) {
          var error__10829__auto___26176 = temp__4126__auto___26175;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "toolbar", "toolbar", 467742462, null), cljs.core.pr_str.call(null, error__10829__auto___26176)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26176, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26159_26168, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var toolbar = function(G__26163, var_args) {
      var rest26164 = null;
      if (arguments.length > 1) {
        rest26164 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return toolbar__delegate.call(this, G__26163, rest26164);
    };
    toolbar.cljs$lang$maxFixedArity = 1;
    toolbar.cljs$lang$applyTo = function(arglist__26177) {
      var G__26163 = cljs.core.first(arglist__26177);
      var rest26164 = cljs.core.rest(arglist__26177);
      return toolbar__delegate(G__26163, rest26164);
    };
    toolbar.cljs$core$IFn$_invoke$arity$variadic = toolbar__delegate;
    return toolbar;
  }();
}(ufv___26167, output_schema26159_26168, input_schema26160_26169, input_checker26161_26170, output_checker26162_26171);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.toolbar), schema.core.make_fn_schema.call(null, output_schema26159_26168, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26160_26169], null)));
var ufv___26186 = schema.utils.use_fn_validation;
var output_schema26178_26187 = om_bootstrap.types.Component;
var input_schema26179_26188 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.ButtonGroup, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26180_26189 = schema.core.checker.call(null, input_schema26179_26188);
var output_checker26181_26190 = schema.core.checker.call(null, output_schema26178_26187);
om_bootstrap.button.button_group = function(ufv___26186, output_schema26178_26187, input_schema26179_26188, input_checker26180_26189, output_checker26181_26190) {
  return function() {
    var button_group__delegate = function(G__26182, rest26183) {
      var validate__10827__auto__ = ufv___26186.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26191 = cljs.core.list_STAR_.call(null, G__26182, rest26183);
        var temp__4126__auto___26192 = input_checker26180_26189.call(null, args__10828__auto___26191);
        if (cljs.core.truth_(temp__4126__auto___26192)) {
          var error__10829__auto___26193 = temp__4126__auto___26192;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "button-group", "button-group", 108385979, null), cljs.core.pr_str.call(null, error__10829__auto___26193)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26193, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26191, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), input_schema26179_26188, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26182;
        var children = rest26183;
        while (true) {
          var vec__26185 = om_bootstrap.types.separate.call(null, om_bootstrap.button.ButtonGroup, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button-group"], null));
          var bs = cljs.core.nth.call(null, vec__26185, 0, null);
          var props = cljs.core.nth.call(null, vec__26185, 1, null);
          var classes = cljs.core.merge.call(null, om_bootstrap.types.bs_class_set.call(null, bs), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "btn-group", "btn-group", 114866246), cljs.core.not.call(null, (new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)).cljs$core$IFn$_invoke$arity$1(bs)), new cljs.core.Keyword(null, "btn-group-vertical", "btn-group-vertical", -1273565878), (new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)).cljs$core$IFn$_invoke$arity$1(bs), 
          new cljs.core.Keyword(null, "btn-group-justified", "btn-group-justified", 1401722505), (new cljs.core.Keyword(null, "justified?", "justified?", -1045366764)).cljs$core$IFn$_invoke$arity$1(bs)], null));
          return om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.util.merge_props.call(null, props, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26194 = output_checker26181_26190.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26194)) {
          var error__10829__auto___26195 = temp__4126__auto___26194;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "button-group", "button-group", 108385979, null), cljs.core.pr_str.call(null, error__10829__auto___26195)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26195, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), output_schema26178_26187, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var button_group = function(G__26182, var_args) {
      var rest26183 = null;
      if (arguments.length > 1) {
        rest26183 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return button_group__delegate.call(this, G__26182, rest26183);
    };
    button_group.cljs$lang$maxFixedArity = 1;
    button_group.cljs$lang$applyTo = function(arglist__26196) {
      var G__26182 = cljs.core.first(arglist__26196);
      var rest26183 = cljs.core.rest(arglist__26196);
      return button_group__delegate(G__26182, rest26183);
    };
    button_group.cljs$core$IFn$_invoke$arity$variadic = button_group__delegate;
    return button_group;
  }();
}(ufv___26186, output_schema26178_26187, input_schema26179_26188, input_checker26180_26189, output_checker26181_26190);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.button_group), schema.core.make_fn_schema.call(null, output_schema26178_26187, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26179_26188], null)));
om_bootstrap.button.DropdownButton = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "title", "title", 636505583)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", -793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)), schema.core.make_fn_schema.call(null, schema.core.Any, 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, 
"nav-item?", "nav-item?", -1419487031)), schema.core.Bool], true, false));
om_bootstrap.button.render_nav_item = function render_nav_item(props, open_QMARK_, children) {
  var classes = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dropdown", "dropdown", 1343185805), true, new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(props)], null);
  return cljs.core.apply.call(null, React.DOM.li, {"className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, classes))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
};
om_bootstrap.button.render_button_group = function render_button_group(props, open_QMARK_, children) {
  var group_classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(props)], null);
  return om_bootstrap.button.button_group.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754), (new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, group_classes)], null), children);
};
om_bootstrap.button.MenuItem = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "key", "key", -1516042587), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "header?", "header?", -106649173)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "divider?", "divider?", 1882560157)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", 
-793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "title", "title", 636505583)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, 
new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
var component_fnk__15114__auto___26219 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema26201 = schema.core.Any;
  var input_schema26202 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any], true, false), new cljs.core.Symbol(null, "map26200", "map26200", 1181918331, null))], null);
  var input_checker26203 = schema.core.checker.call(null, input_schema26202);
  var output_checker26204 = schema.core.checker.call(null, output_schema26201);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
    return function constructor26198(G__26205) {
      var validate__10827__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26220 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26205], null);
        var temp__4126__auto___26221 = input_checker26203.call(null, args__10828__auto___26220);
        if (cljs.core.truth_(temp__4126__auto___26221)) {
          var error__10829__auto___26222 = temp__4126__auto___26221;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26198", "constructor26198", -1757780535, null), cljs.core.pr_str.call(null, error__10829__auto___26222)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26222, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26220, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), input_schema26202, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var map26200 = G__26205;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map26200)) {
          } else {
            throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map26200));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map26200, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t26211 !== "undefined") {
          } else {
            om_bootstrap.button.t26211 = function(output_schema26201, output_checker26204, owner, validate__10827__auto__, constructor26198, input_schema26202, input_checker26203, G__26205, map26200, ufv__, meta26212) {
              this.output_schema26201 = output_schema26201;
              this.output_checker26204 = output_checker26204;
              this.owner = owner;
              this.validate__10827__auto__ = validate__10827__auto__;
              this.constructor26198 = constructor26198;
              this.input_schema26202 = input_schema26202;
              this.input_checker26203 = input_checker26203;
              this.G__26205 = G__26205;
              this.map26200 = map26200;
              this.ufv__ = ufv__;
              this.meta26212 = meta26212;
              this.cljs$lang$protocol_mask$partition1$ = 0;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
            };
            om_bootstrap.button.t26211.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t26211.prototype.om$core$IDisplayName$display_name$arity$1 = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "menu-item*";
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
            om_bootstrap.button.t26211.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t26211.prototype.om$core$IRender$render$arity$1 = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var map__26214 = om.core.get_props.call(null, self__.owner);
                var map__26214__$1 = cljs.core.seq_QMARK_.call(null, map__26214) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26214) : map__26214;
                var children = cljs.core.get.call(null, map__26214__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var opts = cljs.core.get.call(null, map__26214__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var vec__26215 = om_bootstrap.types.separate.call(null, om_bootstrap.button.MenuItem, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null));
                var bs = cljs.core.nth.call(null, vec__26215, 0, null);
                var props = cljs.core.nth.call(null, vec__26215, 1, null);
                var classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dropdown-header", "dropdown-header", -1451449167), (new cljs.core.Keyword(null, "header?", "header?", -106649173)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "divider", "divider", 1265972657), (new cljs.core.Keyword(null, "divider?", "divider?", 1882560157)).cljs$core$IFn$_invoke$arity$1(bs)], null);
                var handle_click = function(map__26214, map__26214__$1, children, opts, vec__26215, bs, props, classes, ___$1, owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
                  return function(e) {
                    var temp__4126__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4126__auto__)) {
                      var on_select = temp__4126__auto__;
                      e.preventDefault();
                      return on_select.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(bs));
                    } else {
                      return null;
                    }
                  };
                }(map__26214, map__26214__$1, children, opts, vec__26215, bs, props, classes, ___$1, owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
                var children__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "header?", "header?", -106649173)).cljs$core$IFn$_invoke$arity$1(bs)) ? children : cljs.core.apply.call(null, React.DOM.a, {"tabIndex":"-1", "title":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs)), "href":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$1(bs)), "onClick":om_tools.dom.format_opts.call(null, 
                handle_click)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
                var li_attrs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "role", "role", -736691072), "presentation", new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes)], null);
                return om_tools.dom.element.call(null, React.DOM.li, om_bootstrap.util.merge_props.call(null, props, li_attrs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$1], null));
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
            om_bootstrap.button.t26211.prototype.cljs$core$IMeta$_meta$arity$1 = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function(_26213) {
                var self__ = this;
                var _26213__$1 = this;
                return self__.meta26212;
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
            om_bootstrap.button.t26211.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function(_26213, meta26212__$1) {
                var self__ = this;
                var _26213__$1 = this;
                return new om_bootstrap.button.t26211(self__.output_schema26201, self__.output_checker26204, self__.owner, self__.validate__10827__auto__, self__.constructor26198, self__.input_schema26202, self__.input_checker26203, self__.G__26205, self__.map26200, self__.ufv__, meta26212__$1);
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
            om_bootstrap.button.t26211.cljs$lang$type = true;
            om_bootstrap.button.t26211.cljs$lang$ctorStr = "om-bootstrap.button/t26211";
            om_bootstrap.button.t26211.cljs$lang$ctorPrWriter = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
                return cljs.core._write.call(null, writer__4216__auto__, "om-bootstrap.button/t26211");
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
            om_bootstrap.button.__GT_t26211 = function(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204) {
              return function __GT_t26211(output_schema26201__$1, output_checker26204__$1, owner__$1, validate__10827__auto____$1, constructor26198__$1, input_schema26202__$1, input_checker26203__$1, G__26205__$1, map26200__$1, ufv____$1, meta26212) {
                return new om_bootstrap.button.t26211(output_schema26201__$1, output_checker26204__$1, owner__$1, validate__10827__auto____$1, constructor26198__$1, input_schema26202__$1, input_checker26203__$1, G__26205__$1, map26200__$1, ufv____$1, meta26212);
              };
            }(owner, validate__10827__auto__, ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204);
          }
          return new om_bootstrap.button.t26211(output_schema26201, output_checker26204, owner, validate__10827__auto__, constructor26198, input_schema26202, input_checker26203, G__26205, map26200, ufv__, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26223 = output_checker26204.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26223)) {
          var error__10829__auto___26224 = temp__4126__auto___26223;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26198", "constructor26198", -1757780535, null), cljs.core.pr_str.call(null, error__10829__auto___26224)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26224, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), output_schema26201, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
  }(ufv__, output_schema26201, input_schema26202, input_checker26203, output_checker26204), schema.core.make_fn_schema.call(null, output_schema26201, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26202], null)));
}();
om_bootstrap.button.menu_item_STAR_ = function(component_fnk__15114__auto___26219) {
  return function() {
    var menu_item_STAR___delegate = function(data__15115__auto__, owner26197, p__26216) {
      var vec__26218 = p__26216;
      var opts__15116__auto__ = cljs.core.nth.call(null, vec__26218, 0, null);
      return component_fnk__15114__auto___26219.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__15116__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner26197, new cljs.core.Keyword(null, "data", "data", -232669377), data__15115__auto__], null));
    };
    var menu_item_STAR_ = function(data__15115__auto__, owner26197, var_args) {
      var p__26216 = null;
      if (arguments.length > 2) {
        p__26216 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return menu_item_STAR___delegate.call(this, data__15115__auto__, owner26197, p__26216);
    };
    menu_item_STAR_.cljs$lang$maxFixedArity = 2;
    menu_item_STAR_.cljs$lang$applyTo = function(arglist__26225) {
      var data__15115__auto__ = cljs.core.first(arglist__26225);
      arglist__26225 = cljs.core.next(arglist__26225);
      var owner26197 = cljs.core.first(arglist__26225);
      var p__26216 = cljs.core.rest(arglist__26225);
      return menu_item_STAR___delegate(data__15115__auto__, owner26197, p__26216);
    };
    menu_item_STAR_.cljs$core$IFn$_invoke$arity$variadic = menu_item_STAR___delegate;
    return menu_item_STAR_;
  }();
}(component_fnk__15114__auto___26219);
om_bootstrap.button.__GT_menu_item_STAR_ = function() {
  var __GT_menu_item_STAR_ = null;
  var __GT_menu_item_STAR___1 = function(cursor__15083__auto__) {
    return om.core.build.call(null, om_bootstrap.button.menu_item_STAR_, cursor__15083__auto__);
  };
  var __GT_menu_item_STAR___2 = function(cursor__15083__auto__, m26199) {
    return om.core.build.call(null, om_bootstrap.button.menu_item_STAR_, cursor__15083__auto__, m26199);
  };
  __GT_menu_item_STAR_ = function(cursor__15083__auto__, m26199) {
    switch(arguments.length) {
      case 1:
        return __GT_menu_item_STAR___1.call(this, cursor__15083__auto__);
      case 2:
        return __GT_menu_item_STAR___2.call(this, cursor__15083__auto__, m26199);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$1 = __GT_menu_item_STAR___1;
  __GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$2 = __GT_menu_item_STAR___2;
  return __GT_menu_item_STAR_;
}();
var ufv___26232 = schema.utils.use_fn_validation;
var output_schema26226_26233 = om_bootstrap.types.Component;
var input_schema26227_26234 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.MenuItem, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26228_26235 = schema.core.checker.call(null, input_schema26227_26234);
var output_checker26229_26236 = schema.core.checker.call(null, output_schema26226_26233);
om_bootstrap.button.menu_item = function(ufv___26232, output_schema26226_26233, input_schema26227_26234, input_checker26228_26235, output_checker26229_26236) {
  return function() {
    var menu_item__delegate = function(G__26230, rest26231) {
      var validate__10827__auto__ = ufv___26232.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26237 = cljs.core.list_STAR_.call(null, G__26230, rest26231);
        var temp__4126__auto___26238 = input_checker26228_26235.call(null, args__10828__auto___26237);
        if (cljs.core.truth_(temp__4126__auto___26238)) {
          var error__10829__auto___26239 = temp__4126__auto___26238;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "menu-item", "menu-item", 269419754, null), cljs.core.pr_str.call(null, error__10829__auto___26239)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26239, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26237, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26227_26234, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26230;
        var children = rest26231;
        while (true) {
          return om_bootstrap.button.__GT_menu_item_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26240 = output_checker26229_26236.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26240)) {
          var error__10829__auto___26241 = temp__4126__auto___26240;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "menu-item", "menu-item", 269419754, null), cljs.core.pr_str.call(null, error__10829__auto___26241)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26241, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26226_26233, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var menu_item = function(G__26230, var_args) {
      var rest26231 = null;
      if (arguments.length > 1) {
        rest26231 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return menu_item__delegate.call(this, G__26230, rest26231);
    };
    menu_item.cljs$lang$maxFixedArity = 1;
    menu_item.cljs$lang$applyTo = function(arglist__26242) {
      var G__26230 = cljs.core.first(arglist__26242);
      var rest26231 = cljs.core.rest(arglist__26242);
      return menu_item__delegate(G__26230, rest26231);
    };
    menu_item.cljs$core$IFn$_invoke$arity$variadic = menu_item__delegate;
    return menu_item;
  }();
}(ufv___26232, output_schema26226_26233, input_schema26227_26234, input_checker26228_26235, output_checker26229_26236);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.menu_item), schema.core.make_fn_schema.call(null, output_schema26226_26233, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26227_26234], null)));
om_bootstrap.button.DropdownMenu = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
var ufv___26252 = schema.utils.use_fn_validation;
var output_schema26244_26253 = om_bootstrap.types.Component;
var input_schema26245_26254 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.DropdownMenu, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26246_26255 = schema.core.checker.call(null, input_schema26245_26254);
var output_checker26247_26256 = schema.core.checker.call(null, output_schema26244_26253);
om_bootstrap.button.dropdown_menu = function(ufv___26252, output_schema26244_26253, input_schema26245_26254, input_checker26246_26255, output_checker26247_26256) {
  return function() {
    var dropdown_menu__delegate = function(G__26248, rest26249) {
      var validate__10827__auto__ = ufv___26252.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26257 = cljs.core.list_STAR_.call(null, G__26248, rest26249);
        var temp__4126__auto___26258 = input_checker26246_26255.call(null, args__10828__auto___26257);
        if (cljs.core.truth_(temp__4126__auto___26258)) {
          var error__10829__auto___26259 = temp__4126__auto___26258;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "dropdown-menu", "dropdown-menu", -2089460283, null), cljs.core.pr_str.call(null, error__10829__auto___26259)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26259, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26257, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), input_schema26245_26254, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26248;
        var children = rest26249;
        while (true) {
          var vec__26251 = om_bootstrap.types.separate.call(null, om_bootstrap.button.DropdownMenu, opts);
          var bs = cljs.core.nth.call(null, vec__26251, 0, null);
          var props = cljs.core.nth.call(null, vec__26251, 1, null);
          var classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dropdown-menu", "dropdown-menu", 564975486), true, new cljs.core.Keyword(null, "dropdown-menu-right", "dropdown-menu-right", -1532579541), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs)], null);
          var ul_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes), new cljs.core.Keyword(null, "role", "role", -736691072), "menu"], null);
          return om_tools.dom.element.call(null, React.DOM.ul, om_bootstrap.util.merge_props.call(null, props, ul_attrs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var temp__4124__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var on_select = temp__4124__auto__;
              return cljs.core.map.call(null, function(on_select, temp__4124__auto__, vec__26251, bs, props, classes, ul_attrs, validate__10827__auto__, ufv___26252, output_schema26244_26253, input_schema26245_26254, input_checker26246_26255, output_checker26247_26256) {
                return function(p1__26243_SHARP_) {
                  return om_bootstrap.util.clone_with_props.call(null, p1__26243_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-select", "on-select", -192407950), on_select], null));
                };
              }(on_select, temp__4124__auto__, vec__26251, bs, props, classes, ul_attrs, validate__10827__auto__, ufv___26252, output_schema26244_26253, input_schema26245_26254, input_checker26246_26255, output_checker26247_26256), children);
            } else {
              return children;
            }
          }()], null));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26260 = output_checker26247_26256.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26260)) {
          var error__10829__auto___26261 = temp__4126__auto___26260;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "dropdown-menu", "dropdown-menu", -2089460283, null), cljs.core.pr_str.call(null, error__10829__auto___26261)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26261, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), output_schema26244_26253, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var dropdown_menu = function(G__26248, var_args) {
      var rest26249 = null;
      if (arguments.length > 1) {
        rest26249 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return dropdown_menu__delegate.call(this, G__26248, rest26249);
    };
    dropdown_menu.cljs$lang$maxFixedArity = 1;
    dropdown_menu.cljs$lang$applyTo = function(arglist__26262) {
      var G__26248 = cljs.core.first(arglist__26262);
      var rest26249 = cljs.core.rest(arglist__26262);
      return dropdown_menu__delegate(G__26248, rest26249);
    };
    dropdown_menu.cljs$core$IFn$_invoke$arity$variadic = dropdown_menu__delegate;
    return dropdown_menu;
  }();
}(ufv___26252, output_schema26244_26253, input_schema26245_26254, input_checker26246_26255, output_checker26247_26256);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.dropdown_menu), schema.core.make_fn_schema.call(null, output_schema26244_26253, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26245_26254], null)));
om_bootstrap.button.dropdown_STAR_$descriptor = function() {
  var descriptor__15085__auto__ = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
  descriptor__15085__auto__["mixins"] = [om_bootstrap.mixins.dropdown_mixin];
  return descriptor__15085__auto__;
}();
var component_fnk__15114__auto___26286 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema26268 = schema.core.Any;
  var input_schema26269 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Any, new cljs.core.Keyword(null, "state", "state", -1988618099), schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any], true, false), new cljs.core.Symbol(null, "map26267", "map26267", 435966844, null))], null);
  var input_checker26270 = schema.core.checker.call(null, input_schema26269);
  var output_checker26271 = schema.core.checker.call(null, output_schema26268);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
    return function constructor26265(G__26272) {
      var validate__10827__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26287 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26272], null);
        var temp__4126__auto___26288 = input_checker26270.call(null, args__10828__auto___26287);
        if (cljs.core.truth_(temp__4126__auto___26288)) {
          var error__10829__auto___26289 = temp__4126__auto___26288;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26265", "constructor26265", 14079807, null), cljs.core.pr_str.call(null, error__10829__auto___26289)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26289, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26287, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), input_schema26269, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var map26267 = G__26272;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map26267)) {
          } else {
            throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map26267));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map26267, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          var state = plumbing.fnk.schema.safe_get.call(null, map26267, new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t26278 !== "undefined") {
          } else {
            om_bootstrap.button.t26278 = function(input_checker26270, owner, validate__10827__auto__, output_schema26268, input_schema26269, G__26272, state, output_checker26271, map26267, ufv__, constructor26265, meta26279) {
              this.input_checker26270 = input_checker26270;
              this.owner = owner;
              this.validate__10827__auto__ = validate__10827__auto__;
              this.output_schema26268 = output_schema26268;
              this.input_schema26269 = input_schema26269;
              this.G__26272 = G__26272;
              this.state = state;
              this.output_checker26271 = output_checker26271;
              this.map26267 = map26267;
              this.ufv__ = ufv__;
              this.constructor26265 = constructor26265;
              this.meta26279 = meta26279;
              this.cljs$lang$protocol_mask$partition1$ = 0;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
            };
            om_bootstrap.button.t26278.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t26278.prototype.om$core$IDisplayName$display_name$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "dropdown*";
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
            om_bootstrap.button.t26278.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t26278.prototype.om$core$IRender$render$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var open_QMARK_ = self__.owner["isDropdownOpen"].call(null);
                var map__26281 = om.core.get_props.call(null, self__.owner);
                var map__26281__$1 = cljs.core.seq_QMARK_.call(null, map__26281) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26281) : map__26281;
                var children = cljs.core.get.call(null, map__26281__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var opts = cljs.core.get.call(null, map__26281__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var vec__26282 = om_bootstrap.types.separate.call(null, om_bootstrap.button.DropdownButton, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null));
                var bs = cljs.core.nth.call(null, vec__26282, 0, null);
                var props = cljs.core.nth.call(null, vec__26282, 1, null);
                var set_dropdown = self__.owner["setDropdownState"];
                var render_fn = cljs.core.partial.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs)) ? om_bootstrap.button.render_nav_item : om_bootstrap.button.render_button_group, bs, open_QMARK_);
                var button_props = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "dropdownButton", new cljs.core.Keyword(null, "class", "class", -2030961996), "dropdown-toggle", new cljs.core.Keyword(null, "key", "key", -1516042587), 0, new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004), (new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "on-click", 
                "on-click", 1632826543), function(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
                  return function(e) {
                    e.preventDefault();
                    return set_dropdown.call(null, cljs.core.not.call(null, open_QMARK_));
                  };
                }(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271)], null);
                var update_child_props = function(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
                  return function(props__$1) {
                    var handle = cljs.core.truth_(function() {
                      var or__3628__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opts", "opts", 155075701)).cljs$core$IFn$_invoke$arity$1(props__$1));
                      if (cljs.core.truth_(or__3628__auto__)) {
                        return or__3628__auto__;
                      } else {
                        return(new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                      }
                    }()) ? function(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
                      return function(key) {
                        var temp__4124__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                        if (cljs.core.truth_(temp__4124__auto__)) {
                          var os = temp__4124__auto__;
                          return os.call(null, key);
                        } else {
                          return set_dropdown.call(null, false);
                        }
                      };
                    }(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) : null;
                    return cljs.core.update_in.call(null, props__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 155075701)], null), om_bootstrap.util.merge_props, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-select", "on-select", -192407950), handle], null));
                  };
                }(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
                return render_fn.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.button.button.call(null, om_bootstrap.util.merge_props.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493), new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), button_props), 
                (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs), " ", React.DOM.span({"className":"caret"})), om_bootstrap.button.dropdown_menu.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "menu", new cljs.core.Keyword(null, "aria-labelledby", "aria-labelledby", 1817118667), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, 
                "pull-right?", "pull-right?", 5308493), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), cljs.core.map.call(null, function(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, update_child_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, 
                output_checker26271) {
                  return function(p1__26263_SHARP_) {
                    return om_bootstrap.util.clone_with_props.call(null, p1__26263_SHARP_, update_child_props);
                  };
                }(open_QMARK_, map__26281, map__26281__$1, children, opts, vec__26282, bs, props, set_dropdown, render_fn, button_props, update_child_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271), children))], null));
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
            om_bootstrap.button.t26278.prototype.cljs$core$IMeta$_meta$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function(_26280) {
                var self__ = this;
                var _26280__$1 = this;
                return self__.meta26279;
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
            om_bootstrap.button.t26278.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function(_26280, meta26279__$1) {
                var self__ = this;
                var _26280__$1 = this;
                return new om_bootstrap.button.t26278(self__.input_checker26270, self__.owner, self__.validate__10827__auto__, self__.output_schema26268, self__.input_schema26269, self__.G__26272, self__.state, self__.output_checker26271, self__.map26267, self__.ufv__, self__.constructor26265, meta26279__$1);
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
            om_bootstrap.button.t26278.cljs$lang$type = true;
            om_bootstrap.button.t26278.cljs$lang$ctorStr = "om-bootstrap.button/t26278";
            om_bootstrap.button.t26278.cljs$lang$ctorPrWriter = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
                return cljs.core._write.call(null, writer__4216__auto__, "om-bootstrap.button/t26278");
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
            om_bootstrap.button.__GT_t26278 = function(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271) {
              return function __GT_t26278(input_checker26270__$1, owner__$1, validate__10827__auto____$1, output_schema26268__$1, input_schema26269__$1, G__26272__$1, state__$1, output_checker26271__$1, map26267__$1, ufv____$1, constructor26265__$1, meta26279) {
                return new om_bootstrap.button.t26278(input_checker26270__$1, owner__$1, validate__10827__auto____$1, output_schema26268__$1, input_schema26269__$1, G__26272__$1, state__$1, output_checker26271__$1, map26267__$1, ufv____$1, constructor26265__$1, meta26279);
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271);
          }
          return new om_bootstrap.button.t26278(input_checker26270, owner, validate__10827__auto__, output_schema26268, input_schema26269, G__26272, state, output_checker26271, map26267, ufv__, constructor26265, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26290 = output_checker26271.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26290)) {
          var error__10829__auto___26291 = temp__4126__auto___26290;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26265", "constructor26265", 14079807, null), cljs.core.pr_str.call(null, error__10829__auto___26291)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26291, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), output_schema26268, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
  }(ufv__, output_schema26268, input_schema26269, input_checker26270, output_checker26271), schema.core.make_fn_schema.call(null, output_schema26268, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26269], null)));
}();
om_bootstrap.button.dropdown_STAR_ = function(component_fnk__15114__auto___26286) {
  return function() {
    var dropdown_STAR___delegate = function(data__15115__auto__, owner26264, p__26283) {
      var vec__26285 = p__26283;
      var opts__15116__auto__ = cljs.core.nth.call(null, vec__26285, 0, null);
      return component_fnk__15114__auto___26286.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state", "state", -1988618099), om_tools.core.state_proxy.call(null, owner26264), new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__15116__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner26264, new cljs.core.Keyword(null, "data", "data", -232669377), data__15115__auto__], null));
    };
    var dropdown_STAR_ = function(data__15115__auto__, owner26264, var_args) {
      var p__26283 = null;
      if (arguments.length > 2) {
        p__26283 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return dropdown_STAR___delegate.call(this, data__15115__auto__, owner26264, p__26283);
    };
    dropdown_STAR_.cljs$lang$maxFixedArity = 2;
    dropdown_STAR_.cljs$lang$applyTo = function(arglist__26292) {
      var data__15115__auto__ = cljs.core.first(arglist__26292);
      arglist__26292 = cljs.core.next(arglist__26292);
      var owner26264 = cljs.core.first(arglist__26292);
      var p__26283 = cljs.core.rest(arglist__26292);
      return dropdown_STAR___delegate(data__15115__auto__, owner26264, p__26283);
    };
    dropdown_STAR_.cljs$core$IFn$_invoke$arity$variadic = dropdown_STAR___delegate;
    return dropdown_STAR_;
  }();
}(component_fnk__15114__auto___26286);
om_bootstrap.button.__GT_dropdown_STAR_ = function() {
  var __GT_dropdown_STAR_ = null;
  var __GT_dropdown_STAR___1 = function(cursor__15083__auto__) {
    return om.core.build.call(null, om_bootstrap.button.dropdown_STAR_, cursor__15083__auto__, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.dropdown_STAR_$descriptor], null));
  };
  var __GT_dropdown_STAR___2 = function(cursor__15083__auto__, m26266) {
    return om.core.build.call(null, om_bootstrap.button.dropdown_STAR_, cursor__15083__auto__, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.dropdown_STAR_$descriptor], null), m26266));
  };
  __GT_dropdown_STAR_ = function(cursor__15083__auto__, m26266) {
    switch(arguments.length) {
      case 1:
        return __GT_dropdown_STAR___1.call(this, cursor__15083__auto__);
      case 2:
        return __GT_dropdown_STAR___2.call(this, cursor__15083__auto__, m26266);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$1 = __GT_dropdown_STAR___1;
  __GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$2 = __GT_dropdown_STAR___2;
  return __GT_dropdown_STAR_;
}();
var ufv___26299 = schema.utils.use_fn_validation;
var output_schema26293_26300 = om_bootstrap.types.Component;
var input_schema26294_26301 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.DropdownButton, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26295_26302 = schema.core.checker.call(null, input_schema26294_26301);
var output_checker26296_26303 = schema.core.checker.call(null, output_schema26293_26300);
om_bootstrap.button.dropdown = function(ufv___26299, output_schema26293_26300, input_schema26294_26301, input_checker26295_26302, output_checker26296_26303) {
  return function() {
    var dropdown__delegate = function(G__26297, rest26298) {
      var validate__10827__auto__ = ufv___26299.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26304 = cljs.core.list_STAR_.call(null, G__26297, rest26298);
        var temp__4126__auto___26305 = input_checker26295_26302.call(null, args__10828__auto___26304);
        if (cljs.core.truth_(temp__4126__auto___26305)) {
          var error__10829__auto___26306 = temp__4126__auto___26305;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "dropdown", "dropdown", -1311249964, null), cljs.core.pr_str.call(null, error__10829__auto___26306)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26306, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26304, new cljs.core.Keyword(null, "schema", 
          "schema", -1582001791), input_schema26294_26301, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26297;
        var children = rest26298;
        while (true) {
          return om_bootstrap.button.__GT_dropdown_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26307 = output_checker26296_26303.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26307)) {
          var error__10829__auto___26308 = temp__4126__auto___26307;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "dropdown", "dropdown", -1311249964, null), cljs.core.pr_str.call(null, error__10829__auto___26308)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26308, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), output_schema26293_26300, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var dropdown = function(G__26297, var_args) {
      var rest26298 = null;
      if (arguments.length > 1) {
        rest26298 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return dropdown__delegate.call(this, G__26297, rest26298);
    };
    dropdown.cljs$lang$maxFixedArity = 1;
    dropdown.cljs$lang$applyTo = function(arglist__26309) {
      var G__26297 = cljs.core.first(arglist__26309);
      var rest26298 = cljs.core.rest(arglist__26309);
      return dropdown__delegate(G__26297, rest26298);
    };
    dropdown.cljs$core$IFn$_invoke$arity$variadic = dropdown__delegate;
    return dropdown;
  }();
}(ufv___26299, output_schema26293_26300, input_schema26294_26301, input_checker26295_26302, output_checker26296_26303);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.dropdown), schema.core.make_fn_schema.call(null, output_schema26293_26300, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26294_26301], null)));
om_bootstrap.button.SplitButton = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)), schema.core.Bool, schema.core.optional_key.call(null, 
new cljs.core.Keyword(null, "title", "title", 636505583)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", -793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 1850134238)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)), schema.core.make_fn_schema.call(null, schema.core.Any, 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
om_bootstrap.button.split_STAR_$descriptor = function() {
  var descriptor__15085__auto__ = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
  descriptor__15085__auto__["mixins"] = [om_bootstrap.mixins.dropdown_mixin];
  return descriptor__15085__auto__;
}();
var component_fnk__15114__auto___26332 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema26314 = schema.core.Any;
  var input_schema26315 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Any, new cljs.core.Keyword(null, "state", "state", -1988618099), schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any], true, false), new cljs.core.Symbol(null, "map26313", "map26313", -323438, null))], null);
  var input_checker26316 = schema.core.checker.call(null, input_schema26315);
  var output_checker26317 = schema.core.checker.call(null, output_schema26314);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
    return function constructor26311(G__26318) {
      var validate__10827__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26333 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26318], null);
        var temp__4126__auto___26334 = input_checker26316.call(null, args__10828__auto___26333);
        if (cljs.core.truth_(temp__4126__auto___26334)) {
          var error__10829__auto___26335 = temp__4126__auto___26334;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26311", "constructor26311", 1868449868, null), cljs.core.pr_str.call(null, error__10829__auto___26335)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26335, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26333, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), input_schema26315, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var map26313 = G__26318;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map26313)) {
          } else {
            throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map26313));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map26313, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          var state = plumbing.fnk.schema.safe_get.call(null, map26313, new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t26324 !== "undefined") {
          } else {
            om_bootstrap.button.t26324 = function(owner, validate__10827__auto__, constructor26311, input_schema26315, input_checker26316, output_checker26317, map26313, G__26318, state, output_schema26314, ufv__, meta26325) {
              this.owner = owner;
              this.validate__10827__auto__ = validate__10827__auto__;
              this.constructor26311 = constructor26311;
              this.input_schema26315 = input_schema26315;
              this.input_checker26316 = input_checker26316;
              this.output_checker26317 = output_checker26317;
              this.map26313 = map26313;
              this.G__26318 = G__26318;
              this.state = state;
              this.output_schema26314 = output_schema26314;
              this.ufv__ = ufv__;
              this.meta26325 = meta26325;
              this.cljs$lang$protocol_mask$partition1$ = 0;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
            };
            om_bootstrap.button.t26324.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t26324.prototype.om$core$IDisplayName$display_name$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "split*";
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
            om_bootstrap.button.t26324.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t26324.prototype.om$core$IRender$render$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var open_QMARK_ = self__.owner["isDropdownOpen"].call(null);
                var map__26327 = om.core.get_props.call(null, self__.owner);
                var map__26327__$1 = cljs.core.seq_QMARK_.call(null, map__26327) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26327) : map__26327;
                var children = cljs.core.get.call(null, map__26327__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var opts = cljs.core.get.call(null, map__26327__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var vec__26328 = om_bootstrap.types.separate.call(null, om_bootstrap.button.SplitButton, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 1850134238), "Toggle dropdown"], null));
                var bs = cljs.core.nth.call(null, vec__26328, 0, null);
                var props = cljs.core.nth.call(null, vec__26328, 1, null);
                var set_dropdown = self__.owner["setDropdownState"];
                var btn_props = cljs.core.partial.call(null, om_bootstrap.util.merge_props, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "id", "id", -1388402092)));
                var btn = om_bootstrap.button.button.call(null, btn_props.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "button", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
                  return function(e) {
                    if (cljs.core.truth_(open_QMARK_)) {
                      set_dropdown.call(null, false);
                    } else {
                    }
                    var temp__4126__auto__ = (new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4126__auto__)) {
                      var f = temp__4126__auto__;
                      return f.call(null, e);
                    } else {
                      return null;
                    }
                  };
                }(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317)], null)), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs));
                var drop_btn = om_bootstrap.button.button.call(null, btn_props.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "dropdownButton", new cljs.core.Keyword(null, "class", "class", -2030961996), "dropdown-toggle", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, btn, ___$1, state, owner, validate__10827__auto__, 
                ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
                  return function(e) {
                    e.preventDefault();
                    return set_dropdown.call(null, cljs.core.not.call(null, open_QMARK_));
                  };
                }(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, btn, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317)], null)), cljs.core.apply.call(null, React.DOM.span, {"className":"sr-only"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 
                1850134238)).cljs$core$IFn$_invoke$arity$1(bs)], null))), React.DOM.span({"className":"caret"}));
                var menu = om_bootstrap.button.dropdown_menu.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "menu", new cljs.core.Keyword(null, "aria-labelledby", "aria-labelledby", 1817118667), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs), 
                new cljs.core.Keyword(null, "on-select", "on-select", -192407950), function(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, btn, drop_btn, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
                  return function(k) {
                    var temp__4126__auto___26336 = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4126__auto___26336)) {
                      var f_26337 = temp__4126__auto___26336;
                      f_26337.call(null, k);
                    } else {
                    }
                    return set_dropdown.call(null, false);
                  };
                }(open_QMARK_, map__26327, map__26327__$1, children, opts, vec__26328, bs, props, set_dropdown, btn_props, btn, drop_btn, ___$1, state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317)], null), children);
                return om_bootstrap.button.button_group.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754), (new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, 
                new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(bs)], null))], null), btn, drop_btn, menu);
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
            om_bootstrap.button.t26324.prototype.cljs$core$IMeta$_meta$arity$1 = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function(_26326) {
                var self__ = this;
                var _26326__$1 = this;
                return self__.meta26325;
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
            om_bootstrap.button.t26324.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function(_26326, meta26325__$1) {
                var self__ = this;
                var _26326__$1 = this;
                return new om_bootstrap.button.t26324(self__.owner, self__.validate__10827__auto__, self__.constructor26311, self__.input_schema26315, self__.input_checker26316, self__.output_checker26317, self__.map26313, self__.G__26318, self__.state, self__.output_schema26314, self__.ufv__, meta26325__$1);
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
            om_bootstrap.button.t26324.cljs$lang$type = true;
            om_bootstrap.button.t26324.cljs$lang$ctorStr = "om-bootstrap.button/t26324";
            om_bootstrap.button.t26324.cljs$lang$ctorPrWriter = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
                return cljs.core._write.call(null, writer__4216__auto__, "om-bootstrap.button/t26324");
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
            om_bootstrap.button.__GT_t26324 = function(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317) {
              return function __GT_t26324(owner__$1, validate__10827__auto____$1, constructor26311__$1, input_schema26315__$1, input_checker26316__$1, output_checker26317__$1, map26313__$1, G__26318__$1, state__$1, output_schema26314__$1, ufv____$1, meta26325) {
                return new om_bootstrap.button.t26324(owner__$1, validate__10827__auto____$1, constructor26311__$1, input_schema26315__$1, input_checker26316__$1, output_checker26317__$1, map26313__$1, G__26318__$1, state__$1, output_schema26314__$1, ufv____$1, meta26325);
              };
            }(state, owner, validate__10827__auto__, ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317);
          }
          return new om_bootstrap.button.t26324(owner, validate__10827__auto__, constructor26311, input_schema26315, input_checker26316, output_checker26317, map26313, G__26318, state, output_schema26314, ufv__, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26338 = output_checker26317.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26338)) {
          var error__10829__auto___26339 = temp__4126__auto___26338;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "constructor26311", "constructor26311", 1868449868, null), cljs.core.pr_str.call(null, error__10829__auto___26339)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26339, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, 
          "schema", "schema", -1582001791), output_schema26314, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
  }(ufv__, output_schema26314, input_schema26315, input_checker26316, output_checker26317), schema.core.make_fn_schema.call(null, output_schema26314, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26315], null)));
}();
om_bootstrap.button.split_STAR_ = function(component_fnk__15114__auto___26332) {
  return function() {
    var split_STAR___delegate = function(data__15115__auto__, owner26310, p__26329) {
      var vec__26331 = p__26329;
      var opts__15116__auto__ = cljs.core.nth.call(null, vec__26331, 0, null);
      return component_fnk__15114__auto___26332.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state", "state", -1988618099), om_tools.core.state_proxy.call(null, owner26310), new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__15116__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner26310, new cljs.core.Keyword(null, "data", "data", -232669377), data__15115__auto__], null));
    };
    var split_STAR_ = function(data__15115__auto__, owner26310, var_args) {
      var p__26329 = null;
      if (arguments.length > 2) {
        p__26329 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return split_STAR___delegate.call(this, data__15115__auto__, owner26310, p__26329);
    };
    split_STAR_.cljs$lang$maxFixedArity = 2;
    split_STAR_.cljs$lang$applyTo = function(arglist__26340) {
      var data__15115__auto__ = cljs.core.first(arglist__26340);
      arglist__26340 = cljs.core.next(arglist__26340);
      var owner26310 = cljs.core.first(arglist__26340);
      var p__26329 = cljs.core.rest(arglist__26340);
      return split_STAR___delegate(data__15115__auto__, owner26310, p__26329);
    };
    split_STAR_.cljs$core$IFn$_invoke$arity$variadic = split_STAR___delegate;
    return split_STAR_;
  }();
}(component_fnk__15114__auto___26332);
om_bootstrap.button.__GT_split_STAR_ = function() {
  var __GT_split_STAR_ = null;
  var __GT_split_STAR___1 = function(cursor__15083__auto__) {
    return om.core.build.call(null, om_bootstrap.button.split_STAR_, cursor__15083__auto__, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.split_STAR_$descriptor], null));
  };
  var __GT_split_STAR___2 = function(cursor__15083__auto__, m26312) {
    return om.core.build.call(null, om_bootstrap.button.split_STAR_, cursor__15083__auto__, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.split_STAR_$descriptor], null), m26312));
  };
  __GT_split_STAR_ = function(cursor__15083__auto__, m26312) {
    switch(arguments.length) {
      case 1:
        return __GT_split_STAR___1.call(this, cursor__15083__auto__);
      case 2:
        return __GT_split_STAR___2.call(this, cursor__15083__auto__, m26312);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_split_STAR_.cljs$core$IFn$_invoke$arity$1 = __GT_split_STAR___1;
  __GT_split_STAR_.cljs$core$IFn$_invoke$arity$2 = __GT_split_STAR___2;
  return __GT_split_STAR_;
}();
var ufv___26347 = schema.utils.use_fn_validation;
var output_schema26341_26348 = schema.core.Any;
var input_schema26342_26349 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.SplitButton, new cljs.core.Symbol(null, "opts", "opts", 1795607228, null)), schema.core.Any], null);
var input_checker26343_26350 = schema.core.checker.call(null, input_schema26342_26349);
var output_checker26344_26351 = schema.core.checker.call(null, output_schema26341_26348);
om_bootstrap.button.split = function(ufv___26347, output_schema26341_26348, input_schema26342_26349, input_checker26343_26350, output_checker26344_26351) {
  return function() {
    var split__delegate = function(G__26345, rest26346) {
      var validate__10827__auto__ = ufv___26347.get_cell();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var args__10828__auto___26352 = cljs.core.list_STAR_.call(null, G__26345, rest26346);
        var temp__4126__auto___26353 = input_checker26343_26350.call(null, args__10828__auto___26352);
        if (cljs.core.truth_(temp__4126__auto___26353)) {
          var error__10829__auto___26354 = temp__4126__auto___26353;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split", "split", 1041096409, null), cljs.core.pr_str.call(null, error__10829__auto___26354)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26354, new cljs.core.Keyword(null, "value", "value", 305978217), args__10828__auto___26352, new cljs.core.Keyword(null, "schema", "schema", 
          -1582001791), input_schema26342_26349, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      var o__10830__auto__ = function() {
        var opts = G__26345;
        var children = rest26346;
        while (true) {
          return om_bootstrap.button.__GT_split_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
          break;
        }
      }();
      if (cljs.core.truth_(validate__10827__auto__)) {
        var temp__4126__auto___26355 = output_checker26344_26351.call(null, o__10830__auto__);
        if (cljs.core.truth_(temp__4126__auto___26355)) {
          var error__10829__auto___26356 = temp__4126__auto___26355;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split", "split", 1041096409, null), cljs.core.pr_str.call(null, error__10829__auto___26356)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "error", "error", -978969032), error__10829__auto___26356, new cljs.core.Keyword(null, "value", "value", 305978217), o__10830__auto__, new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
          output_schema26341_26348, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308)], null));
        } else {
        }
      } else {
      }
      return o__10830__auto__;
    };
    var split = function(G__26345, var_args) {
      var rest26346 = null;
      if (arguments.length > 1) {
        rest26346 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return split__delegate.call(this, G__26345, rest26346);
    };
    split.cljs$lang$maxFixedArity = 1;
    split.cljs$lang$applyTo = function(arglist__26357) {
      var G__26345 = cljs.core.first(arglist__26357);
      var rest26346 = cljs.core.rest(arglist__26357);
      return split__delegate(G__26345, rest26346);
    };
    split.cljs$core$IFn$_invoke$arity$variadic = split__delegate;
    return split;
  }();
}(ufv___26347, output_schema26341_26348, input_schema26342_26349, input_checker26343_26350, output_checker26344_26351);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.split), schema.core.make_fn_schema.call(null, output_schema26341_26348, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26342_26349], null)));
goog.provide("clui_om.widgets.tiles");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clui_om.widgets.palettes");
clui_om.widgets.tiles.DEFAULTS = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287), 40, new cljs.core.Keyword(null, "tile-size", "tile-size", 441420757), 24], null);
clui_om.widgets.tiles.square_div = function square_div(size) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "width", "width", -384071477), size, new cljs.core.Keyword(null, "min-width", "min-width", 1926193728), size, new cljs.core.Keyword(null, "max-width", "max-width", -1939924051), size, new cljs.core.Keyword(null, "min-height", "min-height", 398480837), size, new cljs.core.Keyword(null, "max-height", "max-height", -612563804), size], null);
};
clui_om.widgets.tiles.toggle_pause = function toggle_pause(_, cursor, owner, state) {
  var new_pause = cljs.core.not.call(null, (new cljs.core.Keyword(null, "paused", "paused", -1710376127)).cljs$core$IFn$_invoke$arity$1(state));
  var color = (new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cursor));
  console.log("Toggle pause to ", new_pause, ". Saved color: ", color);
  om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "paused", "paused", -1710376127), new_pause);
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "saved-color", "saved-color", -1428013318), color);
};
clui_om.widgets.tiles.color_tile = function color_tile(cursor, owner, opts) {
  if (typeof clui_om.widgets.tiles.t21053 !== "undefined") {
  } else {
    clui_om.widgets.tiles.t21053 = function(opts, owner, cursor, color_tile, meta21054) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.color_tile = color_tile;
      this.meta21054 = meta21054;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.widgets.tiles.t21053.prototype.om$core$IRenderState$ = true;
    clui_om.widgets.tiles.t21053.prototype.om$core$IRenderState$render_state$arity$2 = function(_, state) {
      var self__ = this;
      var ___$1 = this;
      var settings = (new cljs.core.Keyword(null, "settings", "settings", 1556144875)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var paused = (new cljs.core.Keyword(null, "paused", "paused", -1710376127)).cljs$core$IFn$_invoke$arity$1(state);
      var border_width = cljs.core.truth_(paused) ? 4 : 1;
      var cell_size = (new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(settings);
      var tile_size = (new cljs.core.Keyword(null, "tile-size", "tile-size", 441420757)).cljs$core$IFn$_invoke$arity$1(settings);
      var gap = cljs.core.truth_(paused) ? cell_size - tile_size - 2 * border_width : cell_size - tile_size;
      var color = cljs.core.truth_(paused) ? (new cljs.core.Keyword(null, "saved-color", "saved-color", -1428013318)).cljs$core$IFn$_invoke$arity$1(state) : (new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      return React.DOM.div(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, clui_om.widgets.tiles.square_div.call(null, cell_size), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "border-style", "border-style", -485574304), "solid", new cljs.core.Keyword(null, "border-width", "border-width", -1512605390), [cljs.core.str(border_width), 
      cljs.core.str("px")].join(""), new cljs.core.Keyword(null, "border-color", "border-color", -2059162761), cljs.core.truth_(paused) ? "#000000" : "#EEEEEE", new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", new cljs.core.Keyword(null, "position", "position", -2011731912), "relative"], null)))], null)), React.DOM.div(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(settings, 
      paused, border_width, cell_size, tile_size, gap, color, ___$1) {
        return function(p1__21049_SHARP_) {
          return clui_om.widgets.tiles.toggle_pause.call(null, p1__21049_SHARP_, self__.cursor, self__.owner, state);
        };
      }(settings, paused, border_width, cell_size, tile_size, gap, color, ___$1), new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, clui_om.widgets.tiles.square_div.call(null, tile_size), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "backgroundColor", "backgroundColor", 1738438491), color, new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "left", "left", 
      -399115937), gap / 2, new cljs.core.Keyword(null, "top", "top", -1856271961), gap / 2], null)))], null))));
    };
    clui_om.widgets.tiles.t21053.prototype.om$core$IInitState$ = true;
    clui_om.widgets.tiles.t21053.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "paused", "paused", -1710376127), false, new cljs.core.Keyword(null, "saved-color", "saved-color", -1428013318), cljs.core.first.call(null, cljs.core.vals.call(null, clui_om.widgets.palettes.DEFAULT_PALETTE))], null);
    };
    clui_om.widgets.tiles.t21053.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21055) {
      var self__ = this;
      var _21055__$1 = this;
      return self__.meta21054;
    };
    clui_om.widgets.tiles.t21053.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21055, meta21054__$1) {
      var self__ = this;
      var _21055__$1 = this;
      return new clui_om.widgets.tiles.t21053(self__.opts, self__.owner, self__.cursor, self__.color_tile, meta21054__$1);
    };
    clui_om.widgets.tiles.t21053.cljs$lang$type = true;
    clui_om.widgets.tiles.t21053.cljs$lang$ctorStr = "clui-om.widgets.tiles/t21053";
    clui_om.widgets.tiles.t21053.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.widgets.tiles/t21053");
    };
    clui_om.widgets.tiles.__GT_t21053 = function __GT_t21053(opts__$1, owner__$1, cursor__$1, color_tile__$1, meta21054) {
      return new clui_om.widgets.tiles.t21053(opts__$1, owner__$1, cursor__$1, color_tile__$1, meta21054);
    };
  }
  return new clui_om.widgets.tiles.t21053(opts, owner, cursor, color_tile, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 66, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 57, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 24, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/widgets/tiles.cljs"], 
  null));
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4124__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), cljs.core.pr_str.call(null, data));
  } else {
    return null;
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str(eval(block))].join("")], null);
    } catch (e27663) {
      var e = e27663;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0);
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", -978969032), function(conn) {
      return function(_) {
        if (n < 10) {
          return send_print.call(null, url, data, n + 1);
        } else {
          return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""));
        }
      };
    }(conn));
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print;
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "content", "content", 15833224), data, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4124__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var repl_connection = temp__4124__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 1890645906), function(connection, repl_connection, temp__4124__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 1415092211), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1299562414), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1299562414), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function(connection, repl_connection, temp__4124__auto__) {
      return function() {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
      };
    }(connection, repl_connection, temp__4124__auto__), 50);
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(repl_connection) {
    return function(js) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js));
    };
  }(repl_connection));
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(repl_connection));
};
goog.provide("clui_om.vanilla");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("clojure.browser.repl");
goog.require("goog.events.EventType");
goog.require("goog.events");
clui_om.vanilla.$form = goog.dom.getElement("spamForm");
clui_om.vanilla.$output = goog.dom.getElement("spamOutput");
clui_om.vanilla.$trigger = goog.dom.getElement("spamBtn");
clui_om.vanilla.$agent = goog.dom.getElement("agentBtn");
clui_om.vanilla.report_agent = function report_agent() {
  return alert([cljs.core.str("User Agent is: "), cljs.core.str(goog.userAgent.PLATFORM)].join(""));
};
clui_om.vanilla.echo = function() {
  var echo = null;
  var echo__0 = function() {
    var stuff = goog.dom.forms.getFormDataMap(clui_om.vanilla.$form);
    var input = stuff.get("spamInput");
    console.log(input);
    console.log([cljs.core.str("echoing..."), cljs.core.str(input), cljs.core.str(input), cljs.core.str(input)].join(""));
    return goog.dom.setTextContent(clui_om.vanilla.$output, [cljs.core.str(input), cljs.core.str(input), cljs.core.str(input)].join(""));
  };
  var echo__1 = function(evt) {
    evt.preventDefault();
    return echo.call(null);
  };
  echo = function(evt) {
    switch(arguments.length) {
      case 0:
        return echo__0.call(this);
      case 1:
        return echo__1.call(this, evt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  echo.cljs$core$IFn$_invoke$arity$0 = echo__0;
  echo.cljs$core$IFn$_invoke$arity$1 = echo__1;
  return echo;
}();
clui_om.vanilla.yo = function yo(msg) {
  return goog.dom.setTextContent(clui_om.vanilla.$output, msg);
};
clui_om.vanilla.my_alert = function my_alert(msg) {
  return alert(msg);
};
clui_om.vanilla.host_msg = "initializing vanilla.main()...";
clui_om.vanilla.main = function main() {
  clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
  console.log(clui_om.vanilla.host_msg);
  goog.dom.classes.add(clui_om.vanilla.$output, "vanilla-border");
  goog.dom.setTextContent(clui_om.vanilla.$output, [cljs.core.str("Dynamically created by the Google Closure at: "), cljs.core.str(new Date)].join(""));
  goog.events.listen(clui_om.vanilla.$output, goog.events.EventType.CLICK, function(evt) {
    return goog.dom.classes.toggle(clui_om.vanilla.$output, "vanilla-border");
  });
  goog.events.listen(clui_om.vanilla.$trigger, goog.events.EventType.CLICK, function(evt) {
    return clui_om.vanilla.echo.call(null, evt);
  });
  return goog.events.listen(clui_om.vanilla.$agent, goog.events.EventType.CLICK, function(evt) {
    return clui_om.vanilla.report_agent.call(null);
  });
};
goog.exportSymbol("clui_om.vanilla.main", clui_om.vanilla.main);
goog.provide("clui_om.misc.cards");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
clui_om.misc.cards.suits = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "hearts", "hearts", -701365391), new cljs.core.Keyword(null, "spades", "spades", 1715303139), new cljs.core.Keyword(null, "clubs", "clubs", -1540603567), new cljs.core.Keyword(null, "diamonds", "diamonds", -145346074)], null);
clui_om.misc.cards.ranks = cljs.core.range.call(null, 1, 14);
clui_om.misc.cards.english_ranks = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, "ace", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "jack", "queen", "king"], null);
clui_om.misc.cards.pretty_rank = function pretty_rank(rank) {
  var special = new cljs.core.PersistentArrayMap(null, 4, [1, "A", 11, "J", 12, "Q", 13, "K"], null);
  var pretty = special.call(null, rank);
  if (cljs.core.truth_(pretty)) {
    return pretty;
  } else {
    return rank;
  }
};
clui_om.misc.cards.entity_suits = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "spades", "spades", 1715303139), "\x26#9828;", new cljs.core.Keyword(null, "hearts", "hearts", -701365391), "\x26#9825;", new cljs.core.Keyword(null, "diamonds", "diamonds", -145346074), "\x26#9826;", new cljs.core.Keyword(null, "clubs", "clubs", -1540603567), "\x26#9831;"], null);
clui_om.misc.cards.ICardUtils = function() {
  var obj17278 = {};
  return obj17278;
}();
clui_om.misc.cards.verbose_name = function verbose_name(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clui_om$misc$cards$ICardUtils$verbose_name$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clui_om$misc$cards$ICardUtils$verbose_name$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clui_om.misc.cards.verbose_name[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clui_om.misc.cards.verbose_name["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICardUtils.verbose-name", this$);
        }
      }
    }().call(null, this$);
  }
};
clui_om.misc.cards.terse_name = function terse_name(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clui_om$misc$cards$ICardUtils$terse_name$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clui_om$misc$cards$ICardUtils$terse_name$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clui_om.misc.cards.terse_name[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clui_om.misc.cards.terse_name["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICardUtils.terse-name", this$);
        }
      }
    }().call(null, this$);
  }
};
clui_om.misc.cards.entity_name = function entity_name(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clui_om$misc$cards$ICardUtils$entity_name$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clui_om$misc$cards$ICardUtils$entity_name$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clui_om.misc.cards.entity_name[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clui_om.misc.cards.entity_name["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICardUtils.entity-name", this$);
        }
      }
    }().call(null, this$);
  }
};
clui_om.misc.cards.beats_QMARK_ = function beats_QMARK_(this$, other) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clui_om$misc$cards$ICardUtils$beats_QMARK_$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clui_om$misc$cards$ICardUtils$beats_QMARK_$arity$2(this$, other);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clui_om.misc.cards.beats_QMARK_[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clui_om.misc.cards.beats_QMARK_["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICardUtils.beats?", this$);
        }
      }
    }().call(null, this$, other);
  }
};
clui_om.misc.cards.red_black = function red_black(this$) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.clui_om$misc$cards$ICardUtils$red_black$arity$1;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.clui_om$misc$cards$ICardUtils$red_black$arity$1(this$);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = clui_om.misc.cards.red_black[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = clui_om.misc.cards.red_black["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICardUtils.red-black", this$);
        }
      }
    }().call(null, this$);
  }
};
clui_om.misc.cards.Card = function(rank, suit, __meta, __extmap, __hash) {
  this.rank = rank;
  this.suit = suit;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
clui_om.misc.cards.Card.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4231__auto__, k__4232__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4231__auto____$1, k__4232__auto__, null);
};
clui_om.misc.cards.Card.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4233__auto__, k17280, else__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  var G__17282 = k17280 instanceof cljs.core.Keyword ? k17280.fqn : null;
  switch(G__17282) {
    case "suit":
      return self__.suit;
      break;
    case "rank":
      return self__.rank;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17280, else__4234__auto__);
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4245__auto__, writer__4246__auto__, opts__4247__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  var pr_pair__4248__auto__ = function(this__4245__auto____$1) {
    return function(keyval__4249__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, cljs.core.pr_writer, "", " ", "", opts__4247__auto__, keyval__4249__auto__);
    };
  }(this__4245__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4246__auto__, pr_pair__4248__auto__, "#clui-om.misc.cards.Card{", ", ", "}", opts__4247__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rank", "rank", -1706728502), self__.rank], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "suit", "suit", -869827520), self__.suit], null)], null), self__.__extmap));
};
clui_om.misc.cards.Card.prototype.om$core$IToCursor$ = true;
clui_om.misc.cards.Card.prototype.om$core$IToCursor$_to_cursor$arity$3 = function(value, state, path) {
  var self__ = this;
  var value__$1 = this;
  return value__$1;
};
clui_om.misc.cards.Card.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  return self__.__meta;
};
clui_om.misc.cards.Card.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return new clui_om.misc.cards.Card(self__.rank, self__.suit, self__.__meta, self__.__extmap, self__.__hash);
};
clui_om.misc.cards.Card.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4235__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
clui_om.misc.cards.Card.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4226__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  var h__4049__auto__ = self__.__hash;
  if (!(h__4049__auto__ == null)) {
    return h__4049__auto__;
  } else {
    var h__4049__auto____$1 = cljs.core.hash_imap.call(null, this__4226__auto____$1);
    self__.__hash = h__4049__auto____$1;
    return h__4049__auto____$1;
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4227__auto__, other__4228__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = other__4228__auto__;
    if (cljs.core.truth_(and__3616__auto__)) {
      return this__4227__auto____$1.constructor === other__4228__auto__.constructor && cljs.core.equiv_map.call(null, this__4227__auto____$1, other__4228__auto__);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4240__auto__, k__4241__auto__) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "suit", "suit", -869827520), null, new cljs.core.Keyword(null, "rank", "rank", -1706728502), null], null), null), k__4241__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4240__auto____$1), self__.__meta), k__4241__auto__);
  } else {
    return new clui_om.misc.cards.Card(self__.rank, self__.suit, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4241__auto__)), null);
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4238__auto__, k__4239__auto__, G__17279) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  var pred__17283 = cljs.core.keyword_identical_QMARK_;
  var expr__17284 = k__4239__auto__;
  if (cljs.core.truth_(pred__17283.call(null, new cljs.core.Keyword(null, "rank", "rank", -1706728502), expr__17284))) {
    return new clui_om.misc.cards.Card(G__17279, self__.suit, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17283.call(null, new cljs.core.Keyword(null, "suit", "suit", -869827520), expr__17284))) {
      return new clui_om.misc.cards.Card(self__.rank, G__17279, self__.__meta, self__.__extmap, null);
    } else {
      return new clui_om.misc.cards.Card(self__.rank, self__.suit, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4239__auto__, G__17279), null);
    }
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rank", "rank", -1706728502), self__.rank], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suit", "suit", -869827520), self__.suit], null)], null), self__.__extmap));
};
clui_om.misc.cards.Card.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4230__auto__, G__17279) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  return new clui_om.misc.cards.Card(self__.rank, self__.suit, G__17279, self__.__extmap, self__.__hash);
};
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$ = true;
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$verbose_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return[cljs.core.str(cljs.core.nth.call(null, clui_om.misc.cards.english_ranks, (new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(this$__$1))), cljs.core.str(" of "), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "suit", "suit", -869827520)).cljs$core$IFn$_invoke$arity$1(this$__$1)))].join("");
};
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$terse_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return[cljs.core.str(clui_om.misc.cards.pretty_rank.call(null, (new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(this$__$1))), cljs.core.str(clojure.string.capitalize.call(null, cljs.core.first.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "suit", "suit", -869827520)).cljs$core$IFn$_invoke$arity$1(this$__$1)))))].join("");
};
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$entity_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return[cljs.core.str(clui_om.misc.cards.pretty_rank.call(null, (new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(this$__$1))), cljs.core.str(clui_om.misc.cards.entity_suits.call(null, (new cljs.core.Keyword(null, "suit", "suit", -869827520)).cljs$core$IFn$_invoke$arity$1(this$__$1)))].join("");
};
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$beats_QMARK_$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return(new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(this$__$1) > (new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(other);
};
clui_om.misc.cards.Card.prototype.clui_om$misc$cards$ICardUtils$red_black$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "diamonds", "diamonds", -145346074), null, new cljs.core.Keyword(null, "hearts", "hearts", -701365391), null], null), null)).call(null, (new cljs.core.Keyword(null, "suit", "suit", -869827520)).cljs$core$IFn$_invoke$arity$1(this$__$1)))) {
    return new cljs.core.Keyword(null, "red", "red", -969428204);
  } else {
    return new cljs.core.Keyword(null, "black", "black", 1294279647);
  }
};
clui_om.misc.cards.Card.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4236__auto__, entry__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4237__auto__)) {
    return cljs.core._assoc.call(null, this__4236__auto____$1, cljs.core._nth.call(null, entry__4237__auto__, 0), cljs.core._nth.call(null, entry__4237__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4236__auto____$1, entry__4237__auto__);
  }
};
clui_om.misc.cards.Card.cljs$lang$type = true;
clui_om.misc.cards.Card.cljs$lang$ctorPrSeq = function(this__4265__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "clui-om.misc.cards/Card");
};
clui_om.misc.cards.Card.cljs$lang$ctorPrWriter = function(this__4265__auto__, writer__4266__auto__) {
  return cljs.core._write.call(null, writer__4266__auto__, "clui-om.misc.cards/Card");
};
clui_om.misc.cards.__GT_Card = function __GT_Card(rank, suit) {
  return new clui_om.misc.cards.Card(rank, suit, null, null, null);
};
clui_om.misc.cards.map__GT_Card = function map__GT_Card(G__17281) {
  return new clui_om.misc.cards.Card((new cljs.core.Keyword(null, "rank", "rank", -1706728502)).cljs$core$IFn$_invoke$arity$1(G__17281), (new cljs.core.Keyword(null, "suit", "suit", -869827520)).cljs$core$IFn$_invoke$arity$1(G__17281), null, cljs.core.dissoc.call(null, G__17281, new cljs.core.Keyword(null, "rank", "rank", -1706728502), new cljs.core.Keyword(null, "suit", "suit", -869827520)), null);
};
clui_om.misc.cards.fresh_deck = function fresh_deck() {
  var iter__4384__auto__ = function iter__17293(s__17294) {
    return new cljs.core.LazySeq(null, function() {
      var s__17294__$1 = s__17294;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__17294__$1);
        if (temp__4126__auto__) {
          var xs__4624__auto__ = temp__4126__auto__;
          var r = cljs.core.first.call(null, xs__4624__auto__);
          var iterys__4380__auto__ = function(s__17294__$1, r, xs__4624__auto__, temp__4126__auto__) {
            return function iter__17295(s__17296) {
              return new cljs.core.LazySeq(null, function(s__17294__$1, r, xs__4624__auto__, temp__4126__auto__) {
                return function() {
                  var s__17296__$1 = s__17296;
                  while (true) {
                    var temp__4126__auto____$1 = cljs.core.seq.call(null, s__17296__$1);
                    if (temp__4126__auto____$1) {
                      var s__17296__$2 = temp__4126__auto____$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__17296__$2)) {
                        var c__4382__auto__ = cljs.core.chunk_first.call(null, s__17296__$2);
                        var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
                        var b__17298 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
                        if (function() {
                          var i__17297 = 0;
                          while (true) {
                            if (i__17297 < size__4383__auto__) {
                              var s = cljs.core._nth.call(null, c__4382__auto__, i__17297);
                              cljs.core.chunk_append.call(null, b__17298, clui_om.misc.cards.__GT_Card.call(null, r, s));
                              var G__17299 = i__17297 + 1;
                              i__17297 = G__17299;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17298), iter__17295.call(null, cljs.core.chunk_rest.call(null, s__17296__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17298), null);
                        }
                      } else {
                        var s = cljs.core.first.call(null, s__17296__$2);
                        return cljs.core.cons.call(null, clui_om.misc.cards.__GT_Card.call(null, r, s), iter__17295.call(null, cljs.core.rest.call(null, s__17296__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(s__17294__$1, r, xs__4624__auto__, temp__4126__auto__), null, null);
            };
          }(s__17294__$1, r, xs__4624__auto__, temp__4126__auto__);
          var fs__4381__auto__ = cljs.core.seq.call(null, iterys__4380__auto__.call(null, clui_om.misc.cards.suits));
          if (fs__4381__auto__) {
            return cljs.core.concat.call(null, fs__4381__auto__, iter__17293.call(null, cljs.core.rest.call(null, s__17294__$1)));
          } else {
            var G__17300 = cljs.core.rest.call(null, s__17294__$1);
            s__17294__$1 = G__17300;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4384__auto__.call(null, clui_om.misc.cards.ranks);
};
clui_om.misc.cards.shuffled_deck = function shuffled_deck() {
  return cljs.core.shuffle.call(null, clui_om.misc.cards.fresh_deck.call(null));
};
clui_om.misc.cards.card_display_txt = function card_display_txt(card, owner) {
  if (typeof clui_om.misc.cards.t17304 !== "undefined") {
  } else {
    clui_om.misc.cards.t17304 = function(owner, card, card_display_txt, meta17305) {
      this.owner = owner;
      this.card = card;
      this.card_display_txt = card_display_txt;
      this.meta17305 = meta17305;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.misc.cards.t17304.prototype.om$core$IRender$ = true;
    clui_om.misc.cards.t17304.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var col = clui_om.misc.cards.red_black.call(null, self__.card);
      return React.DOM.span({"dangerouslySetInnerHTML":{"__html":clui_om.misc.cards.entity_name.call(null, self__.card)}, "alt":clui_om.misc.cards.verbose_name.call(null, self__.card), "title":clui_om.misc.cards.verbose_name.call(null, self__.card), "className":[cljs.core.str("cardDisplay "), cljs.core.str(cljs.core.name.call(null, col))].join("")});
    };
    clui_om.misc.cards.t17304.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17306) {
      var self__ = this;
      var _17306__$1 = this;
      return self__.meta17305;
    };
    clui_om.misc.cards.t17304.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17306, meta17305__$1) {
      var self__ = this;
      var _17306__$1 = this;
      return new clui_om.misc.cards.t17304(self__.owner, self__.card, self__.card_display_txt, meta17305__$1);
    };
    clui_om.misc.cards.t17304.cljs$lang$type = true;
    clui_om.misc.cards.t17304.cljs$lang$ctorStr = "clui-om.misc.cards/t17304";
    clui_om.misc.cards.t17304.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.misc.cards/t17304");
    };
    clui_om.misc.cards.__GT_t17304 = function __GT_t17304(owner__$1, card__$1, card_display_txt__$1, meta17305) {
      return new clui_om.misc.cards.t17304(owner__$1, card__$1, card_display_txt__$1, meta17305);
    };
  }
  return new clui_om.misc.cards.t17304(owner, card, card_display_txt, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 61, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 87, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 79, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/misc/cards.cljs"], 
  null));
};
clui_om.misc.cards.deck_images = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["images/deckAlpha.png", "images/deckShuffling.png", "images/deckShuffling2.png", "images/deckShuffling3.png", "images/deckShuffling4.png", "images/deckBeta.png"], null);
clui_om.misc.cards.shuffled_images = function shuffled_images() {
  return cljs.core.shuffle.call(null, cljs.core.concat.call(null, clui_om.misc.cards.deck_images, clui_om.misc.cards.deck_images, clui_om.misc.cards.deck_images));
};
clui_om.misc.cards.rotate_images = function rotate_images(owner, images) {
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__) {
          return function(state_17358) {
            var state_val_17359 = state_17358[1];
            if (state_val_17359 === 7) {
              var inst_17344 = state_17358[7];
              var inst_17349 = state_17358[2];
              var inst_17342 = inst_17344;
              var state_17358__$1 = function() {
                var statearr_17360 = state_17358;
                statearr_17360[8] = inst_17342;
                statearr_17360[9] = inst_17349;
                return statearr_17360;
              }();
              var statearr_17361_17377 = state_17358__$1;
              statearr_17361_17377[2] = null;
              statearr_17361_17377[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17359 === 6) {
                var inst_17354 = state_17358[2];
                var state_17358__$1 = state_17358;
                var statearr_17362_17378 = state_17358__$1;
                statearr_17362_17378[2] = inst_17354;
                statearr_17362_17378[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17359 === 5) {
                  var inst_17352 = om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "img-seq", "img-seq", -807912262), images);
                  var state_17358__$1 = state_17358;
                  var statearr_17363_17379 = state_17358__$1;
                  statearr_17363_17379[2] = inst_17352;
                  statearr_17363_17379[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17359 === 4) {
                    var inst_17344 = state_17358[7];
                    var inst_17346 = om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "img-seq", "img-seq", -807912262), inst_17344);
                    var inst_17347 = cljs.core.async.timeout.call(null, 80);
                    var state_17358__$1 = function() {
                      var statearr_17364 = state_17358;
                      statearr_17364[10] = inst_17346;
                      return statearr_17364;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17358__$1, 7, inst_17347);
                  } else {
                    if (state_val_17359 === 3) {
                      var inst_17356 = state_17358[2];
                      var state_17358__$1 = state_17358;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17358__$1, inst_17356);
                    } else {
                      if (state_val_17359 === 2) {
                        var inst_17342 = state_17358[8];
                        var inst_17344 = state_17358[7];
                        var inst_17344__$1 = cljs.core.next.call(null, inst_17342);
                        var state_17358__$1 = function() {
                          var statearr_17365 = state_17358;
                          statearr_17365[7] = inst_17344__$1;
                          return statearr_17365;
                        }();
                        if (inst_17344__$1) {
                          var statearr_17366_17380 = state_17358__$1;
                          statearr_17366_17380[1] = 4;
                        } else {
                          var statearr_17367_17381 = state_17358__$1;
                          statearr_17367_17381[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17359 === 1) {
                          var inst_17342 = images;
                          var state_17358__$1 = function() {
                            var statearr_17368 = state_17358;
                            statearr_17368[8] = inst_17342;
                            return statearr_17368;
                          }();
                          var statearr_17369_17382 = state_17358__$1;
                          statearr_17369_17382[2] = null;
                          statearr_17369_17382[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto__);
        return function(switch__6493__auto__, c__6508__auto__) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_17373 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17373[0] = state_machine__6494__auto__;
              statearr_17373[1] = 1;
              return statearr_17373;
            };
            var state_machine__6494__auto____1 = function(state_17358) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_17358);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e17374) {
                    if (e17374 instanceof Object) {
                      var ex__6497__auto__ = e17374;
                      var statearr_17375_17383 = state_17358;
                      statearr_17375_17383[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17358);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17374;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17384 = state_17358;
                  state_17358 = G__17384;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_17358) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_17358);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__);
      }();
      var state__6510__auto__ = function() {
        var statearr_17376 = f__6509__auto__.call(null);
        statearr_17376[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_17376;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__));
  return c__6508__auto__;
};
clui_om.misc.cards.deck_display = function deck_display(cursor, owner) {
  if (typeof clui_om.misc.cards.t17390 !== "undefined") {
  } else {
    clui_om.misc.cards.t17390 = function(owner, cursor, deck_display, meta17391) {
      this.owner = owner;
      this.cursor = cursor;
      this.deck_display = deck_display;
      this.meta17391 = meta17391;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.misc.cards.t17390.prototype.om$core$IRenderState$ = true;
    clui_om.misc.cards.t17390.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__17393) {
      var self__ = this;
      var map__17394 = p__17393;
      var map__17394__$1 = cljs.core.seq_QMARK_.call(null, map__17394) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17394) : map__17394;
      var img_seq = cljs.core.get.call(null, map__17394__$1, new cljs.core.Keyword(null, "img-seq", "img-seq", -807912262));
      var shuffle = cljs.core.get.call(null, map__17394__$1, new cljs.core.Keyword(null, "shuffle", "shuffle", 1261412160));
      var draw = cljs.core.get.call(null, map__17394__$1, new cljs.core.Keyword(null, "draw", "draw", 1358331674));
      var ___$1 = this;
      return React.DOM.div({"className":"deckDisplay"}, React.DOM.span({"className":"deckIcon"}, React.DOM.img({"width":31, "height":42, "alt":"Deck of cards (image)", "src":cljs.core.first.call(null, img_seq), "className":"deckImg"}), React.DOM.span({"className":"deckCensus"}, cljs.core.count.call(null, (new cljs.core.Keyword(null, "deck", "deck", 1145325705)).cljs$core$IFn$_invoke$arity$1(self__.cursor)))), React.DOM.button({"type":"button", "onClick":function(___$1, map__17394, map__17394__$1, 
      img_seq, shuffle, draw) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, draw, "(deck-display):: draw button click!");
        };
      }(___$1, map__17394, map__17394__$1, img_seq, shuffle, draw), "className":"btn btn-default"}, "Draw A Card"), React.DOM.button(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), "btn btn-default", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(___$1, map__17394, map__17394__$1, img_seq, shuffle, draw) {
        return function(e) {
          cljs.core.async.put_BANG_.call(null, shuffle, "(deck-display):: shuffle btton click!");
          return clui_om.misc.cards.rotate_images.call(null, self__.owner, clui_om.misc.cards.shuffled_images.call(null));
        };
      }(___$1, map__17394, map__17394__$1, img_seq, shuffle, draw), new cljs.core.Keyword(null, "type", "type", 1174270348), "button"], null)), "Shuffle Deck"));
    };
    clui_om.misc.cards.t17390.prototype.om$core$IInitState$ = true;
    clui_om.misc.cards.t17390.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "img-seq", "img-seq", -807912262), clui_om.misc.cards.shuffled_images.call(null)], null);
    };
    clui_om.misc.cards.t17390.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17392) {
      var self__ = this;
      var _17392__$1 = this;
      return self__.meta17391;
    };
    clui_om.misc.cards.t17390.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17392, meta17391__$1) {
      var self__ = this;
      var _17392__$1 = this;
      return new clui_om.misc.cards.t17390(self__.owner, self__.cursor, self__.deck_display, meta17391__$1);
    };
    clui_om.misc.cards.t17390.cljs$lang$type = true;
    clui_om.misc.cards.t17390.cljs$lang$ctorStr = "clui-om.misc.cards/t17390";
    clui_om.misc.cards.t17390.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.misc.cards/t17390");
    };
    clui_om.misc.cards.__GT_t17390 = function __GT_t17390(owner__$1, cursor__$1, deck_display__$1, meta17391) {
      return new clui_om.misc.cards.t17390(owner__$1, cursor__$1, deck_display__$1, meta17391);
    };
  }
  return new clui_om.misc.cards.t17390(owner, cursor, deck_display, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 139, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 116, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/misc/cards.cljs"], 
  null));
};
clui_om.misc.cards.hand_display = function hand_display(cursor, owner) {
  if (typeof clui_om.misc.cards.t17400 !== "undefined") {
  } else {
    clui_om.misc.cards.t17400 = function(owner, cursor, hand_display, meta17401) {
      this.owner = owner;
      this.cursor = cursor;
      this.hand_display = hand_display;
      this.meta17401 = meta17401;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.misc.cards.t17400.prototype.om$core$IRenderState$ = true;
    clui_om.misc.cards.t17400.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__17403) {
      var self__ = this;
      var map__17404 = p__17403;
      var map__17404__$1 = cljs.core.seq_QMARK_.call(null, map__17404) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17404) : map__17404;
      var showing = cljs.core.get.call(null, map__17404__$1, new cljs.core.Keyword(null, "showing", "showing", 798009604));
      var ___$1 = this;
      var hand = (new cljs.core.Keyword(null, "hand", "hand", 791601933)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      console.log("hand-display rendering:: ", cljs.core.count.call(null, hand), " cards in hand: ", hand);
      return React.DOM.div({"className":"cardDisplay"}, React.DOM.div({"className":"cardStatus"}, React.DOM.span({"className":"numCards"}, cljs.core.count.call(null, hand)), React.DOM.span({"className":"showing"}, cljs.core.truth_(showing) ? "Face up" : "Face down")), cljs.core.apply.call(null, om.dom.div, {"className":"cards"}, om.core.build_all.call(null, clui_om.misc.cards.card_display_txt, hand)));
    };
    clui_om.misc.cards.t17400.prototype.om$core$IInitState$ = true;
    clui_om.misc.cards.t17400.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "showing", "showing", 798009604), true], null);
    };
    clui_om.misc.cards.t17400.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17402) {
      var self__ = this;
      var _17402__$1 = this;
      return self__.meta17401;
    };
    clui_om.misc.cards.t17400.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17402, meta17401__$1) {
      var self__ = this;
      var _17402__$1 = this;
      return new clui_om.misc.cards.t17400(self__.owner, self__.cursor, self__.hand_display, meta17401__$1);
    };
    clui_om.misc.cards.t17400.cljs$lang$type = true;
    clui_om.misc.cards.t17400.cljs$lang$ctorStr = "clui-om.misc.cards/t17400";
    clui_om.misc.cards.t17400.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.misc.cards/t17400");
    };
    clui_om.misc.cards.__GT_t17400 = function __GT_t17400(owner__$1, cursor__$1, hand_display__$1, meta17401) {
      return new clui_om.misc.cards.t17400(owner__$1, cursor__$1, hand_display__$1, meta17401);
    };
  }
  return new clui_om.misc.cards.t17400(owner, cursor, hand_display, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 68, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 160, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 144, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/misc/cards.cljs"], 
  null));
};
goog.provide("clui_om.svg.utils");
goog.require("cljs.core");
goog.require("hickory.render");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
goog.require("hickory.select");
goog.require("clojure.string");
goog.require("hickory.core");
clui_om.svg.utils.load_svg = function load_svg(uri) {
  var out = cljs.core.async.chan.call(null);
  var c__6508__auto___20975 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___20975, out) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___20975, out) {
          return function(state_20960) {
            var state_val_20961 = state_20960[1];
            if (state_val_20961 === 5) {
              var inst_20954 = state_20960[2];
              var inst_20955 = cljs.core.get.call(null, inst_20954, new cljs.core.Keyword(null, "headers", "headers", -835030129));
              var inst_20956 = cljs.core.get.call(null, inst_20954, new cljs.core.Keyword(null, "body", "body", -2049205669));
              var inst_20957 = cljs.core.get.call(null, inst_20954, new cljs.core.Keyword(null, "status", "status", -1997798413));
              var inst_20958 = cljs.core.async.put_BANG_.call(null, out, inst_20956);
              var state_20960__$1 = function() {
                var statearr_20962 = state_20960;
                statearr_20962[7] = inst_20957;
                statearr_20962[8] = inst_20955;
                return statearr_20962;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20960__$1, inst_20958);
            } else {
              if (state_val_20961 === 4) {
                var inst_20948 = state_20960[9];
                var state_20960__$1 = state_20960;
                var statearr_20963_20976 = state_20960__$1;
                statearr_20963_20976[2] = inst_20948;
                statearr_20963_20976[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20961 === 3) {
                  var inst_20948 = state_20960[9];
                  var inst_20951 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20948);
                  var state_20960__$1 = state_20960;
                  var statearr_20964_20977 = state_20960__$1;
                  statearr_20964_20977[2] = inst_20951;
                  statearr_20964_20977[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20961 === 2) {
                    var inst_20948 = state_20960[9];
                    var inst_20948__$1 = state_20960[2];
                    var inst_20949 = cljs.core.seq_QMARK_.call(null, inst_20948__$1);
                    var state_20960__$1 = function() {
                      var statearr_20965 = state_20960;
                      statearr_20965[9] = inst_20948__$1;
                      return statearr_20965;
                    }();
                    if (inst_20949) {
                      var statearr_20966_20978 = state_20960__$1;
                      statearr_20966_20978[1] = 3;
                    } else {
                      var statearr_20967_20979 = state_20960__$1;
                      statearr_20967_20979[1] = 4;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20961 === 1) {
                      var inst_20946 = cljs_http.client.get.call(null, uri);
                      var state_20960__$1 = state_20960;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20960__$1, 2, inst_20946);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto___20975, out);
        return function(switch__6493__auto__, c__6508__auto___20975, out) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_20971 = [null, null, null, null, null, null, null, null, null, null];
              statearr_20971[0] = state_machine__6494__auto__;
              statearr_20971[1] = 1;
              return statearr_20971;
            };
            var state_machine__6494__auto____1 = function(state_20960) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_20960);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e20972) {
                    if (e20972 instanceof Object) {
                      var ex__6497__auto__ = e20972;
                      var statearr_20973_20980 = state_20960;
                      statearr_20973_20980[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20960);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20972;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20981 = state_20960;
                  state_20960 = G__20981;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_20960) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_20960);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___20975, out);
      }();
      var state__6510__auto__ = function() {
        var statearr_20974 = f__6509__auto__.call(null);
        statearr_20974[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___20975;
        return statearr_20974;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___20975, out));
  return out;
};
clui_om.svg.utils.parse_body = function parse_body(blob) {
  var parsed = hickory.core.parse.call(null, blob);
  var h_data = hickory.core.as_hickory.call(null, parsed);
  var root = cljs.core.first.call(null, hickory.select.select.call(null, hickory.select.tag.call(null, new cljs.core.Keyword(null, "svg", "svg", 856789142)), h_data));
  var attrs = (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(root);
  var elements = cljs.core.filter.call(null, cljs.core.map_QMARK_, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(root));
  var inner_html = cljs.core.apply.call(null, cljs.core.str, cljs.core.mapv.call(null, hickory.render.hickory_to_html, elements));
  var non_digits = /[^0-9.]/;
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "width", "width", -384071477), clojure.string.replace.call(null, (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(attrs), non_digits, ""), new cljs.core.Keyword(null, "height", "height", 1025178622), clojure.string.replace.call(null, (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(attrs), non_digits, ""), new cljs.core.Keyword(null, "x", 
  "x", 2099068185), (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(attrs), new cljs.core.Keyword(null, "y", "y", -1757859776), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(attrs), new cljs.core.Keyword(null, "preserve-aspect-ratio", "preserve-aspect-ratio", -1746347963), (new cljs.core.Keyword(null, "preserveaspectratio", "preserveaspectratio", 1684370871)).cljs$core$IFn$_invoke$arity$1(attrs), new cljs.core.Keyword(null, "view-box", 
  "view-box", -1792199155), (new cljs.core.Keyword(null, "viewbox", "viewbox", -1545612500)).cljs$core$IFn$_invoke$arity$1(attrs), new cljs.core.Keyword(null, "elements", "elements", 657646735), elements, new cljs.core.Keyword(null, "inner-html", "inner-html", 1794096354), inner_html], null);
};
clui_om.svg.utils.get_svg = function get_svg(uri) {
  var out = cljs.core.async.chan.call(null);
  var c__6508__auto___21014 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___21014, out) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___21014, out) {
          return function(state_21005) {
            var state_val_21006 = state_21005[1];
            if (state_val_21006 === 2) {
              var inst_21000 = state_21005[2];
              var inst_21001 = clui_om.svg.utils.parse_body.call(null, inst_21000);
              var inst_21002 = cljs.core.assoc.call(null, inst_21001, new cljs.core.Keyword(null, "uri", "uri", -774711847), uri);
              var inst_21003 = cljs.core.async.put_BANG_.call(null, out, inst_21002);
              var state_21005__$1 = state_21005;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21005__$1, inst_21003);
            } else {
              if (state_val_21006 === 1) {
                var inst_20998 = clui_om.svg.utils.load_svg.call(null, uri);
                var state_21005__$1 = state_21005;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21005__$1, 2, inst_20998);
              } else {
                return null;
              }
            }
          };
        }(c__6508__auto___21014, out);
        return function(switch__6493__auto__, c__6508__auto___21014, out) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_21010 = [null, null, null, null, null, null, null];
              statearr_21010[0] = state_machine__6494__auto__;
              statearr_21010[1] = 1;
              return statearr_21010;
            };
            var state_machine__6494__auto____1 = function(state_21005) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_21005);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e21011) {
                    if (e21011 instanceof Object) {
                      var ex__6497__auto__ = e21011;
                      var statearr_21012_21015 = state_21005;
                      statearr_21012_21015[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21005);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21011;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21016 = state_21005;
                  state_21005 = G__21016;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_21005) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_21005);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___21014, out);
      }();
      var state__6510__auto__ = function() {
        var statearr_21013 = f__6509__auto__.call(null);
        statearr_21013[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___21014;
        return statearr_21013;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___21014, out));
  return out;
};
goog.provide("clui_om.svg.icons");
goog.require("cljs.core");
goog.require("clui_om.svg.utils");
goog.require("om.dom");
goog.require("om.core");
goog.require("cljs.core.async");
clui_om.svg.icons.om_tags = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "radialgradient", "radialgradient", 1660921384), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "stop", "stop", -2140911342), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "tspan", "tspan", -1557853197), new cljs.core.Keyword(null, 
"defs", "defs", 1398449717), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "ellipse", "ellipse", 1135891702), new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.Keyword(null, "rect", "rect", -108902628), new cljs.core.Keyword(null, "lineargradient", "lineargradient", 506281886), new cljs.core.Keyword(null, "polygon", "polygon", 837053759), new cljs.core.Keyword(null, "text", "text", -1790561697)], [om.dom.path, om.dom.radialGradient, 
om.dom.circle, om.dom.g, om.dom.stop, om.dom.line, om.dom.tspan, om.dom.defs, om.dom.svg, om.dom.ellipse, om.dom.polyline, om.dom.rect, om.dom.linearGradient, om.dom.polygon, om.dom.text]);
clui_om.svg.icons.reify_children = function reify_children(p__20902) {
  var map__20904 = p__20902;
  var map__20904__$1 = cljs.core.seq_QMARK_.call(null, map__20904) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20904) : map__20904;
  var elt = map__20904__$1;
  var content = cljs.core.get.call(null, map__20904__$1, new cljs.core.Keyword(null, "content", "content", 15833224));
  var attrs = cljs.core.get.call(null, map__20904__$1, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713));
  var tag = cljs.core.get.call(null, map__20904__$1, new cljs.core.Keyword(null, "tag", "tag", -1290361223));
  var dom_fn = tag.call(null, clui_om.svg.icons.om_tags);
  var children = cljs.core.filterv.call(null, cljs.core.map_QMARK_, content);
  if (cljs.core.truth_(dom_fn)) {
    return cljs.core.apply.call(null, dom_fn, cljs.core.clj__GT_js.call(null, attrs), cljs.core.map.call(null, reify_children, children));
  } else {
    return null;
  }
};
clui_om.svg.icons.auto_icon = function auto_icon(svg) {
  return function(cursor, owner, p__20910) {
    var map__20911 = p__20910;
    var map__20911__$1 = cljs.core.seq_QMARK_.call(null, map__20911) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20911) : map__20911;
    var opts = map__20911__$1;
    var attrs = cljs.core.get.call(null, map__20911__$1, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713));
    if (typeof clui_om.svg.icons.t20912 !== "undefined") {
    } else {
      clui_om.svg.icons.t20912 = function(attrs, opts, map__20911, p__20910, owner, cursor, svg, auto_icon, meta20913) {
        this.attrs = attrs;
        this.opts = opts;
        this.map__20911 = map__20911;
        this.p__20910 = p__20910;
        this.owner = owner;
        this.cursor = cursor;
        this.svg = svg;
        this.auto_icon = auto_icon;
        this.meta20913 = meta20913;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      clui_om.svg.icons.t20912.prototype.om$core$IRender$ = true;
      clui_om.svg.icons.t20912.prototype.om$core$IRender$render$arity$1 = function(map__20911, map__20911__$1, opts, attrs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          var children = (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(self__.svg);
          var raw_attrs = cljs.core.dissoc.call(null, cljs.core.dissoc.call(null, cljs.core.dissoc.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(self__.svg), new cljs.core.Keyword(null, "height", "height", 1025178622)), new cljs.core.Keyword(null, "width", "width", -384071477)), new cljs.core.Keyword(null, "style", "style", -496642736));
          var final_attrs = cljs.core.merge.call(null, raw_attrs, self__.attrs);
          return cljs.core.apply.call(null, om.dom.svg, cljs.core.clj__GT_js.call(null, final_attrs), cljs.core.map.call(null, clui_om.svg.icons.reify_children, children));
        };
      }(map__20911, map__20911__$1, opts, attrs);
      clui_om.svg.icons.t20912.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__20911, map__20911__$1, opts, attrs) {
        return function(_20914) {
          var self__ = this;
          var _20914__$1 = this;
          return self__.meta20913;
        };
      }(map__20911, map__20911__$1, opts, attrs);
      clui_om.svg.icons.t20912.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__20911, map__20911__$1, opts, attrs) {
        return function(_20914, meta20913__$1) {
          var self__ = this;
          var _20914__$1 = this;
          return new clui_om.svg.icons.t20912(self__.attrs, self__.opts, self__.map__20911, self__.p__20910, self__.owner, self__.cursor, self__.svg, self__.auto_icon, meta20913__$1);
        };
      }(map__20911, map__20911__$1, opts, attrs);
      clui_om.svg.icons.t20912.cljs$lang$type = true;
      clui_om.svg.icons.t20912.cljs$lang$ctorStr = "clui-om.svg.icons/t20912";
      clui_om.svg.icons.t20912.cljs$lang$ctorPrWriter = function(map__20911, map__20911__$1, opts, attrs) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "clui-om.svg.icons/t20912");
        };
      }(map__20911, map__20911__$1, opts, attrs);
      clui_om.svg.icons.__GT_t20912 = function(map__20911, map__20911__$1, opts, attrs) {
        return function __GT_t20912(attrs__$1, opts__$1, map__20911__$2, p__20910__$1, owner__$1, cursor__$1, svg__$1, auto_icon__$1, meta20913) {
          return new clui_om.svg.icons.t20912(attrs__$1, opts__$1, map__20911__$2, p__20910__$1, owner__$1, cursor__$1, svg__$1, auto_icon__$1, meta20913);
        };
      }(map__20911, map__20911__$1, opts, attrs);
    }
    return new clui_om.svg.icons.t20912(attrs, opts, map__20911__$1, p__20910, owner, cursor, svg, auto_icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 51, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 65, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 55, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/svg/icons.cljs"], 
    null));
  };
};
goog.provide("draggable.core");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("cljs.core.async");
draggable.core.IDragStart = function() {
  var obj21057 = {};
  return obj21057;
}();
draggable.core.drag_start = function drag_start(this$, event) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.draggable$core$IDragStart$drag_start$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.draggable$core$IDragStart$drag_start$arity$2(this$, event);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = draggable.core.drag_start[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = draggable.core.drag_start["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDragStart.drag-start", this$);
        }
      }
    }().call(null, this$, event);
  }
};
draggable.core.IDragMove = function() {
  var obj21059 = {};
  return obj21059;
}();
draggable.core.drag_move = function drag_move(this$, event) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.draggable$core$IDragMove$drag_move$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.draggable$core$IDragMove$drag_move$arity$2(this$, event);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = draggable.core.drag_move[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = draggable.core.drag_move["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDragMove.drag-move", this$);
        }
      }
    }().call(null, this$, event);
  }
};
draggable.core.IDragEnd = function() {
  var obj21061 = {};
  return obj21061;
}();
draggable.core.drag_end = function drag_end(this$, event) {
  if (function() {
    var and__3616__auto__ = this$;
    if (and__3616__auto__) {
      return this$.draggable$core$IDragEnd$drag_end$arity$2;
    } else {
      return and__3616__auto__;
    }
  }()) {
    return this$.draggable$core$IDragEnd$drag_end$arity$2(this$, event);
  } else {
    var x__4272__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3628__auto__ = draggable.core.drag_end[goog.typeOf(x__4272__auto__)];
      if (or__3628__auto__) {
        return or__3628__auto__;
      } else {
        var or__3628__auto____$1 = draggable.core.drag_end["_"];
        if (or__3628__auto____$1) {
          return or__3628__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDragEnd.drag-end", this$);
        }
      }
    }().call(null, this$, event);
  }
};
draggable.core._drag_start = function _drag_start(owner, event) {
  var node = om.core.get_node.call(null, owner);
  var rel_x = event.pageX - node.offsetLeft;
  var rel_y = event.pageY - node.offsetTop;
  om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), true);
  om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "rel-x", "rel-x", 118889928), rel_x);
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "rel-y", "rel-y", -1271884299), rel_y);
};
draggable.core.free_drag = function free_drag(owner) {
  if (typeof draggable.core.t21065 !== "undefined") {
  } else {
    draggable.core.t21065 = function(owner, free_drag, meta21066) {
      this.owner = owner;
      this.free_drag = free_drag;
      this.meta21066 = meta21066;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    draggable.core.t21065.prototype.draggable$core$IDragEnd$ = true;
    draggable.core.t21065.prototype.draggable$core$IDragEnd$drag_end$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var rel_y = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "rel-y", "rel-y", -1271884299));
        var rel_x = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "rel-x", "rel-x", 118889928));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), false);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), event.pageY - rel_y);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), event.pageX - rel_x);
      } else {
        return null;
      }
    };
    draggable.core.t21065.prototype.draggable$core$IDragMove$ = true;
    draggable.core.t21065.prototype.draggable$core$IDragMove$drag_move$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var rel_y = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "rel-y", "rel-y", -1271884299));
        var rel_x = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "rel-x", "rel-x", 118889928));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), event.pageY - rel_y);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), event.pageX - rel_x);
      } else {
        return null;
      }
    };
    draggable.core.t21065.prototype.draggable$core$IDragStart$ = true;
    draggable.core.t21065.prototype.draggable$core$IDragStart$drag_start$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      return draggable.core._drag_start.call(null, self__.owner, event);
    };
    draggable.core.t21065.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21067) {
      var self__ = this;
      var _21067__$1 = this;
      return self__.meta21066;
    };
    draggable.core.t21065.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21067, meta21066__$1) {
      var self__ = this;
      var _21067__$1 = this;
      return new draggable.core.t21065(self__.owner, self__.free_drag, meta21066__$1);
    };
    draggable.core.t21065.cljs$lang$type = true;
    draggable.core.t21065.cljs$lang$ctorStr = "draggable.core/t21065";
    draggable.core.t21065.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "draggable.core/t21065");
    };
    draggable.core.__GT_t21065 = function __GT_t21065(owner__$1, free_drag__$1, meta21066) {
      return new draggable.core.t21065(owner__$1, free_drag__$1, meta21066);
    };
  }
  return new draggable.core.t21065(owner, free_drag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 75, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 55, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 37, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/draggable/core.cljs"], null));
};
draggable.core.nearest_corner = function nearest_corner(cell_size, x, y, w, h) {
  var mod_x = cljs.core.mod.call(null, x, cell_size);
  var mod_y = cljs.core.mod.call(null, y, cell_size);
  var mod_w = cell_size - cljs.core.mod.call(null, x + w, cell_size);
  var mod_h = cell_size - cljs.core.mod.call(null, y + h, cell_size);
  var off_x = Math.floor(x / cell_size);
  var off_y = Math.floor(y / cell_size);
  var px = off_x * cell_size;
  var py = off_y * cell_size;
  var dx = (off_x + 1) * cell_size - w;
  var dy = (off_y + 1) * cell_size - h;
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [px, py], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mod_x, mod_y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dx, dy], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mod_w, mod_h], null)], 
  null);
};
draggable.core.grid_snap_coords = function grid_snap_coords(owner, cell_size, snap_threshold, ev) {
  var rel_x = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "rel-x", "rel-x", 118889928));
  var rel_y = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "rel-y", "rel-y", -1271884299));
  var node = om.core.get_node.call(null, owner);
  var ev_x = ev.pageX;
  var ev_y = ev.pageY;
  var w = node.clientWidth;
  var h = node.clientHeight;
  var vec__21073 = draggable.core.nearest_corner.call(null, cell_size, ev_x - rel_x, ev_y - rel_y, w, h);
  var vec__21074 = cljs.core.nth.call(null, vec__21073, 0, null);
  var px = cljs.core.nth.call(null, vec__21074, 0, null);
  var py = cljs.core.nth.call(null, vec__21074, 1, null);
  var vec__21075 = cljs.core.nth.call(null, vec__21073, 1, null);
  var mod_x = cljs.core.nth.call(null, vec__21075, 0, null);
  var mod_y = cljs.core.nth.call(null, vec__21075, 1, null);
  var vec__21076 = cljs.core.nth.call(null, vec__21073, 2, null);
  var dx = cljs.core.nth.call(null, vec__21076, 0, null);
  var dy = cljs.core.nth.call(null, vec__21076, 1, null);
  var vec__21077 = cljs.core.nth.call(null, vec__21073, 3, null);
  var mod_w = cljs.core.nth.call(null, vec__21077, 0, null);
  var mod_h = cljs.core.nth.call(null, vec__21077, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mod_x < snap_threshold ? px : mod_w < snap_threshold ? dx : ev_x - rel_x, mod_y < snap_threshold ? py : mod_h < snap_threshold ? dy : ev_y - rel_y], null);
};
draggable.core.grid_snap_drag = function grid_snap_drag(owner, cell_size, snap_threshold) {
  if (typeof draggable.core.t21083 !== "undefined") {
  } else {
    draggable.core.t21083 = function(snap_threshold, cell_size, owner, grid_snap_drag, meta21084) {
      this.snap_threshold = snap_threshold;
      this.cell_size = cell_size;
      this.owner = owner;
      this.grid_snap_drag = grid_snap_drag;
      this.meta21084 = meta21084;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    draggable.core.t21083.prototype.draggable$core$IDragEnd$ = true;
    draggable.core.t21083.prototype.draggable$core$IDragEnd$drag_end$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var vec__21086 = draggable.core.grid_snap_coords.call(null, self__.owner, self__.cell_size, self__.snap_threshold, event);
        var nx = cljs.core.nth.call(null, vec__21086, 0, null);
        var ny = cljs.core.nth.call(null, vec__21086, 1, null);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), false);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), nx);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), ny);
      } else {
        return null;
      }
    };
    draggable.core.t21083.prototype.draggable$core$IDragMove$ = true;
    draggable.core.t21083.prototype.draggable$core$IDragMove$drag_move$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var vec__21087 = draggable.core.grid_snap_coords.call(null, self__.owner, self__.cell_size, self__.snap_threshold, event);
        var nx = cljs.core.nth.call(null, vec__21087, 0, null);
        var ny = cljs.core.nth.call(null, vec__21087, 1, null);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), nx);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), ny);
      } else {
        return null;
      }
    };
    draggable.core.t21083.prototype.draggable$core$IDragStart$ = true;
    draggable.core.t21083.prototype.draggable$core$IDragStart$drag_start$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      return draggable.core._drag_start.call(null, self__.owner, event);
    };
    draggable.core.t21083.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21085) {
      var self__ = this;
      var _21085__$1 = this;
      return self__.meta21084;
    };
    draggable.core.t21083.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21085, meta21084__$1) {
      var self__ = this;
      var _21085__$1 = this;
      return new draggable.core.t21083(self__.snap_threshold, self__.cell_size, self__.owner, self__.grid_snap_drag, meta21084__$1);
    };
    draggable.core.t21083.cljs$lang$type = true;
    draggable.core.t21083.cljs$lang$ctorStr = "draggable.core/t21083";
    draggable.core.t21083.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "draggable.core/t21083");
    };
    draggable.core.__GT_t21083 = function __GT_t21083(snap_threshold__$1, cell_size__$1, owner__$1, grid_snap_drag__$1, meta21084) {
      return new draggable.core.t21083(snap_threshold__$1, cell_size__$1, owner__$1, grid_snap_drag__$1, meta21084);
    };
  }
  return new draggable.core.t21083(snap_threshold, cell_size, owner, grid_snap_drag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 50, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 118, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 102, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/draggable/core.cljs"], 
  null));
};
draggable.core.bbox__GT_guideline = function bbox__GT_guideline(guideline) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "hor", "hor", 2133892), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(guideline), ((new cljs.core.Keyword(null, "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(guideline) + (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(guideline)) / 2, (new cljs.core.Keyword(null, 
  "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(guideline) + (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(guideline)], null), new cljs.core.Keyword(null, "ver", "ver", 1683769565), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "left", "left", -399115937)).cljs$core$IFn$_invoke$arity$1(guideline), ((new cljs.core.Keyword(null, "left", "left", -399115937)).cljs$core$IFn$_invoke$arity$1(guideline) + 
  (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(guideline)) / 2, (new cljs.core.Keyword(null, "left", "left", -399115937)).cljs$core$IFn$_invoke$arity$1(guideline) + (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(guideline)], null)], null);
};
draggable.core.guidelines__GT_stops = function guidelines__GT_stops(guidelines) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "hor", "hor", 2133892), cljs.core.vec.call(null, cljs.core.sort.call(null, cljs.core.mapcat.call(null, new cljs.core.Keyword(null, "hor", "hor", 2133892), cljs.core.map.call(null, draggable.core.bbox__GT_guideline, guidelines)))), new cljs.core.Keyword(null, "ver", "ver", 1683769565), cljs.core.vec.call(null, cljs.core.sort.call(null, cljs.core.mapcat.call(null, new cljs.core.Keyword(null, "ver", "ver", 1683769565), cljs.core.map.call(null, 
  draggable.core.bbox__GT_guideline, guidelines))))], null);
};
draggable.core.closest_stop = function() {
  var closest_stop__delegate = function(series, axis_position, p__21088) {
    var vec__21090 = p__21088;
    var pos = cljs.core.nth.call(null, vec__21090, 0, null);
    var last_value = cljs.core.nth.call(null, vec__21090, 1, null);
    var last_diff = cljs.core.nth.call(null, vec__21090, 2, null);
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, series), pos)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [last_value, last_diff], null);
    } else {
      var pos__$1 = function() {
        var or__3628__auto__ = pos;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return 0;
        }
      }();
      var cur_val = cljs.core.nth.call(null, series, pos__$1);
      var cur_diff = Math.abs.call(null, axis_position - cur_val);
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = last_value;
        if (cljs.core.truth_(and__3616__auto__)) {
          return cur_diff > last_diff;
        } else {
          return and__3616__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [last_value, last_diff], null);
      } else {
        return closest_stop.call(null, series, axis_position, pos__$1 + 1, cur_val, cur_diff);
      }
    }
  };
  var closest_stop = function(series, axis_position, var_args) {
    var p__21088 = null;
    if (arguments.length > 2) {
      p__21088 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return closest_stop__delegate.call(this, series, axis_position, p__21088);
  };
  closest_stop.cljs$lang$maxFixedArity = 2;
  closest_stop.cljs$lang$applyTo = function(arglist__21091) {
    var series = cljs.core.first(arglist__21091);
    arglist__21091 = cljs.core.next(arglist__21091);
    var axis_position = cljs.core.first(arglist__21091);
    var p__21088 = cljs.core.rest(arglist__21091);
    return closest_stop__delegate(series, axis_position, p__21088);
  };
  closest_stop.cljs$core$IFn$_invoke$arity$variadic = closest_stop__delegate;
  return closest_stop;
}();
draggable.core.nearest_stops = function nearest_stops(guidelines, position, magnitude) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [draggable.core.closest_stop.call(null, guidelines, position), draggable.core.closest_stop.call(null, guidelines, position + magnitude / 2), draggable.core.closest_stop.call(null, guidelines, position + magnitude)], null);
};
draggable.core.guideline_snap_coords = function guideline_snap_coords(owner, guidelines, snap_threshold, ev) {
  var rel_x = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "rel-x", "rel-x", 118889928));
  var rel_y = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "rel-y", "rel-y", -1271884299));
  var node = om.core.get_node.call(null, owner);
  var ev_x = ev.pageX;
  var ev_y = ev.pageY;
  var w = node.clientWidth;
  var h = node.clientHeight;
  var stops = draggable.core.guidelines__GT_stops.call(null, guidelines);
  var vec__21100 = draggable.core.nearest_stops.call(null, (new cljs.core.Keyword(null, "ver", "ver", 1683769565)).cljs$core$IFn$_invoke$arity$1(stops), ev_x - rel_x, w);
  var vec__21101 = cljs.core.nth.call(null, vec__21100, 0, null);
  var origin_cx = cljs.core.nth.call(null, vec__21101, 0, null);
  var origin_diff_cx = cljs.core.nth.call(null, vec__21101, 1, null);
  var vec__21102 = cljs.core.nth.call(null, vec__21100, 1, null);
  var center_cx = cljs.core.nth.call(null, vec__21102, 0, null);
  var center_diff_cx = cljs.core.nth.call(null, vec__21102, 1, null);
  var vec__21103 = cljs.core.nth.call(null, vec__21100, 2, null);
  var dest_cx = cljs.core.nth.call(null, vec__21103, 0, null);
  var dest_diff_cx = cljs.core.nth.call(null, vec__21103, 1, null);
  var vec__21104 = draggable.core.nearest_stops.call(null, (new cljs.core.Keyword(null, "hor", "hor", 2133892)).cljs$core$IFn$_invoke$arity$1(stops), ev_y - rel_y, h);
  var vec__21105 = cljs.core.nth.call(null, vec__21104, 0, null);
  var origin_cy = cljs.core.nth.call(null, vec__21105, 0, null);
  var origin_diff_cy = cljs.core.nth.call(null, vec__21105, 1, null);
  var vec__21106 = cljs.core.nth.call(null, vec__21104, 1, null);
  var center_cy = cljs.core.nth.call(null, vec__21106, 0, null);
  var center_diff_cy = cljs.core.nth.call(null, vec__21106, 1, null);
  var vec__21107 = cljs.core.nth.call(null, vec__21104, 2, null);
  var dest_cy = cljs.core.nth.call(null, vec__21107, 0, null);
  var dest_diff_cy = cljs.core.nth.call(null, vec__21107, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [origin_diff_cx < snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", -399115937), origin_cx], null) : center_diff_cx < snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", -399115937), center_cx - w / 2], null) : dest_diff_cx < 
  snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", -399115937), dest_cx - w], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", -399115937), ev_x - rel_x], null), origin_diff_cy < snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "top", "top", 
  -1856271961), origin_cy], null) : center_diff_cy < snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "top", "top", -1856271961), center_cy - h / 2], null) : dest_diff_cy < snap_threshold ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "top", "top", -1856271961), dest_cy - h], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "top", "top", -1856271961), ev_y - rel_y], null)], null);
};
draggable.core.guideline_snap_drag = function guideline_snap_drag(owner, snap_threshold) {
  if (typeof draggable.core.t21117 !== "undefined") {
  } else {
    draggable.core.t21117 = function(snap_threshold, owner, guideline_snap_drag, meta21118) {
      this.snap_threshold = snap_threshold;
      this.owner = owner;
      this.guideline_snap_drag = guideline_snap_drag;
      this.meta21118 = meta21118;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    draggable.core.t21117.prototype.draggable$core$IDragEnd$ = true;
    draggable.core.t21117.prototype.draggable$core$IDragEnd$drag_end$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var vec__21120 = draggable.core.guideline_snap_coords.call(null, self__.owner, om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "guidelines", "guidelines", 91215231)), self__.snap_threshold, event);
        var vec__21121 = cljs.core.nth.call(null, vec__21120, 0, null);
        var hor_side = cljs.core.nth.call(null, vec__21121, 0, null);
        var cx = cljs.core.nth.call(null, vec__21121, 1, null);
        var vec__21122 = cljs.core.nth.call(null, vec__21120, 1, null);
        var ver_side = cljs.core.nth.call(null, vec__21122, 0, null);
        var cy = cljs.core.nth.call(null, vec__21122, 1, null);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), false);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), cx);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), cy);
      } else {
        return null;
      }
    };
    draggable.core.t21117.prototype.draggable$core$IDragMove$ = true;
    draggable.core.t21117.prototype.draggable$core$IDragMove$drag_move$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613)))) {
        var vec__21123 = draggable.core.guideline_snap_coords.call(null, self__.owner, om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "guidelines", "guidelines", 91215231)), self__.snap_threshold, event);
        var vec__21124 = cljs.core.nth.call(null, vec__21123, 0, null);
        var hor_side = cljs.core.nth.call(null, vec__21124, 0, null);
        var cx = cljs.core.nth.call(null, vec__21124, 1, null);
        var vec__21125 = cljs.core.nth.call(null, vec__21123, 1, null);
        var ver_side = cljs.core.nth.call(null, vec__21125, 0, null);
        var cy = cljs.core.nth.call(null, vec__21125, 1, null);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), cx);
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), cy);
      } else {
        return null;
      }
    };
    draggable.core.t21117.prototype.draggable$core$IDragStart$ = true;
    draggable.core.t21117.prototype.draggable$core$IDragStart$drag_start$arity$2 = function(_, event) {
      var self__ = this;
      var ___$1 = this;
      return draggable.core._drag_start.call(null, self__.owner, event);
    };
    draggable.core.t21117.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21119) {
      var self__ = this;
      var _21119__$1 = this;
      return self__.meta21118;
    };
    draggable.core.t21117.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21119, meta21118__$1) {
      var self__ = this;
      var _21119__$1 = this;
      return new draggable.core.t21117(self__.snap_threshold, self__.owner, self__.guideline_snap_drag, meta21118__$1);
    };
    draggable.core.t21117.cljs$lang$type = true;
    draggable.core.t21117.cljs$lang$ctorStr = "draggable.core/t21117";
    draggable.core.t21117.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "draggable.core/t21117");
    };
    draggable.core.__GT_t21117 = function __GT_t21117(snap_threshold__$1, owner__$1, guideline_snap_drag__$1, meta21118) {
      return new draggable.core.t21117(snap_threshold__$1, owner__$1, guideline_snap_drag__$1, meta21118);
    };
  }
  return new draggable.core.t21117(snap_threshold, owner, guideline_snap_drag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 50, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 199, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 181, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/draggable/core.cljs"], 
  null));
};
draggable.core.draggable = function draggable__$1(data, owner, opts) {
  if (typeof draggable.core.t21201 !== "undefined") {
  } else {
    draggable.core.t21201 = function(opts, owner, data, draggable, meta21202) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.draggable = draggable;
      this.meta21202 = meta21202;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    draggable.core.t21201.prototype.om$core$IRender$ = true;
    draggable.core.t21201.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var dragger = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragger", "dragger", 2062265815));
      return React.DOM.div({"onMouseUp":function(dragger, ___$1) {
        return function(p1__21126_SHARP_) {
          return draggable.core.drag_end.call(null, dragger, p1__21126_SHARP_);
        };
      }(dragger, ___$1), "onMouseDown":function(dragger, ___$1) {
        return function(ev) {
          ev.preventDefault();
          return draggable.core.drag_start.call(null, dragger, ev);
        };
      }(dragger, ___$1), "style":cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "left", "left", -399115937), om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216)), new cljs.core.Keyword(null, "top", "top", -1856271961), om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737)), new cljs.core.Keyword(null, "position", "position", -2011731912), 
      "absolute"], null)), "className":"draggable"}, om.core.build.call(null, (new cljs.core.Keyword(null, "sub-com", "sub-com", -129419304)).cljs$core$IFn$_invoke$arity$1(self__.data), (new cljs.core.Keyword(null, "sub-com-data", "sub-com-data", 468328296)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null)));
    };
    draggable.core.t21201.prototype.om$core$IWillMount$ = true;
    draggable.core.t21201.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-side", "hor-side", 1175214021), new cljs.core.Keyword(null, "left", "left", -399115937));
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hor-value", "hor-value", -471107216), function() {
        var or__3628__auto__ = (new cljs.core.Keyword(null, "left", "left", -399115937)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return 0;
        }
      }());
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-side", "ver-side", -1863520549), new cljs.core.Keyword(null, "top", "top", -1856271961));
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ver-value", "ver-value", -492891737), function() {
        var or__3628__auto__ = (new cljs.core.Keyword(null, "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return 0;
        }
      }());
      var move = cljs.core.async.tap.call(null, cljs.core.get_in.call(null, self__.data, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 460172477), new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223), new cljs.core.Keyword(null, "mult", "mult", 1466794774)], null)), cljs.core.async.chan.call(null));
      var up = cljs.core.async.tap.call(null, cljs.core.get_in.call(null, self__.data, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 460172477), new cljs.core.Keyword(null, "mouse-up", "mouse-up", 999952135), new cljs.core.Keyword(null, "mult", "mult", 1466794774)], null)), cljs.core.async.chan.call(null));
      var dragger_fn = (new cljs.core.Keyword(null, "dragger-fn", "dragger-fn", 456240575)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var dragger = dragger_fn.call(null, self__.owner, self__.data);
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragger", "dragger", 2062265815), dragger);
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, move, up, dragger_fn, dragger, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, move, up, dragger_fn, dragger, ___$1) {
              return function(state_21246) {
                var state_val_21247 = state_21246[1];
                if (state_val_21247 === 7) {
                  var inst_21215 = state_21246[7];
                  var inst_21217 = state_21246[8];
                  var inst_21215__$1 = state_21246[2];
                  var inst_21216 = cljs.core.nth.call(null, inst_21215__$1, 0, null);
                  var inst_21217__$1 = cljs.core.nth.call(null, inst_21215__$1, 1, null);
                  var inst_21218 = cljs.core._EQ_.call(null, inst_21217__$1, move);
                  var state_21246__$1 = function() {
                    var statearr_21248 = state_21246;
                    statearr_21248[9] = inst_21216;
                    statearr_21248[7] = inst_21215__$1;
                    statearr_21248[8] = inst_21217__$1;
                    return statearr_21248;
                  }();
                  if (inst_21218) {
                    var statearr_21249_21275 = state_21246__$1;
                    statearr_21249_21275[1] = 8;
                  } else {
                    var statearr_21250_21276 = state_21246__$1;
                    statearr_21250_21276[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21247 === 1) {
                    var state_21246__$1 = state_21246;
                    var statearr_21251_21277 = state_21246__$1;
                    statearr_21251_21277[2] = null;
                    statearr_21251_21277[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21247 === 4) {
                      var inst_21211 = cljs.core.PersistentVector.EMPTY_NODE;
                      var inst_21212 = [move, up];
                      var inst_21213 = new cljs.core.PersistentVector(null, 2, 5, inst_21211, inst_21212, null);
                      var state_21246__$1 = state_21246;
                      return cljs.core.async.ioc_alts_BANG_.call(null, state_21246__$1, 7, inst_21213);
                    } else {
                      if (state_val_21247 === 15) {
                        var state_21246__$1 = state_21246;
                        var statearr_21252_21278 = state_21246__$1;
                        statearr_21252_21278[2] = null;
                        statearr_21252_21278[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21247 === 13) {
                          var inst_21236 = state_21246[2];
                          var state_21246__$1 = state_21246;
                          var statearr_21253_21279 = state_21246__$1;
                          statearr_21253_21279[2] = inst_21236;
                          statearr_21253_21279[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21247 === 6) {
                            var inst_21242 = state_21246[2];
                            var state_21246__$1 = state_21246;
                            var statearr_21254_21280 = state_21246__$1;
                            statearr_21254_21280[2] = inst_21242;
                            statearr_21254_21280[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21247 === 3) {
                              var inst_21244 = state_21246[2];
                              var state_21246__$1 = state_21246;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21246__$1, inst_21244);
                            } else {
                              if (state_val_21247 === 12) {
                                var inst_21217 = state_21246[8];
                                var inst_21230 = cljs.core._EQ_.call(null, inst_21217, new cljs.core.Keyword(null, "default", "default", -1987822328));
                                var state_21246__$1 = state_21246;
                                if (inst_21230) {
                                  var statearr_21255_21281 = state_21246__$1;
                                  statearr_21255_21281[1] = 14;
                                } else {
                                  var statearr_21256_21282 = state_21246__$1;
                                  statearr_21256_21282[1] = 15;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21247 === 2) {
                                  var state_21246__$1 = state_21246;
                                  var statearr_21257_21283 = state_21246__$1;
                                  statearr_21257_21283[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21247 === 11) {
                                    var inst_21215 = state_21246[7];
                                    var inst_21227 = cljs.core.nth.call(null, inst_21215, 0, null);
                                    var inst_21228 = draggable.core.drag_end.call(null, dragger, inst_21227);
                                    var state_21246__$1 = state_21246;
                                    var statearr_21259_21284 = state_21246__$1;
                                    statearr_21259_21284[2] = inst_21228;
                                    statearr_21259_21284[1] = 13;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21247 === 9) {
                                      var inst_21217 = state_21246[8];
                                      var inst_21224 = cljs.core._EQ_.call(null, inst_21217, up);
                                      var state_21246__$1 = state_21246;
                                      if (inst_21224) {
                                        var statearr_21260_21285 = state_21246__$1;
                                        statearr_21260_21285[1] = 11;
                                      } else {
                                        var statearr_21261_21286 = state_21246__$1;
                                        statearr_21261_21286[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21247 === 5) {
                                        var state_21246__$1 = state_21246;
                                        var statearr_21262_21287 = state_21246__$1;
                                        statearr_21262_21287[2] = null;
                                        statearr_21262_21287[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21247 === 14) {
                                          var inst_21216 = state_21246[9];
                                          var state_21246__$1 = state_21246;
                                          var statearr_21263_21288 = state_21246__$1;
                                          statearr_21263_21288[2] = inst_21216;
                                          statearr_21263_21288[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21247 === 16) {
                                            var inst_21234 = state_21246[2];
                                            var state_21246__$1 = state_21246;
                                            var statearr_21264_21289 = state_21246__$1;
                                            statearr_21264_21289[2] = inst_21234;
                                            statearr_21264_21289[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21247 === 10) {
                                              var inst_21238 = state_21246[2];
                                              var state_21246__$1 = function() {
                                                var statearr_21265 = state_21246;
                                                statearr_21265[10] = inst_21238;
                                                return statearr_21265;
                                              }();
                                              var statearr_21266_21290 = state_21246__$1;
                                              statearr_21266_21290[2] = null;
                                              statearr_21266_21290[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21247 === 8) {
                                                var inst_21215 = state_21246[7];
                                                var inst_21221 = cljs.core.nth.call(null, inst_21215, 0, null);
                                                var inst_21222 = draggable.core.drag_move.call(null, dragger, inst_21221);
                                                var state_21246__$1 = state_21246;
                                                var statearr_21267_21291 = state_21246__$1;
                                                statearr_21267_21291[2] = inst_21222;
                                                statearr_21267_21291[1] = 10;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, move, up, dragger_fn, dragger, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, move, up, dragger_fn, dragger, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_21271 = [null, null, null, null, null, null, null, null, null, null, null];
                  statearr_21271[0] = state_machine__6494__auto__;
                  statearr_21271[1] = 1;
                  return statearr_21271;
                };
                var state_machine__6494__auto____1 = function(state_21246) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_21246);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e21272) {
                        if (e21272 instanceof Object) {
                          var ex__6497__auto__ = e21272;
                          var statearr_21273_21292 = state_21246;
                          statearr_21273_21292[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21246);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e21272;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__21293 = state_21246;
                      state_21246 = G__21293;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_21246) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_21246);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, move, up, dragger_fn, dragger, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_21274 = f__6509__auto__.call(null);
            statearr_21274[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_21274;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, move, up, dragger_fn, dragger, ___$1));
      return c__6508__auto__;
    };
    draggable.core.t21201.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21203) {
      var self__ = this;
      var _21203__$1 = this;
      return self__.meta21202;
    };
    draggable.core.t21201.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21203, meta21202__$1) {
      var self__ = this;
      var _21203__$1 = this;
      return new draggable.core.t21201(self__.opts, self__.owner, self__.data, self__.draggable, meta21202__$1);
    };
    draggable.core.t21201.cljs$lang$type = true;
    draggable.core.t21201.cljs$lang$ctorStr = "draggable.core/t21201";
    draggable.core.t21201.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "draggable.core/t21201");
    };
    draggable.core.__GT_t21201 = function __GT_t21201(opts__$1, owner__$1, data__$1, draggable__$2, meta21202) {
      return new draggable.core.t21201(opts__$1, owner__$1, data__$1, draggable__$2, meta21202);
    };
  }
  return new draggable.core.t21201(opts, owner, data, draggable__$1, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 82, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 235, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 206, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/draggable/core.cljs"], 
  null));
};
goog.provide("clui_om.misc.messages");
goog.require("cljs.core");
clui_om.misc.messages.sanity_msg = "You are not crazy. You are inside clui-om.misc.messages";
clui_om.misc.messages.insanity_msg = cljs.core.apply.call(null, cljs.core.str, cljs.core.reverse.call(null, clui_om.misc.messages.sanity_msg));
goog.provide("clui_om.page_gamma");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("cljs.core.async");
clui_om.page_gamma.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "width", "width", -384071477), 800, new cljs.core.Keyword(null, "height", "height", 1025178622), 600, new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1)), new cljs.core.Keyword(null, 
"sprites", "sprites", -1835833922), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "x", "x", 2099068185), 300, new cljs.core.Keyword(null, "y", "y", -1757859776), 200, new cljs.core.Keyword(null, "w", "w", 354169001), 60, new cljs.core.Keyword(null, "h", "h", 1109658740), 30, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "morph-sprite", "morph-sprite", 
987011540)], null), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "x", "x", 2099068185), 100, new cljs.core.Keyword(null, "y", "y", -1757859776), 100, new cljs.core.Keyword(null, "w", "w", 354169001), 120, new cljs.core.Keyword(null, "h", "h", 1109658740), 160, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "draggable-sprite", "draggable-sprite", -832290002), new cljs.core.Keyword(null, "title", "title", 636505583), "Click to drag me", 
new cljs.core.Keyword(null, "message", "message", -406056002), "Hello world!", new cljs.core.Keyword(null, "prior-drag-loc", "prior-drag-loc", -1780948410), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null)], null)], null)], null)], null));
clui_om.page_gamma.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.page_gamma.evt__GT_clj = function evt__GT_clj(e) {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "client-y", "client-y", 1123764704), new cljs.core.Keyword(null, "client-x", "client-x", 37622273), new cljs.core.Keyword(null, "raw", "raw", 1604651272), new cljs.core.Keyword(null, "page-x", "page-x", -1810692119), new cljs.core.Keyword(null, "evt-type", "evt-type", -1983250550), new cljs.core.Keyword(null, "page-y", "page-y", 609181360), new cljs.core.Keyword(null, "screen-x", "screen-x", -438778187), new cljs.core.Keyword(null, 
  "target", "target", 253001721), new cljs.core.Keyword(null, "screen-y", "screen-y", -773698245), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), new cljs.core.Keyword(null, "current-target", "current-target", 34322910)], [e.clientY, e.clientX, e, e.pageX, e.type, e.pageY, e.screenX, e.target, e.screenY, e.timestamp, e.currentTarget]);
};
clui_om.page_gamma.echo_evt = function() {
  var echo_evt = null;
  var echo_evt__1 = function(e) {
    return echo_evt.call(null, e, "...", false);
  };
  var echo_evt__2 = function(e, msg) {
    return echo_evt.call(null, e, msg, false);
  };
  var echo_evt__3 = function(e, msg, all) {
    var r = (new cljs.core.Keyword(null, "raw", "raw", 1604651272)).cljs$core$IFn$_invoke$arity$1(e);
    console.log([cljs.core.str(msg), cljs.core.str(": ")].join(""));
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("Raw React JS event: "), cljs.core.str(r)].join(""));
    } else {
    }
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("Wrapped Cljs event: "), cljs.core.str(e)].join(""));
    } else {
    }
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("Event Type (js) "), cljs.core.str(r.type)].join(""));
    } else {
    }
    console.log([cljs.core.str("Event Type (clj) "), cljs.core.str((new cljs.core.Keyword(null, "evt-type", "evt-type", -1983250550)).cljs$core$IFn$_invoke$arity$1(e))].join(""));
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("ClientXY (js) "), cljs.core.str(r.clientX), cljs.core.str(", "), cljs.core.str(r.clientY)].join(""));
    } else {
    }
    console.log([cljs.core.str("ClientXY (clj) "), cljs.core.str((new cljs.core.Keyword(null, "client-x", "client-x", 37622273)).cljs$core$IFn$_invoke$arity$1(e)), cljs.core.str(", "), cljs.core.str((new cljs.core.Keyword(null, "client-y", "client-y", 1123764704)).cljs$core$IFn$_invoke$arity$1(e))].join(""));
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("PageXY (js) "), cljs.core.str(r.pageX), cljs.core.str(", "), cljs.core.str(r.pageY)].join(""));
    } else {
    }
    console.log([cljs.core.str("PageXY (clj) "), cljs.core.str((new cljs.core.Keyword(null, "page-x", "page-x", -1810692119)).cljs$core$IFn$_invoke$arity$1(e)), cljs.core.str(", "), cljs.core.str((new cljs.core.Keyword(null, "page-y", "page-y", 609181360)).cljs$core$IFn$_invoke$arity$1(e))].join(""));
    if (cljs.core.truth_(all)) {
      console.log([cljs.core.str("ScreenXY (js) "), cljs.core.str(r.screenX), cljs.core.str(", "), cljs.core.str(r.screenY)].join(""));
    } else {
    }
    if (cljs.core.truth_(all)) {
      return console.log([cljs.core.str("ScreenXY (clj "), cljs.core.str((new cljs.core.Keyword(null, "screen-x", "screen-x", -438778187)).cljs$core$IFn$_invoke$arity$1(e)), cljs.core.str(", "), cljs.core.str((new cljs.core.Keyword(null, "screen-y", "screen-y", -773698245)).cljs$core$IFn$_invoke$arity$1(e))].join(""));
    } else {
      return null;
    }
  };
  echo_evt = function(e, msg, all) {
    switch(arguments.length) {
      case 1:
        return echo_evt__1.call(this, e);
      case 2:
        return echo_evt__2.call(this, e, msg);
      case 3:
        return echo_evt__3.call(this, e, msg, all);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  echo_evt.cljs$core$IFn$_invoke$arity$1 = echo_evt__1;
  echo_evt.cljs$core$IFn$_invoke$arity$2 = echo_evt__2;
  echo_evt.cljs$core$IFn$_invoke$arity$3 = echo_evt__3;
  return echo_evt;
}();
clui_om.page_gamma.sprite_dims = function sprite_dims(x, y, w, h) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", -384071477), w, new cljs.core.Keyword(null, "minWidth", "minWidth", -204293526), w, new cljs.core.Keyword(null, "height", "height", 1025178622), h, new cljs.core.Keyword(null, "minHeight", "minHeight", -1635998980), h, new cljs.core.Keyword(null, "left", "left", -399115937), x, new cljs.core.Keyword(null, "top", "top", -1856271961), y, new cljs.core.Keyword(null, "position", "position", -2011731912), 
  "absolute"], null);
};
clui_om.page_gamma.morph_dims = function morph_dims(x, y, w, h, morphed) {
  var grow = 2;
  var bigw = grow * w;
  var bigh = grow * h;
  var basemap = clui_om.page_gamma.sprite_dims.call(null, x, y, w, h);
  if (cljs.core.truth_(morphed)) {
    return cljs.core.merge.call(null, basemap, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "width", "width", -384071477), bigw, new cljs.core.Keyword(null, "minWidth", "minWidth", -204293526), bigw, new cljs.core.Keyword(null, "height", "height", 1025178622), bigh, new cljs.core.Keyword(null, "minHeight", "minHeight", -1635998980), bigh, new cljs.core.Keyword(null, "left", "left", -399115937), x - (bigh - h) / 2, new cljs.core.Keyword(null, "top", "top", -1856271961), y - 
    (bigw - w) / 2], null));
  } else {
    return basemap;
  }
};
clui_om.page_gamma.sprite = function() {
  var method_table__4525__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4526__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4527__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4528__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4529__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "clui-om.page-gamma", "sprite"), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4529__auto__, method_table__4525__auto__, prefer_table__4526__auto__, method_cache__4527__auto__, cached_hierarchy__4528__auto__);
}();
cljs.core._add_method.call(null, clui_om.page_gamma.sprite, new cljs.core.Keyword(null, "morph-sprite", "morph-sprite", 987011540), function(cursor, owner, opts) {
  if (typeof clui_om.page_gamma.t18966 !== "undefined") {
  } else {
    clui_om.page_gamma.t18966 = function(opts, owner, cursor, meta18967) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta18967 = meta18967;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_gamma.t18966.prototype.om$core$IRenderState$ = true;
    clui_om.page_gamma.t18966.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__18969) {
      var self__ = this;
      var map__18970 = p__18969;
      var map__18970__$1 = cljs.core.seq_QMARK_.call(null, map__18970) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18970) : map__18970;
      var pinned = cljs.core.get.call(null, map__18970__$1, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339));
      var hovering = cljs.core.get.call(null, map__18970__$1, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
      var dragging = cljs.core.get.call(null, map__18970__$1, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613));
      var ___$1 = this;
      var x = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var y = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var h = (new cljs.core.Keyword(null, "h", "h", 1109658740)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      return React.DOM.div({"onClick":function(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), cljs.core.not.call(null, pinned));
        };
      }(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging), "onMouseOut":function(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false);
        };
      }(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging), "onMouseOver":function(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), true);
        };
      }(x, y, w, h, ___$1, map__18970, map__18970__$1, pinned, hovering, dragging), "style":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "textAlign", "textAlign", -711351626), "center"], null), clui_om.page_gamma.morph_dims.call(null, x, y, w, h, function() {
        var or__3628__auto__ = hovering;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return pinned;
        }
      }()))), "className":[cljs.core.str("morphSprite"), cljs.core.str(cljs.core.truth_(hovering) ? " hovering" : "")].join("")}, React.DOM.span({"style":{"minWidth":"100%", "width":"100%"}, "className":"spriteLabel"}, "I morph."));
    };
    clui_om.page_gamma.t18966.prototype.om$core$IInitState$ = true;
    clui_om.page_gamma.t18966.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), false, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false], null);
    };
    clui_om.page_gamma.t18966.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18968) {
      var self__ = this;
      var _18968__$1 = this;
      return self__.meta18967;
    };
    clui_om.page_gamma.t18966.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18968, meta18967__$1) {
      var self__ = this;
      var _18968__$1 = this;
      return new clui_om.page_gamma.t18966(self__.opts, self__.owner, self__.cursor, meta18967__$1);
    };
    clui_om.page_gamma.t18966.cljs$lang$type = true;
    clui_om.page_gamma.t18966.cljs$lang$ctorStr = "clui-om.page-gamma/t18966";
    clui_om.page_gamma.t18966.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-gamma/t18966");
    };
    clui_om.page_gamma.__GT_t18966 = function __GT_t18966(opts__$1, owner__$1, cursor__$1, meta18967) {
      return new clui_om.page_gamma.t18966(opts__$1, owner__$1, cursor__$1, meta18967);
    };
  }
  return new clui_om.page_gamma.t18966(opts, owner, cursor, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 43, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 151, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 133, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_gamma.cljs"], 
  null));
});
cljs.core._add_method.call(null, clui_om.page_gamma.sprite, new cljs.core.Keyword(null, "draggable-sprite", "draggable-sprite", -832290002), function(cursor, owner, opts) {
  if (typeof clui_om.page_gamma.t18974 !== "undefined") {
  } else {
    clui_om.page_gamma.t18974 = function(opts, owner, cursor, meta18975) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta18975 = meta18975;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_gamma.t18974.prototype.om$core$IRenderState$ = true;
    clui_om.page_gamma.t18974.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__18977) {
      var self__ = this;
      var map__18978 = p__18977;
      var map__18978__$1 = cljs.core.seq_QMARK_.call(null, map__18978) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18978) : map__18978;
      var mouse_move = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223));
      var drag_off = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "drag-off", "drag-off", 1138965572));
      var drag_on = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "drag-on", "drag-on", 179819806));
      var dragging = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613));
      var ___$1 = this;
      return React.DOM.div({"onMouseMove":function(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging) {
        return function(p1__18973_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, mouse_move, clui_om.page_gamma.evt__GT_clj.call(null, p1__18973_SHARP_));
        };
      }(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging), "onMouseUp":function(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging) {
        return function(p1__18972_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, drag_off, clui_om.page_gamma.evt__GT_clj.call(null, p1__18972_SHARP_));
        };
      }(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging), "onMouseDown":function(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging) {
        return function(p1__18971_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, drag_on, clui_om.page_gamma.evt__GT_clj.call(null, p1__18971_SHARP_));
        };
      }(___$1, map__18978, map__18978__$1, mouse_move, drag_off, drag_on, dragging), "style":cljs.core.clj__GT_js.call(null, clui_om.page_gamma.sprite_dims.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(self__.cursor), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(self__.cursor), (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(self__.cursor), (new cljs.core.Keyword(null, "h", "h", 1109658740)).cljs$core$IFn$_invoke$arity$1(self__.cursor))), 
      "className":"dragSprite"}, React.DOM.div({"className":"dragSpriteTitle"}, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(self__.cursor)), React.DOM.div({"className":"dragSpriteMessage"}, (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(self__.cursor)));
    };
    clui_om.page_gamma.t18974.prototype.om$core$IWillMount$ = true;
    clui_om.page_gamma.t18974.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var dragging = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613));
      var drag_on = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "drag-on", "drag-on", 179819806));
      var drag_off = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "drag-off", "drag-off", 1138965572));
      var mouse_move = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223));
      var c__6508__auto___19128 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function(state_19002) {
                var state_val_19003 = state_19002[1];
                if (state_val_19003 === 7) {
                  var inst_18988 = state_19002[2];
                  var inst_18989 = cljs.core.get.call(null, inst_18988, new cljs.core.Keyword(null, "evt-type", "evt-type", -1983250550));
                  var inst_18990 = cljs.core.get.call(null, inst_18988, new cljs.core.Keyword(null, "page-y", "page-y", 609181360));
                  var inst_18991 = cljs.core.get.call(null, inst_18988, new cljs.core.Keyword(null, "page-x", "page-x", -1810692119));
                  var inst_18992 = console.log("Dragging is now on (", inst_18989, ")");
                  var inst_18993 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), true);
                  var inst_18994 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_18995 = [inst_18991, inst_18990];
                  var inst_18996 = new cljs.core.PersistentVector(null, 2, 5, inst_18994, inst_18995, null);
                  var inst_18997 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "prior-drag-loc", "prior-drag-loc", -1780948410), inst_18996);
                  var state_19002__$1 = function() {
                    var statearr_19004 = state_19002;
                    statearr_19004[7] = inst_18997;
                    statearr_19004[8] = inst_18993;
                    statearr_19004[9] = inst_18992;
                    return statearr_19004;
                  }();
                  var statearr_19005_19129 = state_19002__$1;
                  statearr_19005_19129[2] = null;
                  statearr_19005_19129[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19003 === 6) {
                    var inst_18982 = state_19002[10];
                    var state_19002__$1 = state_19002;
                    var statearr_19006_19130 = state_19002__$1;
                    statearr_19006_19130[2] = inst_18982;
                    statearr_19006_19130[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19003 === 5) {
                      var inst_18982 = state_19002[10];
                      var inst_18985 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18982);
                      var state_19002__$1 = state_19002;
                      var statearr_19007_19131 = state_19002__$1;
                      statearr_19007_19131[2] = inst_18985;
                      statearr_19007_19131[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19003 === 4) {
                        var inst_18982 = state_19002[10];
                        var inst_18982__$1 = state_19002[2];
                        var inst_18983 = cljs.core.seq_QMARK_.call(null, inst_18982__$1);
                        var state_19002__$1 = function() {
                          var statearr_19008 = state_19002;
                          statearr_19008[10] = inst_18982__$1;
                          return statearr_19008;
                        }();
                        if (inst_18983) {
                          var statearr_19009_19132 = state_19002__$1;
                          statearr_19009_19132[1] = 5;
                        } else {
                          var statearr_19010_19133 = state_19002__$1;
                          statearr_19010_19133[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19003 === 3) {
                          var inst_19000 = state_19002[2];
                          var state_19002__$1 = state_19002;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19002__$1, inst_19000);
                        } else {
                          if (state_val_19003 === 2) {
                            var state_19002__$1 = state_19002;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19002__$1, 4, drag_on);
                          } else {
                            if (state_val_19003 === 1) {
                              var state_19002__$1 = state_19002;
                              var statearr_19011_19134 = state_19002__$1;
                              statearr_19011_19134[2] = null;
                              statearr_19011_19134[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1);
            return function(switch__6493__auto__, c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_19015 = [null, null, null, null, null, null, null, null, null, null, null];
                  statearr_19015[0] = state_machine__6494__auto__;
                  statearr_19015[1] = 1;
                  return statearr_19015;
                };
                var state_machine__6494__auto____1 = function(state_19002) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_19002);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e19016) {
                        if (e19016 instanceof Object) {
                          var ex__6497__auto__ = e19016;
                          var statearr_19017_19135 = state_19002;
                          statearr_19017_19135[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19002);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e19016;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__19136 = state_19002;
                      state_19002 = G__19136;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_19002) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_19002);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_19018 = f__6509__auto__.call(null);
            statearr_19018[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___19128;
            return statearr_19018;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___19128, dragging, drag_on, drag_off, mouse_move, ___$1));
      var c__6508__auto___19137 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function(state_19042) {
                var state_val_19043 = state_19042[1];
                if (state_val_19043 === 7) {
                  var inst_19029 = state_19042[2];
                  var inst_19030 = cljs.core.get.call(null, inst_19029, new cljs.core.Keyword(null, "evt-type", "evt-type", -1983250550));
                  var inst_19031 = cljs.core.deref.call(null, self__.cursor);
                  var inst_19032 = (new cljs.core.Keyword(null, "prior-drag-loc", "prior-drag-loc", -1780948410)).cljs$core$IFn$_invoke$arity$1(inst_19031);
                  var inst_19033 = cljs.core.nth.call(null, inst_19032, 0, null);
                  var inst_19034 = cljs.core.nth.call(null, inst_19032, 1, null);
                  var inst_19035 = console.log("Dragging is now off (", inst_19030, ")");
                  var inst_19036 = console.log("prior-drag-loc: [", inst_19033, ", ", inst_19034, "]");
                  var inst_19037 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), false);
                  var state_19042__$1 = function() {
                    var statearr_19044 = state_19042;
                    statearr_19044[7] = inst_19036;
                    statearr_19044[8] = inst_19037;
                    statearr_19044[9] = inst_19035;
                    return statearr_19044;
                  }();
                  var statearr_19045_19138 = state_19042__$1;
                  statearr_19045_19138[2] = null;
                  statearr_19045_19138[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19043 === 6) {
                    var inst_19023 = state_19042[10];
                    var state_19042__$1 = state_19042;
                    var statearr_19046_19139 = state_19042__$1;
                    statearr_19046_19139[2] = inst_19023;
                    statearr_19046_19139[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19043 === 5) {
                      var inst_19023 = state_19042[10];
                      var inst_19026 = cljs.core.apply.call(null, cljs.core.hash_map, inst_19023);
                      var state_19042__$1 = state_19042;
                      var statearr_19047_19140 = state_19042__$1;
                      statearr_19047_19140[2] = inst_19026;
                      statearr_19047_19140[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19043 === 4) {
                        var inst_19023 = state_19042[10];
                        var inst_19023__$1 = state_19042[2];
                        var inst_19024 = cljs.core.seq_QMARK_.call(null, inst_19023__$1);
                        var state_19042__$1 = function() {
                          var statearr_19048 = state_19042;
                          statearr_19048[10] = inst_19023__$1;
                          return statearr_19048;
                        }();
                        if (inst_19024) {
                          var statearr_19049_19141 = state_19042__$1;
                          statearr_19049_19141[1] = 5;
                        } else {
                          var statearr_19050_19142 = state_19042__$1;
                          statearr_19050_19142[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19043 === 3) {
                          var inst_19040 = state_19042[2];
                          var state_19042__$1 = state_19042;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19042__$1, inst_19040);
                        } else {
                          if (state_val_19043 === 2) {
                            var state_19042__$1 = state_19042;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19042__$1, 4, drag_off);
                          } else {
                            if (state_val_19043 === 1) {
                              var state_19042__$1 = state_19042;
                              var statearr_19051_19143 = state_19042__$1;
                              statearr_19051_19143[2] = null;
                              statearr_19051_19143[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1);
            return function(switch__6493__auto__, c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_19055 = [null, null, null, null, null, null, null, null, null, null, null];
                  statearr_19055[0] = state_machine__6494__auto__;
                  statearr_19055[1] = 1;
                  return statearr_19055;
                };
                var state_machine__6494__auto____1 = function(state_19042) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_19042);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e19056) {
                        if (e19056 instanceof Object) {
                          var ex__6497__auto__ = e19056;
                          var statearr_19057_19144 = state_19042;
                          statearr_19057_19144[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19042);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e19056;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__19145 = state_19042;
                      state_19042 = G__19145;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_19042) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_19042);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_19058 = f__6509__auto__.call(null);
            statearr_19058[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___19137;
            return statearr_19058;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___19137, dragging, drag_on, drag_off, mouse_move, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function(state_19105) {
                var state_val_19106 = state_19105[1];
                if (state_val_19106 === 7) {
                  var inst_19068 = state_19105[2];
                  var inst_19069 = cljs.core.get.call(null, inst_19068, new cljs.core.Keyword(null, "evt-type", "evt-type", -1983250550));
                  var inst_19070 = cljs.core.get.call(null, inst_19068, new cljs.core.Keyword(null, "page-y", "page-y", 609181360));
                  var inst_19071 = cljs.core.get.call(null, inst_19068, new cljs.core.Keyword(null, "page-x", "page-x", -1810692119));
                  var inst_19072 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragging", "dragging", 1185097613));
                  var state_19105__$1 = function() {
                    var statearr_19107 = state_19105;
                    statearr_19107[7] = inst_19071;
                    statearr_19107[8] = inst_19069;
                    statearr_19107[9] = inst_19070;
                    return statearr_19107;
                  }();
                  if (cljs.core.truth_(inst_19072)) {
                    var statearr_19108_19146 = state_19105__$1;
                    statearr_19108_19146[1] = 8;
                  } else {
                    var statearr_19109_19147 = state_19105__$1;
                    statearr_19109_19147[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19106 === 1) {
                    var state_19105__$1 = state_19105;
                    var statearr_19110_19148 = state_19105__$1;
                    statearr_19110_19148[2] = null;
                    statearr_19110_19148[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19106 === 4) {
                      var inst_19062 = state_19105[10];
                      var inst_19062__$1 = state_19105[2];
                      var inst_19063 = cljs.core.seq_QMARK_.call(null, inst_19062__$1);
                      var state_19105__$1 = function() {
                        var statearr_19111 = state_19105;
                        statearr_19111[10] = inst_19062__$1;
                        return statearr_19111;
                      }();
                      if (inst_19063) {
                        var statearr_19112_19149 = state_19105__$1;
                        statearr_19112_19149[1] = 5;
                      } else {
                        var statearr_19113_19150 = state_19105__$1;
                        statearr_19113_19150[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19106 === 6) {
                        var inst_19062 = state_19105[10];
                        var state_19105__$1 = state_19105;
                        var statearr_19114_19151 = state_19105__$1;
                        statearr_19114_19151[2] = inst_19062;
                        statearr_19114_19151[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19106 === 3) {
                          var inst_19103 = state_19105[2];
                          var state_19105__$1 = state_19105;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19105__$1, inst_19103);
                        } else {
                          if (state_val_19106 === 2) {
                            var state_19105__$1 = state_19105;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19105__$1, 4, mouse_move);
                          } else {
                            if (state_val_19106 === 9) {
                              var state_19105__$1 = state_19105;
                              var statearr_19115_19152 = state_19105__$1;
                              statearr_19115_19152[2] = null;
                              statearr_19115_19152[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19106 === 5) {
                                var inst_19062 = state_19105[10];
                                var inst_19065 = cljs.core.apply.call(null, cljs.core.hash_map, inst_19062);
                                var state_19105__$1 = state_19105;
                                var statearr_19116_19153 = state_19105__$1;
                                statearr_19116_19153[2] = inst_19065;
                                statearr_19116_19153[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19106 === 10) {
                                  var inst_19100 = state_19105[2];
                                  var state_19105__$1 = function() {
                                    var statearr_19117 = state_19105;
                                    statearr_19117[11] = inst_19100;
                                    return statearr_19117;
                                  }();
                                  var statearr_19118_19154 = state_19105__$1;
                                  statearr_19118_19154[2] = null;
                                  statearr_19118_19154[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19106 === 8) {
                                    var inst_19071 = state_19105[7];
                                    var inst_19069 = state_19105[8];
                                    var inst_19070 = state_19105[9];
                                    var inst_19075 = cljs.core.deref.call(null, self__.cursor);
                                    var inst_19076 = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(inst_19075);
                                    var inst_19077 = cljs.core.deref.call(null, self__.cursor);
                                    var inst_19078 = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(inst_19077);
                                    var inst_19079 = cljs.core.deref.call(null, self__.cursor);
                                    var inst_19080 = (new cljs.core.Keyword(null, "prior-drag-loc", "prior-drag-loc", -1780948410)).cljs$core$IFn$_invoke$arity$1(inst_19079);
                                    var inst_19081 = cljs.core.nth.call(null, inst_19080, 0, null);
                                    var inst_19082 = cljs.core.nth.call(null, inst_19080, 1, null);
                                    var inst_19083 = inst_19071 - inst_19081;
                                    var inst_19084 = inst_19070 - inst_19082;
                                    var inst_19085 = inst_19076 + inst_19083;
                                    var inst_19086 = inst_19078 + inst_19084;
                                    var inst_19087 = console.log("Mouse event (", inst_19069, ")");
                                    var inst_19088 = console.log("Dragging from ", inst_19076, ", ", inst_19078, " to ", inst_19085, ", ", inst_19086);
                                    var inst_19089 = cljs.core.deref.call(null, self__.cursor);
                                    var inst_19090 = [new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "prior-drag-loc", "prior-drag-loc", -1780948410)];
                                    var inst_19091 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_19092 = [inst_19071, inst_19070];
                                    var inst_19093 = new cljs.core.PersistentVector(null, 2, 5, inst_19091, inst_19092, null);
                                    var inst_19094 = [inst_19085, inst_19086, inst_19093];
                                    var inst_19095 = cljs.core.PersistentHashMap.fromArrays(inst_19090, inst_19094);
                                    var inst_19096 = cljs.core.merge.call(null, inst_19089, inst_19095);
                                    var inst_19097 = om.core.update_BANG_.call(null, self__.cursor, inst_19096);
                                    var state_19105__$1 = function() {
                                      var statearr_19119 = state_19105;
                                      statearr_19119[12] = inst_19087;
                                      statearr_19119[13] = inst_19088;
                                      return statearr_19119;
                                    }();
                                    var statearr_19120_19155 = state_19105__$1;
                                    statearr_19120_19155[2] = inst_19097;
                                    statearr_19120_19155[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_19124 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_19124[0] = state_machine__6494__auto__;
                  statearr_19124[1] = 1;
                  return statearr_19124;
                };
                var state_machine__6494__auto____1 = function(state_19105) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_19105);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e19125) {
                        if (e19125 instanceof Object) {
                          var ex__6497__auto__ = e19125;
                          var statearr_19126_19156 = state_19105;
                          statearr_19126_19156[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19105);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e19125;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__19157 = state_19105;
                      state_19105 = G__19157;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_19105) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_19105);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_19127 = f__6509__auto__.call(null);
            statearr_19127[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_19127;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, dragging, drag_on, drag_off, mouse_move, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_gamma.t18974.prototype.om$core$IInitState$ = true;
    clui_om.page_gamma.t18974.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dragging", "dragging", 1185097613), false, new cljs.core.Keyword(null, "drag-on", "drag-on", 179819806), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "drag-off", "drag-off", 1138965572), cljs.core.async.chan.call(null)], null);
    };
    clui_om.page_gamma.t18974.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18976) {
      var self__ = this;
      var _18976__$1 = this;
      return self__.meta18975;
    };
    clui_om.page_gamma.t18974.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18976, meta18975__$1) {
      var self__ = this;
      var _18976__$1 = this;
      return new clui_om.page_gamma.t18974(self__.opts, self__.owner, self__.cursor, meta18975__$1);
    };
    clui_om.page_gamma.t18974.cljs$lang$type = true;
    clui_om.page_gamma.t18974.cljs$lang$ctorStr = "clui-om.page-gamma/t18974";
    clui_om.page_gamma.t18974.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-gamma/t18974");
    };
    clui_om.page_gamma.__GT_t18974 = function __GT_t18974(opts__$1, owner__$1, cursor__$1, meta18975) {
      return new clui_om.page_gamma.t18974(opts__$1, owner__$1, cursor__$1, meta18975);
    };
  }
  return new clui_om.page_gamma.t18974(opts, owner, cursor, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 83, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 214, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 155, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_gamma.cljs"], 
  null));
});
clui_om.page_gamma.canvas = function canvas(cursor, owner, opts) {
  if (typeof clui_om.page_gamma.t19163 !== "undefined") {
  } else {
    clui_om.page_gamma.t19163 = function(opts, owner, cursor, canvas, meta19164) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.canvas = canvas;
      this.meta19164 = meta19164;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_gamma.t19163.prototype.om$core$IRenderState$ = true;
    clui_om.page_gamma.t19163.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__19166) {
      var self__ = this;
      var map__19167 = p__19166;
      var map__19167__$1 = cljs.core.seq_QMARK_.call(null, map__19167) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19167) : map__19167;
      var position = cljs.core.get.call(null, map__19167__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
      var img = cljs.core.get.call(null, map__19167__$1, new cljs.core.Keyword(null, "img", "img", 1442687358));
      var ___$1 = this;
      var width = (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var height = (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      var sprites = (new cljs.core.Keyword(null, "sprites", "sprites", -1835833922)).cljs$core$IFn$_invoke$arity$1(self__.cursor);
      return cljs.core.apply.call(null, om.dom.div, {"style":{"position":position, "minHeight":height, "height":height, "minWidth":width, "width":width}, "className":"canvasDiv"}, om.core.build_all.call(null, clui_om.page_gamma.sprite, sprites, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223), (new cljs.core.Keyword(null, "mouse-move", 
      "mouse-move", -1993061223)).cljs$core$IFn$_invoke$arity$1(self__.cursor)], null)], null)));
    };
    clui_om.page_gamma.t19163.prototype.om$core$IInitState$ = true;
    clui_om.page_gamma.t19163.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "img", "img", 1442687358), null, new cljs.core.Keyword(null, "position", "position", -2011731912), "relative"], null);
    };
    clui_om.page_gamma.t19163.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19165) {
      var self__ = this;
      var _19165__$1 = this;
      return self__.meta19164;
    };
    clui_om.page_gamma.t19163.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19165, meta19164__$1) {
      var self__ = this;
      var _19165__$1 = this;
      return new clui_om.page_gamma.t19163(self__.opts, self__.owner, self__.cursor, self__.canvas, meta19164__$1);
    };
    clui_om.page_gamma.t19163.cljs$lang$type = true;
    clui_om.page_gamma.t19163.cljs$lang$ctorStr = "clui-om.page-gamma/t19163";
    clui_om.page_gamma.t19163.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-gamma/t19163");
    };
    clui_om.page_gamma.__GT_t19163 = function __GT_t19163(opts__$1, owner__$1, cursor__$1, canvas__$1, meta19164) {
      return new clui_om.page_gamma.t19163(opts__$1, owner__$1, cursor__$1, canvas__$1, meta19164);
    };
  }
  return new clui_om.page_gamma.t19163(opts, owner, cursor, canvas, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 96, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 238, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 222, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_gamma.cljs"], 
  null));
};
clui_om.page_gamma.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_gamma.t19171 !== "undefined") {
  } else {
    clui_om.page_gamma.t19171 = function(opts, owner, app, main_widget, meta19172) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta19172 = meta19172;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_gamma.t19171.prototype.om$core$IRender$ = true;
    clui_om.page_gamma.t19171.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return om.core.build.call(null, clui_om.page_gamma.canvas, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(self__.app));
    };
    clui_om.page_gamma.t19171.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19173) {
      var self__ = this;
      var _19173__$1 = this;
      return self__.meta19172;
    };
    clui_om.page_gamma.t19171.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19173, meta19172__$1) {
      var self__ = this;
      var _19173__$1 = this;
      return new clui_om.page_gamma.t19171(self__.opts, self__.owner, self__.app, self__.main_widget, meta19172__$1);
    };
    clui_om.page_gamma.t19171.cljs$lang$type = true;
    clui_om.page_gamma.t19171.cljs$lang$ctorStr = "clui-om.page-gamma/t19171";
    clui_om.page_gamma.t19171.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-gamma/t19171");
    };
    clui_om.page_gamma.__GT_t19171 = function __GT_t19171(opts__$1, owner__$1, app__$1, main_widget__$1, meta19172) {
      return new clui_om.page_gamma.t19171(opts__$1, owner__$1, app__$1, main_widget__$1, meta19172);
    };
  }
  return new clui_om.page_gamma.t19171(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 39, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 245, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 242, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_gamma.cljs"], 
  null));
};
clui_om.page_gamma.main = function main() {
  var msg = "main():: initializing page-gamma.cljs";
  var page_chan = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
  console.log(msg);
  om.core.root.call(null, clui_om.page_gamma.main_widget, clui_om.page_gamma.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_gamma.ALPHA_ROOT], null));
  window.addEventListener("click", function(msg, page_chan) {
    return function(e) {
      var c = clui_om.page_gamma.evt__GT_clj.call(null, e);
      return cljs.core.async.put_BANG_.call(null, page_chan, c);
    };
  }(msg, page_chan));
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, msg, page_chan) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__, msg, page_chan) {
          return function(state_19202) {
            var state_val_19203 = state_19202[1];
            if (state_val_19203 === 4) {
              var inst_19196 = state_19202[2];
              var inst_19197 = clui_om.page_gamma.echo_evt.call(null, inst_19196, "Page Event (Post-Channel)");
              var state_19202__$1 = function() {
                var statearr_19204 = state_19202;
                statearr_19204[7] = inst_19197;
                return statearr_19204;
              }();
              var statearr_19205_19214 = state_19202__$1;
              statearr_19205_19214[2] = null;
              statearr_19205_19214[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19203 === 3) {
                var inst_19200 = state_19202[2];
                var state_19202__$1 = state_19202;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19202__$1, inst_19200);
              } else {
                if (state_val_19203 === 2) {
                  var state_19202__$1 = state_19202;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19202__$1, 4, page_chan);
                } else {
                  if (state_val_19203 === 1) {
                    var state_19202__$1 = state_19202;
                    var statearr_19206_19215 = state_19202__$1;
                    statearr_19206_19215[2] = null;
                    statearr_19206_19215[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6508__auto__, msg, page_chan);
        return function(switch__6493__auto__, c__6508__auto__, msg, page_chan) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_19210 = [null, null, null, null, null, null, null, null];
              statearr_19210[0] = state_machine__6494__auto__;
              statearr_19210[1] = 1;
              return statearr_19210;
            };
            var state_machine__6494__auto____1 = function(state_19202) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_19202);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e19211) {
                    if (e19211 instanceof Object) {
                      var ex__6497__auto__ = e19211;
                      var statearr_19212_19216 = state_19202;
                      statearr_19212_19216[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19202);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19211;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19217 = state_19202;
                  state_19202 = G__19217;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_19202) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_19202);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__, msg, page_chan);
      }();
      var state__6510__auto__ = function() {
        var statearr_19213 = f__6509__auto__.call(null);
        statearr_19213[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_19213;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__, msg, page_chan));
  return c__6508__auto__;
};
goog.exportSymbol("clui_om.page_gamma.main", clui_om.page_gamma.main);
goog.provide("clui_om.svg.brittle_icons");
goog.require("cljs.core");
goog.require("clui_om.svg.icons");
goog.require("clui_om.svg.utils");
goog.require("om.dom");
goog.require("om.core");
goog.require("cljs.core.async");
clui_om.svg.brittle_icons.brittle_gear_icon = function brittle_gear_icon(app, owner) {
  if (typeof clui_om.svg.brittle_icons.t20666 !== "undefined") {
  } else {
    clui_om.svg.brittle_icons.t20666 = function(owner, app, brittle_gear_icon, meta20667) {
      this.owner = owner;
      this.app = app;
      this.brittle_gear_icon = brittle_gear_icon;
      this.meta20667 = meta20667;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IRenderState$ = true;
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__20669) {
      var self__ = this;
      var map__20670 = p__20669;
      var map__20670__$1 = cljs.core.seq_QMARK_.call(null, map__20670) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20670) : map__20670;
      var state = map__20670__$1;
      var svg_data = cljs.core.get.call(null, map__20670__$1, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348));
      var ___$1 = this;
      var w = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "width", "width", -384071477));
      var h = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "height", "height", 1025178622));
      var preserve = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "preserve-aspect-ratio", "preserve-aspect-ratio", -1746347963));
      var e = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "elements", "elements", 657646735));
      var g = cljs.core.first.call(null, e);
      var subs = cljs.core.filter.call(null, cljs.core.map_QMARK_, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(g));
      var c1 = cljs.core.first.call(null, subs);
      var c2 = cljs.core.second.call(null, subs);
      var p = cljs.core.last.call(null, subs);
      return React.DOM.div({"className":"iconOuter"}, cljs.core.truth_(svg_data) ? React.DOM.svg({"xmlns":"http://www.w3.org/2000/svg", "viewBox":[cljs.core.str("0 0 "), cljs.core.str(w), cljs.core.str(" "), cljs.core.str(h)].join(""), "className":"iconGears"}, React.DOM.rect(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", -384071477), w, new cljs.core.Keyword(null, "height", "height", 1025178622), h], null))), React.DOM.circle(cljs.core.clj__GT_js.call(null, 
      new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), cljs.core.get_in.call(null, c1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "cx", "cx", 1272694324)], null)), new cljs.core.Keyword(null, "cy", "cy", 755331060), cljs.core.get_in.call(null, c1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "cy", "cy", 755331060)], null)), new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.get_in.call(null, c1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "r", "r", -471384190)], null))], null))), React.DOM.circle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 
      3, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), cljs.core.get_in.call(null, c2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "cx", "cx", 1272694324)], null)), new cljs.core.Keyword(null, "cy", "cy", 755331060), cljs.core.get_in.call(null, c2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", 
      "attrs", -2090668713), new cljs.core.Keyword(null, "cy", "cy", 755331060)], null)), new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.get_in.call(null, c2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "r", "r", -471384190)], null))], null))), React.DOM.path(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "d", "d", 1972142424), cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "d", "d", 1972142424)], null))], null)))) : React.DOM.p(null, "No SVG data loaded yet"));
    };
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IWillMount$ = true;
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var load_chan = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, load_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, load_chan, ___$1) {
              return function(state_20675) {
                var state_val_20676 = state_20675[1];
                if (state_val_20676 === 2) {
                  var inst_20672 = state_20675[2];
                  var inst_20673 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), inst_20672);
                  var state_20675__$1 = state_20675;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20675__$1, inst_20673);
                } else {
                  if (state_val_20676 === 1) {
                    var state_20675__$1 = state_20675;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20675__$1, 2, load_chan);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6508__auto__, load_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, load_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_20680 = [null, null, null, null, null, null, null];
                  statearr_20680[0] = state_machine__6494__auto__;
                  statearr_20680[1] = 1;
                  return statearr_20680;
                };
                var state_machine__6494__auto____1 = function(state_20675) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_20675);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e20681) {
                        if (e20681 instanceof Object) {
                          var ex__6497__auto__ = e20681;
                          var statearr_20682_20684 = state_20675;
                          statearr_20682_20684[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20675);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e20681;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__20685 = state_20675;
                      state_20675 = G__20685;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_20675) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_20675);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, load_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_20683 = f__6509__auto__.call(null);
            statearr_20683[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_20683;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, load_chan, ___$1));
      return c__6508__auto__;
    };
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IInitState$ = true;
    clui_om.svg.brittle_icons.t20666.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), null, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614), clui_om.svg.utils.get_svg.call(null, "images/gears3.svg")], null);
    };
    clui_om.svg.brittle_icons.t20666.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20668) {
      var self__ = this;
      var _20668__$1 = this;
      return self__.meta20667;
    };
    clui_om.svg.brittle_icons.t20666.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20668, meta20667__$1) {
      var self__ = this;
      var _20668__$1 = this;
      return new clui_om.svg.brittle_icons.t20666(self__.owner, self__.app, self__.brittle_gear_icon, meta20667__$1);
    };
    clui_om.svg.brittle_icons.t20666.cljs$lang$type = true;
    clui_om.svg.brittle_icons.t20666.cljs$lang$ctorStr = "clui-om.svg.brittle-icons/t20666";
    clui_om.svg.brittle_icons.t20666.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.svg.brittle-icons/t20666");
    };
    clui_om.svg.brittle_icons.__GT_t20666 = function __GT_t20666(owner__$1, app__$1, brittle_gear_icon__$1, meta20667) {
      return new clui_om.svg.brittle_icons.t20666(owner__$1, app__$1, brittle_gear_icon__$1, meta20667);
    };
  }
  return new clui_om.svg.brittle_icons.t20666(owner, app, brittle_gear_icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 61, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 72, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 33, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/svg/brittle_icons.cljs"], 
  null));
};
clui_om.svg.brittle_icons.brittle_disc_icon = function brittle_disc_icon(app, owner) {
  if (typeof clui_om.svg.brittle_icons.t20706 !== "undefined") {
  } else {
    clui_om.svg.brittle_icons.t20706 = function(owner, app, brittle_disc_icon, meta20707) {
      this.owner = owner;
      this.app = app;
      this.brittle_disc_icon = brittle_disc_icon;
      this.meta20707 = meta20707;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IRenderState$ = true;
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__20709) {
      var self__ = this;
      var map__20710 = p__20709;
      var map__20710__$1 = cljs.core.seq_QMARK_.call(null, map__20710) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20710) : map__20710;
      var state = map__20710__$1;
      var svg_data = cljs.core.get.call(null, map__20710__$1, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348));
      var ___$1 = this;
      var w = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "width", "width", -384071477));
      var ___$2 = console.log([cljs.core.str("Using w: "), cljs.core.str(w)].join(""));
      var h = cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "height", "height", 1025178622));
      var ___$3 = console.log([cljs.core.str("Using h: "), cljs.core.str(h)].join(""));
      var g = cljs.core.first.call(null, cljs.core.get.call(null, svg_data, new cljs.core.Keyword(null, "elements", "elements", 657646735)));
      var subs = cljs.core.filter.call(null, cljs.core.map_QMARK_, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(g));
      var c = cljs.core.first.call(null, cljs.core.filter.call(null, function(w, ___$2, h, ___$3, g, subs, ___$1, map__20710, map__20710__$1, state, svg_data) {
        return function(p1__20686_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "circle", "circle", 1903212362), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20686_SHARP_));
        };
      }(w, ___$2, h, ___$3, g, subs, ___$1, map__20710, map__20710__$1, state, svg_data), subs));
      var p = cljs.core.first.call(null, cljs.core.filter.call(null, function(w, ___$2, h, ___$3, g, subs, c, ___$1, map__20710, map__20710__$1, state, svg_data) {
        return function(p1__20687_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "path", "path", -188191168), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20687_SHARP_));
        };
      }(w, ___$2, h, ___$3, g, subs, c, ___$1, map__20710, map__20710__$1, state, svg_data), subs));
      var pad = 10;
      var gaph = 6;
      var gapv = 5;
      var padw = parseFloat(w) + pad;
      var ___$4 = console.log([cljs.core.str("Using padw "), cljs.core.str(padw)].join(""));
      var padh = parseFloat(h) + pad;
      var ___$5 = console.log([cljs.core.str("Using padh "), cljs.core.str(padh)].join(""));
      var transtring = [cljs.core.str("translate("), cljs.core.str(gaph), cljs.core.str(" "), cljs.core.str(gapv), cljs.core.str(")")].join("");
      return React.DOM.div({"className":"iconOuter"}, cljs.core.truth_(svg_data) ? React.DOM.svg({"xmlns":"http://www.w3.org/2000/svg", "viewBox":[cljs.core.str("0 0 "), cljs.core.str(padw), cljs.core.str(" "), cljs.core.str(padh)].join(""), "className":"iconDisc"}, React.DOM.circle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), padw / 2, new cljs.core.Keyword(null, "cy", "cy", 755331060), padh / 2, new cljs.core.Keyword(null, 
      "r", "r", -471384190), function() {
        var x__3952__auto__ = padw;
        var y__3953__auto__ = padh;
        return x__3952__auto__ < y__3953__auto__ ? x__3952__auto__ : y__3953__auto__;
      }() / 2, new cljs.core.Keyword(null, "className", "className", -1983287057), "discBg"], null))), React.DOM.g(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "transform", "transform", 1381301764), transtring], null)), React.DOM.path(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "d", "d", 1972142424), cljs.core.get_in.call(null, p, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "d", "d", 1972142424)], null))], null))), React.DOM.circle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), cljs.core.get_in.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "cx", "cx", 1272694324)], 
      null)), new cljs.core.Keyword(null, "cy", "cy", 755331060), cljs.core.get_in.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "cy", "cy", 755331060)], null)), new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.get_in.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", 
      "attrs", -2090668713), new cljs.core.Keyword(null, "r", "r", -471384190)], null)), new cljs.core.Keyword(null, "className", "className", -1983287057), "discInner"], null))))) : React.DOM.p(null, "No SVG data available for circular115.svg"));
    };
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IWillMount$ = true;
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var load_chan = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, load_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, load_chan, ___$1) {
              return function(state_20715) {
                var state_val_20716 = state_20715[1];
                if (state_val_20716 === 2) {
                  var inst_20712 = state_20715[2];
                  var inst_20713 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), inst_20712);
                  var state_20715__$1 = state_20715;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20715__$1, inst_20713);
                } else {
                  if (state_val_20716 === 1) {
                    var state_20715__$1 = state_20715;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20715__$1, 2, load_chan);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6508__auto__, load_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, load_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_20720 = [null, null, null, null, null, null, null];
                  statearr_20720[0] = state_machine__6494__auto__;
                  statearr_20720[1] = 1;
                  return statearr_20720;
                };
                var state_machine__6494__auto____1 = function(state_20715) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_20715);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e20721) {
                        if (e20721 instanceof Object) {
                          var ex__6497__auto__ = e20721;
                          var statearr_20722_20724 = state_20715;
                          statearr_20722_20724[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20715);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e20721;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__20725 = state_20715;
                      state_20715 = G__20725;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_20715) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_20715);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, load_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_20723 = f__6509__auto__.call(null);
            statearr_20723[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_20723;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, load_chan, ___$1));
      return c__6508__auto__;
    };
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IInitState$ = true;
    clui_om.svg.brittle_icons.t20706.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), null, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614), clui_om.svg.utils.get_svg.call(null, "images/circular115.svg")], null);
    };
    clui_om.svg.brittle_icons.t20706.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20708) {
      var self__ = this;
      var _20708__$1 = this;
      return self__.meta20707;
    };
    clui_om.svg.brittle_icons.t20706.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20708, meta20707__$1) {
      var self__ = this;
      var _20708__$1 = this;
      return new clui_om.svg.brittle_icons.t20706(self__.owner, self__.app, self__.brittle_disc_icon, meta20707__$1);
    };
    clui_om.svg.brittle_icons.t20706.cljs$lang$type = true;
    clui_om.svg.brittle_icons.t20706.cljs$lang$ctorStr = "clui-om.svg.brittle-icons/t20706";
    clui_om.svg.brittle_icons.t20706.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.svg.brittle-icons/t20706");
    };
    clui_om.svg.brittle_icons.__GT_t20706 = function __GT_t20706(owner__$1, app__$1, brittle_disc_icon__$1, meta20707) {
      return new clui_om.svg.brittle_icons.t20706(owner__$1, app__$1, brittle_disc_icon__$1, meta20707);
    };
  }
  return new clui_om.svg.brittle_icons.t20706(owner, app, brittle_disc_icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 80, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 122, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 79, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/svg/brittle_icons.cljs"], 
  null));
};
clui_om.svg.brittle_icons.brittle_medal_icon = function brittle_medal_icon(app, owner) {
  if (typeof clui_om.svg.brittle_icons.t20803 !== "undefined") {
  } else {
    clui_om.svg.brittle_icons.t20803 = function(owner, app, brittle_medal_icon, meta20804) {
      this.owner = owner;
      this.app = app;
      this.brittle_medal_icon = brittle_medal_icon;
      this.meta20804 = meta20804;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IRenderState$ = true;
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__20806) {
      var self__ = this;
      var map__20807 = p__20806;
      var map__20807__$1 = cljs.core.seq_QMARK_.call(null, map__20807) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20807) : map__20807;
      var state = map__20807__$1;
      var rotation = cljs.core.get.call(null, map__20807__$1, new cljs.core.Keyword(null, "rotation", "rotation", -1728051644));
      var hovering = cljs.core.get.call(null, map__20807__$1, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
      var pinned = cljs.core.get.call(null, map__20807__$1, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339));
      var svg_data = cljs.core.get.call(null, map__20807__$1, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348));
      var ___$1 = this;
      var w = (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(svg_data);
      var h = (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(svg_data);
      var g = cljs.core.first.call(null, (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(svg_data));
      var els = cljs.core.filter.call(null, cljs.core.map_QMARK_, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(g));
      var pg1 = cljs.core.first.call(null, cljs.core.filter.call(null, function(w, h, g, els, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function(p1__20726_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "polygon", "polygon", 837053759), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20726_SHARP_));
        };
      }(w, h, g, els, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), els));
      var pg2 = cljs.core.second.call(null, cljs.core.filter.call(null, function(w, h, g, els, pg1, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function(p1__20727_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "polygon", "polygon", 837053759), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20727_SHARP_));
        };
      }(w, h, g, els, pg1, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), els));
      var pa1 = cljs.core.first.call(null, cljs.core.filter.call(null, function(w, h, g, els, pg1, pg2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function(p1__20728_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "path", "path", -188191168), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20728_SHARP_));
        };
      }(w, h, g, els, pg1, pg2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), els));
      var pa2 = cljs.core.second.call(null, cljs.core.filter.call(null, function(w, h, g, els, pg1, pg2, pa1, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function(p1__20729_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "path", "path", -188191168), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20729_SHARP_));
        };
      }(w, h, g, els, pg1, pg2, pa1, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), els));
      var divattr = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", -1983287057), [cljs.core.str("iconOuter medal"), cljs.core.str(cljs.core.truth_(pinned) ? " pinned" : null), cljs.core.str(cljs.core.truth_(hovering) ? " hovering" : null)].join(""), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), cljs.core.not.call(null, pinned));
        };
      }(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), new cljs.core.Keyword(null, "onMouseOver", "onMouseOver", 1787360977), function(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), true);
        };
      }(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data), new cljs.core.Keyword(null, "onMouseOut", "onMouseOut", 1953812864), function(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false);
        };
      }(w, h, g, els, pg1, pg2, pa1, pa2, ___$1, map__20807, map__20807__$1, state, rotation, hovering, pinned, svg_data)], null);
      var svgattr = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "iconMedal", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), [cljs.core.str("0 0 "), cljs.core.str(w), cljs.core.str(" "), cljs.core.str(h)].join("")], null);
      var transattr = cljs.core.truth_(pinned) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "transform", "transform", 1381301764), [cljs.core.str("rotate("), cljs.core.str(rotation), cljs.core.str(" 16.5 6.25)")].join("")], null) : null;
      return React.DOM.div(cljs.core.clj__GT_js.call(null, divattr), cljs.core.truth_(svg_data) ? React.DOM.svg(cljs.core.clj__GT_js.call(null, svgattr), React.DOM.g(null, React.DOM.polygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", -1486596883), cljs.core.get_in.call(null, pg1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), 
      new cljs.core.Keyword(null, "points", "points", -1486596883)], null))], null))), React.DOM.polygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", -1486596883), cljs.core.get_in.call(null, pg2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "points", "points", -1486596883)], null))], null))), React.DOM.g(cljs.core.clj__GT_js.call(null, 
      transattr), React.DOM.path(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "d", "d", 1972142424), cljs.core.get_in.call(null, pa1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "d", "d", 1972142424)], null))], null))), React.DOM.path(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "d", "d", 1972142424), cljs.core.get_in.call(null, pa2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "d", "d", 1972142424)], null))], null)))))) : React.DOM.p(null, "No SVG data available for medal43.svg"));
    };
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IWillMount$ = true;
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var load_chan_20876 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614));
      var c__6508__auto___20877 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___20877, load_chan_20876, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___20877, load_chan_20876, ___$1) {
              return function(state_20812) {
                var state_val_20813 = state_20812[1];
                if (state_val_20813 === 2) {
                  var inst_20809 = state_20812[2];
                  var inst_20810 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), inst_20809);
                  var state_20812__$1 = state_20812;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20812__$1, inst_20810);
                } else {
                  if (state_val_20813 === 1) {
                    var state_20812__$1 = state_20812;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20812__$1, 2, load_chan_20876);
                  } else {
                    return null;
                  }
                }
              };
            }(c__6508__auto___20877, load_chan_20876, ___$1);
            return function(switch__6493__auto__, c__6508__auto___20877, load_chan_20876, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_20817 = [null, null, null, null, null, null, null];
                  statearr_20817[0] = state_machine__6494__auto__;
                  statearr_20817[1] = 1;
                  return statearr_20817;
                };
                var state_machine__6494__auto____1 = function(state_20812) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_20812);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e20818) {
                        if (e20818 instanceof Object) {
                          var ex__6497__auto__ = e20818;
                          var statearr_20819_20878 = state_20812;
                          statearr_20819_20878[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20812);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e20818;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__20879 = state_20812;
                      state_20812 = G__20879;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_20812) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_20812);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___20877, load_chan_20876, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_20820 = f__6509__auto__.call(null);
            statearr_20820[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___20877;
            return statearr_20820;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___20877, load_chan_20876, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, ___$1) {
              return function(state_20849) {
                var state_val_20850 = state_20849[1];
                if (state_val_20850 === 7) {
                  var inst_20823 = state_20849[7];
                  var inst_20827 = 10 + inst_20823;
                  var inst_20828 = cljs.core.mod.call(null, inst_20827, 360);
                  var state_20849__$1 = state_20849;
                  var statearr_20851_20880 = state_20849__$1;
                  statearr_20851_20880[2] = inst_20828;
                  statearr_20851_20880[1] = 9;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20850 === 1) {
                    var state_20849__$1 = state_20849;
                    var statearr_20852_20881 = state_20849__$1;
                    statearr_20852_20881[2] = null;
                    statearr_20852_20881[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20850 === 4) {
                      var inst_20823 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "rotation", "rotation", -1728051644));
                      var inst_20824 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339));
                      var inst_20825 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
                      var state_20849__$1 = function() {
                        var statearr_20853 = state_20849;
                        statearr_20853[8] = inst_20825;
                        statearr_20853[7] = inst_20823;
                        return statearr_20853;
                      }();
                      if (cljs.core.truth_(inst_20824)) {
                        var statearr_20854_20882 = state_20849__$1;
                        statearr_20854_20882[1] = 7;
                      } else {
                        var statearr_20855_20883 = state_20849__$1;
                        statearr_20855_20883[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20850 === 13) {
                        var inst_20841 = state_20849[2];
                        var state_20849__$1 = function() {
                          var statearr_20856 = state_20849;
                          statearr_20856[9] = inst_20841;
                          return statearr_20856;
                        }();
                        var statearr_20857_20884 = state_20849__$1;
                        statearr_20857_20884[2] = null;
                        statearr_20857_20884[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20850 === 6) {
                          var inst_20845 = state_20849[2];
                          var state_20849__$1 = state_20849;
                          var statearr_20858_20885 = state_20849__$1;
                          statearr_20858_20885[2] = inst_20845;
                          statearr_20858_20885[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20850 === 3) {
                            var inst_20847 = state_20849[2];
                            var state_20849__$1 = state_20849;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20849__$1, inst_20847);
                          } else {
                            if (state_val_20850 === 12) {
                              var inst_20836 = state_20849[2];
                              var inst_20837 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "interval", "interval", 1708495417), inst_20836);
                              var inst_20838 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "interval", "interval", 1708495417));
                              var inst_20839 = cljs.core.async.timeout.call(null, inst_20838);
                              var state_20849__$1 = function() {
                                var statearr_20859 = state_20849;
                                statearr_20859[10] = inst_20837;
                                return statearr_20859;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20849__$1, 13, inst_20839);
                            } else {
                              if (state_val_20850 === 2) {
                                var state_20849__$1 = state_20849;
                                var statearr_20860_20886 = state_20849__$1;
                                statearr_20860_20886[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20850 === 11) {
                                  var state_20849__$1 = state_20849;
                                  var statearr_20862_20887 = state_20849__$1;
                                  statearr_20862_20887[2] = 33;
                                  statearr_20862_20887[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20850 === 9) {
                                    var inst_20825 = state_20849[8];
                                    var inst_20831 = state_20849[2];
                                    var inst_20832 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), inst_20831);
                                    var state_20849__$1 = function() {
                                      var statearr_20863 = state_20849;
                                      statearr_20863[11] = inst_20832;
                                      return statearr_20863;
                                    }();
                                    if (cljs.core.truth_(inst_20825)) {
                                      var statearr_20864_20888 = state_20849__$1;
                                      statearr_20864_20888[1] = 10;
                                    } else {
                                      var statearr_20865_20889 = state_20849__$1;
                                      statearr_20865_20889[1] = 11;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20850 === 5) {
                                      var state_20849__$1 = state_20849;
                                      var statearr_20866_20890 = state_20849__$1;
                                      statearr_20866_20890[2] = null;
                                      statearr_20866_20890[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20850 === 10) {
                                        var state_20849__$1 = state_20849;
                                        var statearr_20867_20891 = state_20849__$1;
                                        statearr_20867_20891[2] = 66;
                                        statearr_20867_20891[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20850 === 8) {
                                          var inst_20823 = state_20849[7];
                                          var state_20849__$1 = state_20849;
                                          var statearr_20868_20892 = state_20849__$1;
                                          statearr_20868_20892[2] = inst_20823;
                                          statearr_20868_20892[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_20872 = [null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_20872[0] = state_machine__6494__auto__;
                  statearr_20872[1] = 1;
                  return statearr_20872;
                };
                var state_machine__6494__auto____1 = function(state_20849) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_20849);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e20873) {
                        if (e20873 instanceof Object) {
                          var ex__6497__auto__ = e20873;
                          var statearr_20874_20893 = state_20849;
                          statearr_20874_20893[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20849);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e20873;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__20894 = state_20849;
                      state_20849 = G__20894;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_20849) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_20849);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_20875 = f__6509__auto__.call(null);
            statearr_20875[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_20875;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, ___$1));
      return c__6508__auto__;
    };
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IInitState$ = true;
    clui_om.svg.brittle_icons.t20803.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "svg-data", "svg-data", 2142513348), null, new cljs.core.Keyword(null, "load-chan", "load-chan", 342107614), clui_om.svg.utils.get_svg.call(null, "images/medal43.svg"), new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), false, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false, new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), 0, new cljs.core.Keyword(null, "interval", 
      "interval", 1708495417), 66], null);
    };
    clui_om.svg.brittle_icons.t20803.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20805) {
      var self__ = this;
      var _20805__$1 = this;
      return self__.meta20804;
    };
    clui_om.svg.brittle_icons.t20803.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20805, meta20804__$1) {
      var self__ = this;
      var _20805__$1 = this;
      return new clui_om.svg.brittle_icons.t20803(self__.owner, self__.app, self__.brittle_medal_icon, meta20804__$1);
    };
    clui_om.svg.brittle_icons.t20803.cljs$lang$type = true;
    clui_om.svg.brittle_icons.t20803.cljs$lang$ctorStr = "clui-om.svg.brittle-icons/t20803";
    clui_om.svg.brittle_icons.t20803.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.svg.brittle-icons/t20803");
    };
    clui_om.svg.brittle_icons.__GT_t20803 = function __GT_t20803(owner__$1, app__$1, brittle_medal_icon__$1, meta20804) {
      return new clui_om.svg.brittle_icons.t20803(owner__$1, app__$1, brittle_medal_icon__$1, meta20804);
    };
  }
  return new clui_om.svg.brittle_icons.t20803(owner, app, brittle_medal_icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 75, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 182, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 129, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/svg/brittle_icons.cljs"], 
  null));
};
clui_om.svg.brittle_icons.heart_svg = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 31 30", new cljs.core.Keyword(null, "y", "y", -1757859776), null, new cljs.core.Keyword(null, "x", "x", 2099068185), null, new cljs.core.Keyword(null, 
"width", "width", -384071477), "31", new cljs.core.Keyword(null, "height", "height", 1025178622), "30", new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), "http://www.w3.org/2000/svg"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "heart-icon", new cljs.core.Keyword(null, "d", "d", 1972142424), "M16,28.261c0,0-14-7.926-14-17.046c0-9.356,13.159-10.399,14-0.454c1.011-9.938,14-8.903,14,0.454 C30,20.335,16,28.261,16,28.261z"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), 
new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null)], null)], null);
clui_om.svg.brittle_icons.robust_heart_icon = function robust_heart_icon(app, owner) {
  if (typeof clui_om.svg.brittle_icons.t20899 !== "undefined") {
  } else {
    clui_om.svg.brittle_icons.t20899 = function(owner, app, robust_heart_icon, meta20900) {
      this.owner = owner;
      this.app = app;
      this.robust_heart_icon = robust_heart_icon;
      this.meta20900 = meta20900;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.svg.brittle_icons.t20899.prototype.om$core$IRender$ = true;
    clui_om.svg.brittle_icons.t20899.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var elts = (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(clui_om.svg.brittle_icons.heart_svg);
      var path1 = cljs.core.first.call(null, cljs.core.filter.call(null, function(elts, ___$1) {
        return function(p1__20895_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "path", "path", -188191168), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__20895_SHARP_));
        };
      }(elts, ___$1), elts));
      var divattr = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "iconOuter heart"], null);
      var svgattr = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), cljs.core.get_in.call(null, clui_om.svg.brittle_icons.heart_svg, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477)], null)), new cljs.core.Keyword(null, "id", "id", -1388402092), "lonelyHeart", new cljs.core.Keyword(null, 
      "className", "className", -1983287057), "iconHeart"], null);
      var pathattr = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "d", "d", 1972142424), cljs.core.get_in.call(null, path1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "d", "d", 1972142424)], null)), new cljs.core.Keyword(null, "className", "className", -1983287057), "lonelyPath"], null);
      return React.DOM.div(cljs.core.clj__GT_js.call(null, divattr), React.DOM.svg(cljs.core.clj__GT_js.call(null, svgattr), React.DOM.path(cljs.core.clj__GT_js.call(null, pathattr))));
    };
    clui_om.svg.brittle_icons.t20899.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20901) {
      var self__ = this;
      var _20901__$1 = this;
      return self__.meta20900;
    };
    clui_om.svg.brittle_icons.t20899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20901, meta20900__$1) {
      var self__ = this;
      var _20901__$1 = this;
      return new clui_om.svg.brittle_icons.t20899(self__.owner, self__.app, self__.robust_heart_icon, meta20900__$1);
    };
    clui_om.svg.brittle_icons.t20899.cljs$lang$type = true;
    clui_om.svg.brittle_icons.t20899.cljs$lang$ctorStr = "clui-om.svg.brittle-icons/t20899";
    clui_om.svg.brittle_icons.t20899.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.svg.brittle-icons/t20899");
    };
    clui_om.svg.brittle_icons.__GT_t20899 = function __GT_t20899(owner__$1, app__$1, robust_heart_icon__$1, meta20900) {
      return new clui_om.svg.brittle_icons.t20899(owner__$1, app__$1, robust_heart_icon__$1, meta20900);
    };
  }
  return new clui_om.svg.brittle_icons.t20899(owner, app, robust_heart_icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 61, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 220, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 207, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/svg/brittle_icons.cljs"], 
  null));
};
clui_om.svg.brittle_icons.bear_svg = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "xml:space", "xml:space", -1976466326), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, 
"viewbox", "viewbox", -1545612500), new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), new cljs.core.Keyword(null, "xmlns:xlink", "xmlns:xlink", -316591054), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), new cljs.core.Keyword(null, "enable-background", "enable-background", -858721379), new cljs.core.Keyword(null, 
"height", "height", 1025178622)], ["0", "preserve", "200", "0 0 200 200", "http://www.w3.org/2000/svg", "http://www.w3.org/1999/xlink", "Capa_1", "0", "1.1", "0 0 200 200", "new 0 0 200 200", "200"]), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M134.374,46.481c-3.109-2.588-6.522-0.404-9.679,1.049c-0.038-0.071-0.079-0.141-0.117-0.213\r\n\t\tc-0.03-0.056-0.155-0.328-0.254-0.54c0.227-0.62,0.168-1.328-0.408-1.817c-0.484-0.412-1.007-0.745-1.514-1.124\r\n\t\tc-1.613-1.207-3.829,0.121-4.363,1.775c-0.506,1.57-0.008,3.238,0.643,4.782c-1.069,0.528-2.132,1.066-3.196,1.603\r\n\t\tc-1.216,0.133-2.466,0.788-3.664,2.06c-3.204,3.405,0.813,8.284,4.849,6.285c1.93-0.955,3.876-1.878,5.814-2.816\r\n\t\tc0.384,0.593,0.748,1.201,1.155,1.775c1.492,2.105,3.263,4.744,6.171,4.628c3.388-0.135,4.934-3.786,2.734-6.304\r\n\t\tc-0.08-0.091-0.192-0.123-0.282-0.198c-0.098-0.119-0.172-0.257-0.279-0.37c-1.857-1.965,0.352,0.396-0.789-0.661\r\n\t\tc-0.661-0.613-1.268-1.299-1.821-1.97c2.552-0.948,5.367-2.113,5.878-4.615C135.486,48.68,135.333,47.279,134.374,46.481z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", 
"fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M80.829,47.341c-0.131-0.046-0.28-0.097-0.48-0.166c-0.798-0.273-1.723-0.229-2.516,0.039\r\n\t\tc-0.976,0.329-2.039,0.49-3.081,0.651c0.142-0.436,0.257-0.88,0.407-1.313c0.159-0.456,0.327-0.906,0.542-1.335\r\n\t\tc0.088-0.174,0.845-1.05,0.237-0.428c3.609-3.692-2.661-8.722-5.65-4.36c-1.489,2.173-1.971,5.429-2.525,7.938\r\n\t\tc-0.022,0.098-0.041,0.199-0.062,0.297c-0.19,0.042-0.401,0.063-0.579,0.116c-0.36-0.098-0.766-0.089-1.179,0.086\r\n\t\tc-1.527,0.648-1.797,2.133-0.984,3.264c0.351,0.798,1.014,1.303,1.826,1.636c-0.187,1.485-0.292,2.975-0.209,4.449\r\n\t\tc0.205,3.693,5.282,3.581,5.651,0c0.137-1.335,0.41-2.673,0.727-4.002c0.446-0.03,0.864-0.059,1.221-0.073\r\n\t\tc2.639-0.108,7.069,0.425,8.477-2.418C83.44,50.135,82.701,47.667,80.829,47.341z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", 
"fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M187.661,48.587c2.945-10.688-4.179-22.13-10.809-29.851c-6.691-7.792-16.966-15.582-27.737-15.385\r\n\t\tc-12.158,0.222-17.597,12.291-17.923,22.961c-7.262-3.502-15.222-5.748-23.33-6.628c-0.852-0.869-2.049-1.422-3.556-1.14\r\n\t\tc-1.16,0.217-2.326,0.45-3.495,0.697c-0.266-0.004-0.532-0.028-0.797-0.028c-0.753-0.001-1.314,0.254-1.779,0.598\r\n\t\tc-4.86,1.113-9.752,2.499-14.523,4.167C80.076,12.971,67.543,3.422,55.997,4.235c-10.958,0.772-19.73,9.194-25.483,17.888\r\n\t\tc-5.478,8.279-9.379,19.436-6.661,29.338c2.314,8.431,10.552,11.855,18.422,10.675c-1.442,7.563-0.675,16.215,3.085,26.092\r\n\t\tc2.376,6.241,5.989,11.546,10.481,15.973c-0.455-0.267-1.019-0.405-1.689-0.289c-8.513,1.48-14.391,6.118-19.199,13.313\r\n\t\tc-2.376,3.556-3.807,8.115-3.133,12.254c-3.372-0.167-6.709,0.209-9.912,1.281c-1.388,0.465-2.083,1.421-2.312,2.459\r\n\t\tc-12.416,2.599-11.075,18.233-6.062,29.086c7.103,15.375,22.979,33.893,41.97,31.09c9.422-1.391,15.712-6.056,18.833-12.257\r\n\t\tc0.137,0.14,0.239,0.294,0.418,0.417c12.697,8.706,31.47,8.212,45.073,1.089c1.141,1.559,2.49,3.075,4.178,4.508\r\n\t\tc20.976,17.808,72.727-22.951,61.644-42.831c1.215-0.424,2.172-2.019,1.495-3.402c-4.589-9.378-12.732-13.046-21.906-12.879\r\n\t\tc-0.555-2.089-2.061-4.098-3.187-5.778c-1.99-2.973-4.313-5.79-6.848-8.311c-1.831-1.821-4.386-4.311-7.029-5.032\r\n\t\tc12.555-10.991,17.333-28.275,13.568-45.346c5.628,0.373,12.42-1.694,16.853-3.898C183.064,57.456,186.344,53.365,187.661,48.587z\r\n\t\t M43.394,57.759c-6.157-0.841-11.759-2.288-13.201-9.561c-1.502-7.577,2.625-16.261,6.563-22.427\r\n\t\tc4.21-6.592,11.109-13.355,19.241-14.309c10.79-1.265,15.514,7.955,21.45,14.908c-1.106,0.461-2.169,0.981-3.25,1.477\r\n\t\tc-2.978-6.156-10.772-9.914-17.341-9.445c-6.868,0.491-13.035,4.794-17.315,9.964c-3.865,4.669-6.868,10.979-5.568,17.151\r\n\t\tc1.15,5.458,6.107,7.765,11.116,8.112C44.467,54.974,43.856,56.328,43.394,57.759z M51.756,33.623\r\n\t\tc-1.77-0.916-3.456-1.992-5.087-3.145c1.611-1.56,3.484-2.911,5.503-3.904c1.516,1.35,3.061,2.666,4.561,4.037\r\n\t\tc1.472,1.346,3.145,3.014,4.943,4.407c-0.986,0.698-1.988,1.381-2.922,2.12c-0.038-0.043-0.032-0.096-0.076-0.138\r\n\t\tC56.894,35.324,53.928,34.747,51.756,33.623z M55.638,39.751c-1.275,1.163-2.488,2.371-3.621,3.632\r\n\t\tc-0.027-0.042-0.052-0.11-0.079-0.138c-0.372-0.392-0.807-0.715-1.283-0.968c-1.048-0.558-2.094-1.118-3.139-1.683\r\n\t\tc-2.006-1.085-4.033-2.131-6.067-3.162c0.904-1.83,2.112-3.513,3.361-4.996c1.429,1.26,2.91,2.46,4.467,3.575\r\n\t\tC50.96,37.215,53.344,39.094,55.638,39.751z M58.971,27.712c-1.062-0.775-2.1-1.58-3.142-2.381\r\n\t\tc0.345-0.068,0.677-0.195,1.027-0.235c5.435-0.621,8.009,2.657,11.366,5.76c-0.785,0.433-1.512,0.92-2.272,1.378\r\n\t\tC63.766,30.572,61.073,29.244,58.971,27.712z M47.41,49.387c-3.751-0.554-7.465-1.977-7.462-6.297\r\n\t\tc0.001-0.68,0.167-1.347,0.297-2.017c0.483,0.294,0.96,0.598,1.436,0.9c1.825,1.159,3.653,2.313,5.489,3.455\r\n\t\tc0.73,0.453,1.491,0.95,2.287,1.205C48.773,47.55,48.014,48.421,47.41,49.387z M55.451,186.248\r\n\t\tc-22.044,5.263-49.506-41.639-34.866-49.805c0.745,0.728,1.802,1.183,3.151,0.951c5.109-0.88,10.104-0.317,14.859,1.177\r\n\t\tc-1.293-0.063-2.58,0.971-2.884,2.206c-0.542,2.206,1.355,5.909,2.351,7.814c1.352,2.586,4.748,0.65,4.363-1.839\r\n\t\tc-0.031-0.203-0.09-0.402-0.129-0.604c0.152-0.229,0.323-0.451,0.365-0.723c0.312-2.005-0.409-4.905-2.228-6.191\r\n\t\tc7.663,2.842,14.636,8.046,20.26,13.81C71.955,164.584,74.41,181.722,55.451,186.248z M116.698,176.545\r\n\t\tc-12.189,6.028-27.107,6.967-39.338,0.555c-0.493-0.258-0.954-0.316-1.393-0.297c1.438-5.796,0.543-12.439-2.768-18.89\r\n\t\tc5.929-8.899,16.804-12.567,27.148-13.235c5.04-0.326,10.215,0.488,14.712,2.816c3.605,1.866,4.26,4.944,5.5,8.058\r\n\t\tC116.432,162.437,114.606,169.773,116.698,176.545z M179.037,139.339c-1.479,0.57-2.442,2.55-1.61,4.151\r\n\t\tc10.539,20.285-28.322,44.565-45.699,39.817c-3.611-0.987-5.877-2.685-7.172-4.811c0.123-1.112-0.318-2.238-1.11-3.002\r\n\t\tc-1.831-9.163,8.213-22.835,13.629-27.528C147.883,138.601,166.59,130.557,179.037,139.339z M152.546,119.369\r\n\t\tc1.7,2.192,3.256,4.462,4.657,6.857c0.489,0.837,0.87,1.722,1.264,2.59c-7.819,1.582-15.929,5.438-22.957,10.653\r\n\t\tc0.406-1.831-0.696-3.744-1.453-5.574c-1.177-2.842-2.417-6.188-4.782-8.275c-2.589-2.283-6.982,0.664-4.963,3.829\r\n\t\tc1.903,2.982,3.855,5.824,5.526,8.963c0.597,1.12,1.665,2.991,3.163,3c-2.632,2.154-5.026,4.514-7.192,6.975\r\n\t\tc-3.909-6.473-14.859-9.966-21.41-10.346c-12.224-0.708-27.407,4.558-33.763,15.655c-6.991-10.221-20.021-20.561-33.295-23.442\r\n\t\tc-0.62-9.582,9.665-18.971,18.035-21.908c1.802-0.632,1.979-2.461,1.123-3.576c19.576,18.608,54.962,21.195,78.361,12.171\r\n\t\tc3.942-1.52,7.462-3.497,10.594-5.812c0.012,0.059,0.044,0.193,0.21,0.585c0.27,0.636,1.207,1.227,1.697,1.688\r\n\t\tC149.269,115.203,150.942,117.3,152.546,119.369z M78.127,80.249c-7.594,7.245-4.461,20.349,6.422,21.791\r\n\t\tc4.574,0.606,8.921-1.845,11.448-5.554c0.407-0.597,0.739-1.232,1.05-1.875c1.747,3.227,4.356,5.952,7.716,7.492\r\n\t\tc3.827,1.753,8.115,1.57,11.686-0.688c3.894-2.462,7.622-8.717,6.135-13.306c-0.591-1.823-3.097-2.788-4.517-1.193\r\n\t\tc-3.56,3.999-3.445,12.045-10.915,9.522c-4.482-1.513-6.481-5.527-7.395-9.83c0.728-0.24,1.419-0.63,1.919-1.356\r\n\t\tc2.43-3.529,5.409-8.186,6.334-12.548c0.149-0.367,0.244-0.735,0.27-1.101c0.008-0.062,0.04-0.128,0.046-0.19\r\n\t\tc-0.017,0.041-0.034,0.081-0.05,0.121c0.014-0.29,0.017-0.579-0.047-0.854c14.334,3.583,27.875,18.233,28.625,31.455\r\n\t\tc0.096,1.687,1.353,2.778,2.732,2.983c-0.585,0.426-1.152,0.868-1.768,1.267c-22.533,14.588-56.256,8.215-75.675-8.694\r\n\t\tc1.132-11.856,13.681-20.083,25.492-24.526c0.104,0.29,0.242,0.569,0.397,0.85c0.721,1.313,1.55,2.557,2.386,3.798\r\n\t\tc1.114,1.656,2.315,3.266,3.488,4.89c-0.327,3.292-1.06,6.525-2.912,9.305c-1.63,2.446-3.489,3.079-5.785,2.864\r\n\t\tc-1.23-0.116-3.28-1.574-3.811-2.927c-1.01-2.572,0.036-5.893,1.278-9.05C83.727,80.219,79.95,78.51,78.127,80.249z\r\n\t\t M143.607,101.819c8.774-19.423-29.809-40.049-44.79-39.203c-14.77,0.834-39.286,13.893-41.437,30.308\r\n\t\tc-13.392-16.316-7.34-41.612,8.845-53.709c11.137-8.324,26.922-10.333,40.143-13.191l0.001,0\r\n\t\tc18.697,2.573,34.831,11.981,44.149,29.213C159.127,71.157,156.097,89.927,143.607,101.819z M154.682,46.342\r\n\t\tc-0.067,0.06-0.093,0.128-0.147,0.19c-1.01-1.538-2.027-3.071-3.182-4.481c3.092-3.445,6.87-6.283,9.742-9.867\r\n\t\tc0.075-0.094,0.099-0.191,0.159-0.286c0.562,0.586,1.074,1.219,1.503,1.916c0.797,1.294,1.212,2.835,1.358,4.407\r\n\t\tC160.965,40.917,157.757,43.586,154.682,46.342z M152.934,34.656c-1.336,1.626-2.577,3.321-3.73,5.076\r\n\t\tc-1.064-1.152-2.089-2.342-3.244-3.402c1.016-1.398,2.432-2.725,3.403-3.744c1.116-1.172,2.336-2.268,3.635-3.233\r\n\t\tc0.588-0.436,1.136-0.864,1.522-1.387c1.124,0.33,2.193,0.809,3.221,1.357C155.948,30.841,154.411,32.858,152.934,34.656z\r\n\t\t M146.27,30.2c-0.953,1.253-1.891,2.698-2.53,4.234c-0.801-0.663-1.583-1.349-2.419-1.969c1.128-2.987,3.412-4.71,7.085-5.092\r\n\t\tC147.535,28.426,146.79,29.516,146.27,30.2z M159.43,55.803c-0.24-0.62-0.537-1.199-0.798-1.804\r\n\t\tc3.844,0.746,7.784-1.951,10.049-5.387c3.546-5.379,2.945-12.818-0.022-18.249c-6.559-12.005-27.864-12.835-31.623-0.802\r\n\t\tc-0.609-0.376-1.201-0.777-1.823-1.133c0.036-0.091,0.094-0.156,0.119-0.257c1.952-7.783,4.489-18.144,14.414-17.586\r\n\t\tc8.261,0.465,15.882,7.127,21.153,12.918c4.962,5.449,10.727,14.013,9.625,21.834C179.034,55.925,167.175,54.004,159.43,55.803z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", 
"fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M147.701,153.667c-3.531-1.343-5.782,0.581-7.215,3.412c-0.123,0.134-0.271,0.23-0.37,0.396\r\n\t\tc-0.507-0.065-1.052,0.061-1.54,0.525c-2.606,2.477-5.232,5.972-4.379,9.814c1.028,4.632,6.035,6.207,10.188,6.676\r\n\t\tc5.876,0.664,10.394-3.068,10.305-9.059C154.623,160.947,152.124,155.349,147.701,153.667z"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), 
new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M161.22,142.647c-1.089-2.193-3.85-2.012-5.478-0.706c-0.946,0.759-1.232,2.22-1.388,3.584\r\n\t\tc-0.225,0.738-0.486,1.467-0.768,2.185c-1.762,4.492,6.1,6.831,7.311,2.015C161.457,147.498,162.305,144.833,161.22,142.647z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", 
"fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M167.413,151.021c-0.492-0.604-0.991-1.075-1.642-1.521c-1.213-0.832-3.259-0.567-4.222,0.545\r\n\t\tc-1.596,1.843-1.104,3.49-0.002,5.37c0.287,0.489,0.704,0.811,1.166,1.028C165.887,158.75,170.414,154.705,167.413,151.021z"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", 
new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M166.374,158.513c-1.464-0.167-2.96-0.055-4.432-0.036c-2.309-0.03-3.445,1.759-3.425,3.549\r\n\t\tc-0.01,0.863,0.261,1.714,0.792,2.373c-0.22,1.438,1.516,2.851,2.899,1.955c0.341-0.221,0.697-0.489,1.061-0.748\r\n\t\tc1.038,0.029,2.079,0.05,3.105-0.067C170.893,165.024,170.893,159.028,166.374,158.513z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", 
"fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M55.074,155.223c-3.291-2.385-7.819-3.27-11.911-2.47c-9.105-0.405-16.687,7.542-11.358,16.509\r\n\t\tc0.725,1.221,1.655,2.388,2.664,3.517c0.294,0.575,0.588,1.151,0.961,1.674c1.474,2.063,3.48,3.232,5.645,3.748\r\n\t\tc4.333,2.571,9.31,4.004,13.913,3.259c4.506-0.729,7.057-4.958,7.437-9.187C63.028,165.556,60.56,159.199,55.074,155.223z\r\n\t\t M56.008,172.499c-0.032-0.363-0.13-0.733-0.394-1.102c-0.16-0.224-0.391-0.38-0.59-0.57c1.595-4.561-1.557-8.646-5.816-11.223\r\n\t\tc1.22,0.408,2.334,0.99,3.171,1.67C55.144,163.515,56.966,168.706,56.008,172.499z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, 
"g", "g", 1738089905), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\r\n\t\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), 
"#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M25.616,149.432c-1.543-0.223-3.192-0.377-4.401,0.832c-1.219,1.219-1.281,3.437,0.027,4.632\r\n\t\t\tc0.482,0.44,0.949,0.766,1.596,0.916c0.516,0.139,1.031,0.139,1.547,0c0.183-0.079,0.314-0.135,0.425-0.183l0.002,0\r\n\t\t\tc0.004-0.001,0.006-0.004,0.009-0.005c0.322-0.137,0.313-0.129,0.016,0.007C28.149,155.641,29.253,149.959,25.616,149.432z"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", 
"path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M24.633,155.723c0.094-0.043,0.138-0.063,0.203-0.092c-0.008,0-0.016-0.002-0.025-0.002\r\n\t\t\tC24.746,155.653,24.702,155.703,24.633,155.723z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n\t"], null)], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M33.663,144.122c-1.243-0.702-3.367-1.015-4.233-2.257c-2.209-3.167-7.418-0.218-5.231,3.058\r\n\t\tc0.424,0.844,1.048,1.578,1.739,2.261c0.963,1.163,1.986,2.274,3.119,3.283c1.099,0.979,2.355,0.796,3.206,0.111\r\n\t\tC35.169,150.448,36.586,145.77,33.663,144.122z"], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, 
"content", "content", 15833224), null], null), "\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "#1D1D1B", new cljs.core.Keyword(null, "d", "d", 1972142424), "M69.585,122.247c-3.301,0.478-4.747,5.417-5.617,8.077c-1.425,4.35-1.655,9.196-0.622,13.64\r\n\t\tc0.547,2.353,4.3,1.845,4.206-0.569c-0.144-3.672,0.411-7.081,1.593-10.554c0.893-2.623,3.205-4.54,3.958-7.075\r\n\t\tC73.787,123.465,71.623,121.952,69.585,122.247z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n"], null)], null)], null)], null);
clui_om.svg.brittle_icons.auto_bear_icon = clui_om.svg.icons.auto_icon.call(null, clui_om.svg.brittle_icons.bear_svg);
clui_om.svg.brittle_icons.ant_svg = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "xml:space", "xml:space", -1976466326), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, 
"viewbox", "viewbox", -1545612500), new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "xmlns:xlink", "xmlns:xlink", -316591054), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), new cljs.core.Keyword(null, "height", "height", 
1025178622)], ["0", "preserve", "150", "0 0 150 150", "http://www.w3.org/2000/svg", "enable-background:new 0 0 150 150;", "http://www.w3.org/1999/xlink", "Capa_1", "0", "1.1", "0 0 150 150", "150"]), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M110.833,100.667c0.525,1.274,0.675,1.589,1.325,1.936c0.204,0.111,0.359,0.141,0.473,0.163\r\n\t\tc0.178,0.035,0.275,0.054,0.613,0.75c0.568,1.158,0.642,1.307,1.401,1.686c0.121,0.061,0.234,0.113,0.337,0.16\r\n\t\tc0.478,0.22,0.59,0.284,0.598,0.611c0.029,1.114,1.056,2.403,1.703,2.403c0.188,0,0.389-0.105,0.467-0.383\r\n\t\tc0.164,0.115,0.35,0.207,0.542,0.303c0.596,0.297,1.212,0.605,1.534,1.662c0.037,0.122,0.153,0.494,0.458,0.494\r\n\t\tc0.091,0,0.224-0.036,0.335-0.207c0.222-0.338,0.312-1.162,0.104-1.641c-0.811-1.885-2.081-3.289-2.796-3.509\r\n\t\tc-0.618-0.185-0.946-0.301-1.06-0.723c-0.188-0.685-0.49-1.507-1.152-1.788c-0.708-0.296-1.119-0.748-1.221-1.34\r\n\t\tc-0.082-0.487-0.699-1.166-1.415-1.952c-0.64-0.703-1.364-1.499-1.632-2.1c-1.313-3.705-2.467-8.051-3.583-12.255\r\n\t\tc-1.675-6.312-3.257-12.275-5.206-15.465c-0.062-0.1-0.112-0.268-0.162-0.43c-0.05-0.162-0.102-0.329-0.171-0.462\r\n\t\tc-0.093-0.178-0.242-0.333-0.445-0.462c-0.247-0.155-0.659-0.23-1.259-0.23c-2.944,0-10.611,2.009-14.308,5.293\r\n\t\tc-0.175,0.155-0.314,0.264-0.385,0.31c-0.045-0.015-0.134-0.053-0.306-0.142c-0.113-0.058-0.233-0.238-0.232-0.427\r\n\t\tc0.011-1.254-0.166-1.913-0.434-2.518c-0.005-0.011-0.009-0.021-0.013-0.029c0.021-0.001,0.039-0.002,0.039-0.002\r\n\t\tc1.291,0.112,2.032-0.321,2.418-0.679c0.285-0.265,0.545-0.467,0.713-0.554c5.104-2.645,14.249-17.816,15.328-21.733\r\n\t\tc0.054-0.195,0.237-0.4,0.41-0.458c0.891-0.295,2.279-0.948,3.832-2.387c0.058-0.052,0.114-0.179,0.107-0.256\r\n\t\tc-0.006-0.078-0.039-0.136-0.084-0.185c0.268-0.209,0.695-0.505,1.113-0.793c0.65-0.449,1.265-0.873,1.523-1.132\r\n\t\tc0.061-0.063,0.103-0.201,0.08-0.286c-0.041-0.153-0.179-0.218-0.33-0.266c0.559-0.538,1.16-1.058,1.654-1.485\r\n\t\tc0.969-0.837,1.091-0.952,1.057-1.161c-0.002-0.012-0.005-0.024-0.01-0.037c0.27-0.213,0.334-0.286,0.354-0.451\r\n\t\tc0.017-0.138,0.304-0.537,0.831-1.157c0.207-0.249,0.4-0.458,0.584-0.629c0.249-0.233,0.373-0.351,0.303-0.541\r\n\t\tc-0.016-0.043-0.05-0.083-0.092-0.114c0.008-0.037,0.026-0.088,0.066-0.145c0.498-0.698,1.667-0.859,2.521-0.977\r\n\t\tc0.686-0.095,1.1-0.152,1.174-0.48c0.065-0.283-0.215-0.514-0.528-0.722c-0.63-0.416-1.367-0.645-2.077-0.645\r\n\t\tc-1.224,0-2.223,0.643-2.755,1.767c-0.07-0.058-0.154-0.088-0.242-0.088c-0.249,0-0.46,0.222-0.707,0.742\r\n\t\tc-0.093,0.198-0.568,1.23-0.787,2.137c-0.026,0.109-0.045,0.132-0.096,0.194c-0.045,0.055-0.097,0.119-0.159,0.23\r\n\t\tc-0.042,0.076-0.092,0.17-0.147,0.276c-0.225,0.427-0.551,1.045-0.961,1.538c-0.085-0.195-0.185-0.404-0.405-0.404\r\n\t\tc-0.063,0-0.167,0.044-0.214,0.088c-0.345,0.33-0.692,0.847-1.061,1.394c-0.255,0.381-0.517,0.77-0.783,1.104\r\n\t\tc-0.012-0.039-0.03-0.075-0.059-0.107c-0.086-0.099-0.298-0.103-0.398-0.021c-0.374,0.306-0.795,0.685-1.229,1.075\r\n\t\tc-0.642,0.578-1.304,1.175-1.873,1.584c-0.211,0.151-0.603,0.349-0.837,0.467c-1.866,0.939-2.547,2.191-4.8,6.34\r\n\t\tc-0.616,1.135-1.353,2.49-2.265,4.119c-5.396,9.633-8.025,11.072-9.112,11.072c-0.124,0-0.243-0.019-0.354-0.056\r\n\t\tc-0.268-0.088-0.527-0.133-0.775-0.133c-0.903,0-1.475,0.57-1.934,1.028L83.79,67.62c-0.007-0.002-0.036-0.023-0.057-0.089\r\n\t\tc-1.045-3.338-4.063-6.265-5.822-7.748c3.553-0.436,5.1-2.008,7.044-4.349c3.181-3.848,0.264-11.722-1.158-14.972l-0.07-0.134\r\n\t\tc0-0.021,0.012-0.117,0.177-0.427c0.135-0.252,0.203-0.509,0.203-0.762l0.001-0.554c0.001-0.237,0.087-0.628,0.188-0.854\r\n\t\tc0.431-0.962,0.844-1.924,1.251-2.873c1.67-3.891,3.247-7.566,5.585-10.08c0.11-0.118,0.239-0.331,0.394-0.65\r\n\t\tc0.131-0.271,0.276-0.718,0.342-0.995c0.65-2.759,2.595-12.139,0.342-16.982c-0.579-1.248-1.323-1.434-1.716-1.434\r\n\t\tc-0.457,0-0.915,0.242-1.257,0.664c-0.447,0.55-0.634,1.322-0.488,2.014c1.539,7.441,2.069,12.515,1.578,15.078\r\n\t\tc-0.047,0.244-0.212,0.628-0.336,0.835c-0.269,0.446-0.658,1.067-0.987,1.497c-2.187,2.878-3.736,6.874-5.696,11.933\r\n\t\tc-0.059,0.149-0.268,0.282-0.467,0.295c-0.162,0.011-0.313,0.037-0.452,0.075c-0.191,0.054-0.355,0.021-0.43-0.09\r\n\t\tc-0.537-0.82-1.09-1.478-1.691-2.01c-0.155-0.137-0.276-0.418-0.265-0.613c0.035-0.585,0.014-1.018-0.063-1.286\r\n\t\tc-0.036-0.127-0.145-0.516-1.403-1.354c-0.245-0.163-0.459-0.147-0.583,0.005c-0.086,0.104-0.108,0.254-0.068,0.457\r\n\t\tc0.051,0.263,0.072,0.677-0.111,1.152c-0.049,0.123-0.257,0.217-0.44,0.188c-0.375-0.062-0.769-0.095-1.15-0.062\r\n\t\tc-0.1,0.009-0.262,0.009-0.361,0c-0.383-0.032-0.776,0.001-1.15,0.062c-0.178,0.027-0.392-0.063-0.438-0.187\r\n\t\tc-0.186-0.476-0.164-0.89-0.113-1.152c0.04-0.204,0.018-0.354-0.068-0.458c-0.125-0.151-0.339-0.167-0.583-0.004\r\n\t\tc-1.259,0.838-1.367,1.227-1.402,1.353c-0.078,0.27-0.1,0.703-0.064,1.287c0.012,0.197-0.109,0.478-0.264,0.614\r\n\t\tc-0.6,0.53-1.153,1.188-1.692,2.009c-0.074,0.113-0.239,0.146-0.431,0.091c-0.138-0.039-0.29-0.064-0.453-0.075\r\n\t\tc-0.197-0.013-0.406-0.146-0.464-0.294c-1.961-5.059-3.511-9.055-5.698-11.934c-0.328-0.429-0.718-1.051-0.986-1.497\r\n\t\tc-0.124-0.207-0.289-0.591-0.336-0.835c-0.491-2.563,0.039-7.636,1.578-15.077c0.146-0.692-0.041-1.464-0.488-2.015\r\n\t\tc-0.342-0.422-0.8-0.664-1.257-0.664c-0.393,0-1.137,0.186-1.716,1.434c-2.253,4.843-0.309,14.223,0.342,16.982\r\n\t\tc0.065,0.276,0.211,0.724,0.342,0.994c0.154,0.319,0.283,0.532,0.394,0.65c2.338,2.514,3.915,6.189,5.585,10.08\r\n\t\tc0.407,0.948,0.82,1.91,1.251,2.872c0.101,0.226,0.187,0.617,0.188,0.854l0.001,0.553c0,0.253,0.068,0.51,0.203,0.762\r\n\t\tc0.156,0.293,0.175,0.395,0.185,0.395c0,0,0.001,0,0.002-0.001l-0.101,0.21c-1.401,3.207-4.318,11.081-1.138,14.93\r\n\t\tc1.944,2.341,3.491,3.913,7.043,4.349c-1.758,1.484-4.776,4.411-5.821,7.749c-0.019,0.061-0.048,0.087-0.104,0.056l-0.141-0.139\r\n\t\tc-0.46-0.458-1.031-1.028-1.935-1.028c-0.248,0-0.508,0.045-0.776,0.134c-0.109,0.037-0.229,0.055-0.353,0.055\r\n\t\tc-1.087,0-3.716-1.438-9.112-11.072c-0.912-1.629-1.648-2.984-2.265-4.119c-2.253-4.149-2.934-5.401-4.8-6.34\r\n\t\tc-0.234-0.118-0.626-0.316-0.837-0.467c-0.569-0.41-1.231-1.007-1.873-1.584c-0.434-0.39-0.854-0.77-1.231-1.077\r\n\t\tc-0.1-0.08-0.311-0.075-0.396,0.023c-0.028,0.033-0.047,0.068-0.059,0.107c-0.267-0.335-0.528-0.724-0.783-1.104\r\n\t\tc-0.368-0.547-0.716-1.064-1.063-1.396c-0.046-0.043-0.148-0.086-0.211-0.086c-0.221,0-0.32,0.208-0.405,0.404\r\n\t\tc-0.41-0.493-0.736-1.111-0.961-1.538c-0.056-0.106-0.105-0.2-0.148-0.276c-0.062-0.111-0.113-0.175-0.158-0.23\r\n\t\tc-0.051-0.062-0.069-0.085-0.096-0.194c-0.219-0.907-0.694-1.939-0.788-2.138c-0.246-0.52-0.457-0.741-0.706-0.741\r\n\t\tc-0.088,0-0.172,0.03-0.242,0.088c-0.532-1.125-1.531-1.767-2.755-1.767c-0.71,0-1.447,0.229-2.077,0.645\r\n\t\tc-0.313,0.208-0.594,0.438-0.528,0.722c0.074,0.328,0.488,0.385,1.174,0.48c0.854,0.118,2.022,0.279,2.521,0.977\r\n\t\tc0.04,0.057,0.059,0.109,0.066,0.146c-0.042,0.031-0.076,0.071-0.092,0.114c-0.07,0.19,0.054,0.308,0.312,0.55\r\n\t\tc0.174,0.162,0.367,0.371,0.576,0.622c0.525,0.618,0.812,1.018,0.829,1.155c0.021,0.165,0.084,0.238,0.354,0.451\r\n\t\tc-0.005,0.012-0.008,0.024-0.01,0.037c-0.034,0.208,0.088,0.323,1.057,1.161c0.495,0.428,1.096,0.948,1.654,1.485\r\n\t\tc-0.151,0.048-0.289,0.113-0.33,0.266c-0.022,0.086,0.02,0.225,0.083,0.288c0.256,0.257,0.87,0.681,1.521,1.13\r\n\t\tc0.417,0.288,0.846,0.583,1.112,0.793c-0.042,0.046-0.077,0.105-0.083,0.186c-0.007,0.077,0.049,0.203,0.105,0.255\r\n\t\tc1.555,1.439,2.943,2.093,3.834,2.388c0.172,0.057,0.356,0.263,0.41,0.459c1.081,3.918,10.227,19.089,15.328,21.731\r\n\t\tc0.168,0.086,0.428,0.289,0.714,0.555c0.385,0.358,1.125,0.794,2.417,0.679l0.032-0.245c0,0,0.001,0,0.001,0l0.014,0.202\r\n\t\tc0,0,0.001,0.022-0.021,0.073c-0.268,0.605-0.444,1.265-0.434,2.518c0.001,0.189-0.119,0.369-0.232,0.427\r\n\t\tc-0.176,0.091-0.265,0.128-0.305,0.143c-0.069-0.046-0.21-0.155-0.386-0.312c-3.696-3.283-11.363-5.292-14.308-5.292\r\n\t\tc-0.6,0-1.012,0.075-1.26,0.231c-0.202,0.128-0.352,0.283-0.444,0.461c-0.069,0.133-0.121,0.3-0.171,0.462\r\n\t\tc-0.05,0.163-0.101,0.331-0.161,0.43c-1.95,3.19-3.532,9.153-5.207,15.465c-1.116,4.204-2.27,8.55-3.576,12.237\r\n\t\tc-0.274,0.618-0.999,1.415-1.639,2.117c-0.716,0.786-1.333,1.464-1.415,1.951c-0.102,0.593-0.513,1.044-1.222,1.341\r\n\t\tc-0.661,0.28-0.963,1.103-1.151,1.789c-0.113,0.421-0.441,0.537-1.062,0.723c-0.712,0.22-1.982,1.624-2.793,3.507\r\n\t\tc-0.209,0.48-0.118,1.304,0.104,1.642c0.111,0.171,0.244,0.207,0.335,0.207c0.305,0,0.42-0.372,0.459-0.495\r\n\t\tc0.321-1.056,0.938-1.363,1.533-1.661c0.19-0.095,0.373-0.186,0.542-0.305c0.077,0.279,0.278,0.385,0.467,0.385\r\n\t\tc0.647,0,1.674-1.289,1.703-2.404c0.008-0.326,0.12-0.39,0.598-0.61c0.103-0.047,0.216-0.099,0.337-0.16\r\n\t\tc0.76-0.379,0.833-0.528,1.401-1.687c0.338-0.695,0.436-0.714,0.613-0.749c0.113-0.022,0.269-0.052,0.472-0.162\r\n\t\tc0.651-0.348,0.801-0.663,1.326-1.937c0.291-0.706,0.183-1.108,0.111-1.374c-0.058-0.212-0.061-0.225,0.188-0.383\r\n\t\tc0.15-0.095,0.266-0.102,0.399-0.109c0.649-0.037,0.926-0.297,1.478-3.078c0.6-3.047,2.252-7.42,3.851-11.648\r\n\t\tc1.853-4.903,3.769-9.974,4.088-13.091c0.01-0.102,0.048-0.102,0.066-0.102c0.016,0,0.042,0.003,0.081,0.019\r\n\t\tc0.068,0.029,0.14,0.056,0.214,0.083c0.311,0.113,0.797,0.186,1.034,0.21c2.148,0.226,2.825,0.709,3.762,1.378\r\n\t\tc1.048,0.749,2.352,1.681,6.092,2.712c0.969,0.186,1.722,0.627,2.41,1.063c0.169,0.107,0.386,0.365,0.545,0.553l0.078,0.091\r\n\t\tc0.239,0.279,0.686,0.625,1.457,0.69c0.181,0.016,0.352,0.146,0.388,0.298c0.121,0.507,0.25,0.939,0.354,1.286\r\n\t\tc0.046,0.155-0.038,0.375-0.184,0.479c-0.51,0.367-0.978,0.808-1.252,1.178c-0.076,0.103-0.142,0.205-0.195,0.289\r\n\t\tc-0.023,0.037-0.043,0.07-0.061,0.095c-0.014,0.004-0.028,0.009-0.042,0.014c-6.985,2.724-13.228,8.825-13.25,11.725\r\n\t\tc0,0.228,0.007,0.426,0.027,0.588c0.015,0.115,0.047,0.25,0.08,0.391c0.043,0.181,0.092,0.385,0.088,0.522\r\n\t\tc-0.051,2.246,0.192,4.977,0.473,8.138c0.467,5.252,1.048,11.788,0.592,19.492c-0.011,0.197-0.163,0.499-0.331,0.66\r\n\t\tc-1.068,1.013-1.96,2.572-1.986,3.477c-0.016,0.675-0.394,1.238-1.122,1.674c-0.675,0.398-0.872,1.336-0.969,2.109\r\n\t\tc-0.062,0.491-0.423,0.683-1.058,0.979c-0.734,0.341-1.894,2.058-2.483,4.237c-0.144,0.53,0.06,1.352,0.33,1.706\r\n\t\tc0.107,0.14,0.229,0.211,0.36,0.211c0.235,0,0.386-0.199,0.447-0.592c0.188-1.211,0.846-1.666,1.425-2.066\r\n\t\tc0.204-0.142,0.401-0.278,0.569-0.441c0.126,0.327,0.367,0.369,0.48,0.369c0.221,0,0.455-0.139,0.698-0.412\r\n\t\tc0.492-0.555,0.937-1.575,0.832-2.449c-0.042-0.372,0.073-0.462,0.568-0.782c0.104-0.067,0.218-0.141,0.342-0.227\r\n\t\tc0.763-0.534,0.817-0.705,1.249-2.042c0.267-0.828,0.375-0.865,0.57-0.934c0.118-0.042,0.279-0.098,0.48-0.247\r\n\t\tc0.654-0.487,0.767-0.85,1.137-2.308c0.136-0.537,0.15-0.924,0.16-1.206c0.019-0.492,0.023-0.624,0.637-0.963\r\n\t\tc0.251-0.139,0.403-0.162,0.495-0.175c0.081-0.012,0.204-0.03,0.278-0.15c0.078-0.128,0.039-0.244-0.026-0.435\r\n\t\tc-0.099-0.291-0.33-0.972-0.584-2.558c-0.46-2.849-0.348-6.972-0.229-11.336c0.158-5.819,0.322-11.836-0.971-14.82\r\n\t\tc-0.078-0.181-0.053-0.452,0.055-0.581c1.484-1.774,3.342-2.684,5.309-3.646c2.129-1.042,4.543-2.224,6.878-4.706\r\n\t\tc0.13-0.141,0.238-0.277,0.328-0.407c0.118-0.172,0.376-0.339,0.574-0.373c0.121-0.021,0.246-0.048,0.371-0.084\r\n\t\tc0.033-0.01,0.066-0.015,0.099-0.015c0.063,0,0.176,0.019,0.219,0.145c0.674,1.979,1.244,3.303,1.694,3.935\r\n\t\tc0.109,0.154,0.202,0.377,0.136,0.543c-0.184,0.459-0.46,1.24-0.734,2.355c-0.216,0.841-0.159,1.625,0.179,2.466\r\n\t\tc0.056,0.139,0.004,0.292-0.122,0.354c-6.32,3.14-9.804,8.339-10.354,15.454c-0.547,7.08,2.009,14.063,3.581,17.595\r\n\t\tc0.255,0.574,0.496,1.172,0.736,1.769c0.709,1.759,1.442,3.577,2.513,4.669c0.13,0.134,0.329,0.429,0.547,0.809\r\n\t\tc0.098,0.17,0.193,0.384,0.312,0.648c0.249,0.551,0.589,1.305,1.219,2.323c0.104,0.175,0.376,0.508,0.663,0.861\r\n\t\tc0.236,0.291,0.481,0.591,0.557,0.713c0.265,0.437,0.4,0.756,0.531,1.064c0.126,0.295,0.244,0.574,0.458,0.919\r\n\t\tc0.145,0.233,0.436,0.488,0.717,0.735c0.189,0.166,0.385,0.337,0.463,0.443c0.874,1.208,1.336,1.754,1.87,2.387\r\n\t\tc0.159,0.188,0.325,0.385,0.512,0.609c0.175,0.212,0.462,0.364,0.807,0.427c0.146,0.026,0.339,0.041,0.544,0.041\r\n\t\ts0.398-0.015,0.544-0.041c0.345-0.062,0.632-0.214,0.807-0.426c0.187-0.225,0.353-0.422,0.512-0.61\r\n\t\tc0.534-0.633,0.996-1.18,1.869-2.386c0.079-0.107,0.274-0.279,0.464-0.445c0.281-0.247,0.572-0.502,0.718-0.736\r\n\t\tc0.213-0.344,0.331-0.623,0.457-0.918c0.131-0.309,0.267-0.628,0.53-1.063c0.076-0.124,0.321-0.424,0.558-0.715\r\n\t\tc0.287-0.353,0.559-0.686,0.661-0.857c0.632-1.021,0.972-1.775,1.221-2.326c0.119-0.265,0.215-0.479,0.312-0.649\r\n\t\tc0.218-0.38,0.417-0.674,0.547-0.808c1.07-1.093,1.804-2.911,2.513-4.67c0.24-0.596,0.481-1.194,0.736-1.769\r\n\t\tc1.572-3.532,4.128-10.516,3.581-17.595c-0.551-7.115-4.034-12.314-10.354-15.454c-0.126-0.062-0.178-0.214-0.121-0.354\r\n\t\tc0.337-0.841,0.394-1.624,0.179-2.463c-0.275-1.118-0.552-1.899-0.735-2.357c-0.066-0.167,0.027-0.391,0.137-0.544\r\n\t\tc0.449-0.632,1.02-1.956,1.693-3.934c0.044-0.127,0.155-0.146,0.219-0.146c0.032,0,0.065,0.005,0.101,0.015\r\n\t\tc0.125,0.036,0.248,0.063,0.369,0.084c0.198,0.034,0.456,0.201,0.574,0.372c0.09,0.131,0.198,0.267,0.33,0.41\r\n\t\tc2.333,2.48,4.747,3.662,6.876,4.704c1.967,0.962,3.824,1.872,5.309,3.646c0.107,0.129,0.133,0.4,0.055,0.581\r\n\t\tc-1.293,2.984-1.129,9.001-0.971,14.82c0.119,4.365,0.231,8.487-0.229,11.337c-0.254,1.585-0.485,2.267-0.584,2.558\r\n\t\tc-0.065,0.191-0.104,0.307-0.026,0.435c0.074,0.121,0.197,0.139,0.278,0.15c0.092,0.013,0.244,0.036,0.495,0.175\r\n\t\tc0.613,0.339,0.618,0.471,0.637,0.963c0.01,0.282,0.024,0.669,0.16,1.207c0.37,1.458,0.482,1.82,1.138,2.307\r\n\t\tc0.2,0.148,0.361,0.205,0.479,0.247c0.195,0.068,0.304,0.106,0.57,0.934c0.432,1.336,0.486,1.508,1.25,2.042\r\n\t\tc0.123,0.085,0.237,0.159,0.341,0.226c0.495,0.32,0.61,0.41,0.568,0.781c-0.104,0.875,0.34,1.896,0.832,2.45\r\n\t\tc0.243,0.273,0.478,0.412,0.698,0.412c0.113,0,0.354-0.041,0.479-0.368c0.167,0.162,0.365,0.298,0.57,0.441\r\n\t\tc0.579,0.4,1.236,0.854,1.425,2.066c0.062,0.393,0.212,0.592,0.447,0.592c0.132,0,0.253-0.071,0.36-0.211\r\n\t\tc0.271-0.354,0.474-1.176,0.33-1.706c-0.59-2.179-1.749-3.896-2.483-4.237c-0.635-0.296-0.996-0.488-1.058-0.98\r\n\t\tc-0.097-0.772-0.294-1.71-0.968-2.107c-0.729-0.437-1.107-1-1.123-1.677c-0.026-0.903-0.918-2.462-1.986-3.475\r\n\t\tc-0.168-0.16-0.319-0.462-0.331-0.66c-0.456-7.704,0.125-14.24,0.592-19.492c0.28-3.162,0.523-5.892,0.473-8.139\r\n\t\tc-0.004-0.135,0.045-0.34,0.088-0.521c0.033-0.14,0.065-0.276,0.08-0.391c0.021-0.163,0.027-0.36,0.027-0.59\r\n\t\tc-0.022-2.898-6.265-8.999-13.256-11.726c-0.012-0.004-0.023-0.008-0.036-0.012c-0.018-0.025-0.037-0.058-0.061-0.095\r\n\t\tc-0.054-0.084-0.119-0.187-0.194-0.289c-0.274-0.37-0.743-0.811-1.254-1.178c-0.146-0.105-0.229-0.324-0.183-0.479\r\n\t\tc0.104-0.348,0.233-0.779,0.354-1.286c0.036-0.152,0.206-0.282,0.388-0.298c0.771-0.066,1.218-0.412,1.457-0.69l0.078-0.091\r\n\t\tc0.159-0.188,0.376-0.445,0.545-0.553c0.688-0.436,1.441-0.877,2.43-1.068c3.721-1.027,5.024-1.959,6.072-2.708\r\n\t\tc0.937-0.669,1.613-1.153,3.762-1.378c0.237-0.025,0.722-0.097,1.033-0.211c0.074-0.027,0.147-0.055,0.215-0.083\r\n\t\tc0.039-0.016,0.065-0.019,0.081-0.019c0.019,0,0.057,0,0.066,0.102c0.319,3.118,2.235,8.188,4.088,13.091\r\n\t\tc1.599,4.229,3.251,8.601,3.851,11.649c0.552,2.78,0.828,3.041,1.478,3.077c0.134,0.007,0.249,0.014,0.399,0.109\r\n\t\tc0.249,0.158,0.246,0.171,0.188,0.383C110.65,99.559,110.542,99.96,110.833,100.667z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n"], null)], null)], null)], null);
clui_om.svg.brittle_icons.auto_ant_icon = clui_om.svg.icons.auto_icon.call(null, clui_om.svg.brittle_icons.ant_svg);
clui_om.svg.brittle_icons.seahorsicon = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "xml:space", "xml:space", -1976466326), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, 
"viewbox", "viewbox", -1545612500), new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "xmlns:xlink", "xmlns:xlink", -316591054), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), new cljs.core.Keyword(null, "height", "height", 
1025178622)], ["0", "preserve", null, "0 0 150 150", "http://www.w3.org/2000/svg", "enable-background:new 0 0 150 150;", "http://www.w3.org/1999/xlink", "Capa_1", "0", "1.1", "0 0 150 150", null]), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M110.607,36.512c-3.133-0.782-6.467-1.218-9.293-2.64c-2.64-1.329-5.051-3.48-6.981-5.762\r\n\t\tc-2.643-3.123-4.304-6.965-8.253-9.087c-1.379-0.741-2.18-3.16-2.575-4.959c-0.414-1.882-1.069-2.621-2.958-2.368\r\n\t\tc-1.139,0.153-2.307,0.168-3.459,0.142c-5.707-0.13-7.319-1.01-9.241-6.077c-0.272-0.717-0.901-0.856-1.442-0.312\r\n\t\tc-0.531,0.534-1.057,1.053-1.563,1.573c-0.535,0.55-1.575,1.174-2.173,1.655c-0.912,0.734-1.398,1.917-0.881,3.4\r\n\t\tc0.032,0.093,0.061,0.185,0.089,0.276c0.047,0.153-0.387,0.682-0.922,1.232c-0.248,0.254-0.486,0.515-0.714,0.781\r\n\t\tc-0.499,0.582-1.285,1.543-1.84,2.073c-0.728,0.695-1.478,1.287-2.328,1.508c-2.704,0.703-2.89,2.03-2.338,3.729\r\n\t\tc0.237,0.729-0.08,1.507-0.805,1.756c-0.546,0.188-1.031,0.378-1.42,0.687c-0.472,0.374-0.863,0.849-1.24,1.342\r\n\t\tc-0.466,0.609-0.236,1.21,0.52,1.345c0.608,0.108,1.217,0.212,1.829,0.294c0.169,0.023,0.387-0.37,0.564-0.355\r\n\t\tc0.388,0.034,0.775,0.088,1.161,0.148c0.639,0.099,0.863,0.638,0.498,1.192c-0.232,0.351-0.482,0.674-0.806,0.879\r\n\t\tc-1.948,1.236-3.961,2.369-6.01,3.544c-0.665,0.382-0.812,1.177-0.337,1.779c2.422,3.07,2.519,3.694,0.893,6.842\r\n\t\tc-0.352,0.681-0.043,1.392,0.654,1.712c2.983,1.371,2.932,3.611,1.265,6.091c-0.428,0.636-0.277,1.381,0.398,1.745\r\n\t\tc2.361,1.274,2.572,1.962,2.614,6.385c0.007,0.767,0.633,1.386,1.392,1.496c3.031,0.441,4.044,2.223,2.333,5.784\r\n\t\tc-0.182,0.378,0.727,1.847,1.204,1.885c3.935,0.32,3.944,2.394,2.617,5.258c-0.083,0.178-0.106,0.384-0.11,0.582\r\n\t\tc-0.007,0.329,0.531,0.928,1.214,1.277c1.306,0.668,2.664,1.263,2.894,2.15c0.098,0.376,0.195,0.753,0.292,1.131\r\n\t\tc0.161,0.625-0.323,1.02-1.077,0.881c-0.628-0.116-1.255-0.232-1.883-0.347c-2.21-0.608-4.5-1.052-7.057-1.593\r\n\t\tc-0.75-0.159-1.231,0.316-1.065,1.065c1.469,6.607,3.563,12.682,8.242,18.365c0.487,0.592,1.058,1.658,1.287,2.39\r\n\t\tc0.057,0.182,0.116,0.364,0.177,0.546c0.243,0.727,0.059,1.706-0.518,2.102c-0.577,0.396-0.838,1.223-0.792,1.988\r\n\t\tc0.171,2.845-2.568,5.029-2.401,7.877c0.047,0.798,0.362,1.913-0.034,2.351c-3.083,3.406-0.449,7.068-0.305,10.473\r\n\t\tc0.15,3.546,1.434,7.267,3.06,10.489c5.375,10.654,20.68,14.855,30.211,8.405c0.635-0.43,1.108-0.831,1.098-0.836\r\n\t\tc-0.009-0.006,0.077-0.05,0.187-0.111c0.067-0.037,0.131-0.077,0.191-0.122c0.308-0.231,0.617-0.463,0.926-0.694\r\n\t\tc0.117-0.09,0.234-0.181,0.351-0.271c0.194-0.15,0.425-0.345,0.51-0.442c0.084-0.097,0.567-0.449,0.938-0.925\r\n\t\tc0.21-0.271,0.41-0.579,0.615-0.901c5.494-8.637,2.014-20.056-7.047-23.006c-3.851-1.254-7.521-0.513-10.411,2.067\r\n\t\tc-2.647,2.364-4.028,5.563-3.138,9.377c0.74,3.173,3.075,4.592,5.859,5.197c3.026,0.658,5.936-0.238,7.64-2.874\r\n\t\tc0.72-1.113,0.672-3.218,0.114-4.498c-0.398-0.913-2.205-1.563-3.428-1.645c-0.559-0.037-1.151,0.413-1.642,1.072\r\n\t\tc-0.458,0.615-0.066,1.262,0.698,1.333c0.302,0.028,0.605,0.057,0.908,0.085c0.764,0.071,1.448,0.413,1.529,0.763\r\n\t\tc0.081,0.35-0.434,0.859-1.135,1.169c-0.877,0.389-1.754,0.761-2.616,0.731c-0.855-0.029-2.431-1.43-2.347-2.029\r\n\t\tc0.2-1.428,0.862-3.382,1.949-3.948c1.406-0.732,4.09-1.07,5.005-0.238c1.698,1.544,3.367,3.997,3.525,6.182\r\n\t\tc0.365,5.057-3.341,8.173-8.745,8.905c-8.402,1.138-14.099-5.545-13.014-14.469c0.613-5.043,3.26-9.062,6.756-12.171\r\n\t\tc0.345-0.307,0.669-0.619,0.975-0.935c0.518-0.537,1.242-0.956,1.659-1.005c0.238-0.028,0.485-0.082,0.742-0.165\r\n\t\tc0.364-0.118,0.724-0.24,1.081-0.366c0.595-0.21,1.674-0.549,2.423-0.713c1.964-0.432,3.835-0.794,5.252-1.796\r\n\t\tc0.579-0.409,0.662-1.519,0.673-2.731c0.007-0.767,0.256-1.963,0.424-2.711c0.195-0.869,0.254-1.757,0.254-2.652\r\n\t\tc0-0.767,0.33-1.892,0.743-2.537c2.033-3.173,3.342-6.718,3.618-10.749c0.278-4.051-0.86-8.2-1.364-12.304\r\n\t\tc-0.181-1.474-0.319-2.957-0.587-4.416c-0.152-0.826-0.497-1.622-0.807-2.412c-0.571-1.455-1.108-2.931-1.795-4.331\r\n\t\tc-0.576-1.175-1.114-2.899-2.078-3.248c-2.244-0.813-3.343-1.906-2.843-4.31c0.477-2.291-0.809-2.895-2.738-2.815\r\n\t\tc-2.417,0.101-3.603-0.907-3.739-3.438c-0.015-0.282-0.191-0.626-0.444-0.949c-0.362-0.462-0.588-1.332-0.713-2.065\r\n\t\tc-0.073-0.426-0.224-0.842-0.418-1.277c-0.065-0.146-0.142-0.28-0.227-0.406c-0.144-0.213,0.111-0.505,0.582-0.71\r\n\t\tc0.292-0.127,0.574-0.262,0.839-0.401c2.26-1.182,4.14-1.191,6.543-0.347c3.958,1.392,8.176,2.034,12.172,3.335\r\n\t\tc2.101,0.684,4.083,1.73,5.698,2.549c0.684,0.347,1.724,0.216,2.324-0.262c1.9-1.515,3.772-2.904,5.37-4.558\r\n\t\tC113.94,38.679,113.234,37.167,110.607,36.512z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n"], null)], null)], null)], null);
clui_om.svg.brittle_icons.seahorse = clui_om.svg.icons.auto_icon.call(null, clui_om.svg.brittle_icons.seahorsicon);
clui_om.svg.brittle_icons.kitty_svg = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "xml:space", "xml:space", -1976466326), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, 
"viewbox", "viewbox", -1545612500), new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "xmlns:xlink", "xmlns:xlink", -316591054), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), new cljs.core.Keyword(null, "height", "height", 
1025178622)], ["0", "preserve", "150", "0 0 150 150", "http://www.w3.org/2000/svg", "enable-background:new 0 0 150 150;", "http://www.w3.org/1999/xlink", "Capa_1", "0", "1.1", "0 0 150 150", "150"]), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "content", "content", 15833224), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\r\n\t", new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "element", "element", 1974019749), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M44.647,84.748c-1.147,4.723-0.337,8.298,2.024,11.334c2.361,3.036-0.27,4.79-2.226,5.735s-2.699,1.552-2.834,2.901\r\n\t\ts1.687,6.612,2.564,7.489c0.877,0.877,2.834,2.766,4.115,4.723c1.282,1.956,2.968,0.675,2.968,0.675c1.214,0.945,2.429,0,2.429,0\r\n\t\tc2.159,1.012,3.441-0.405,3.441-0.405c1.079-1.282-1.214-2.631-1.214-2.631c-1.417-2.496-2.496-0.472-2.901-1.012\r\n\t\tc-0.405-0.54-0.742-0.607-2.901-3.103c-2.159-2.496,3.441-1.687,5.397-2.159c1.956-0.472,5.667-2.968,5.667-2.968\r\n\t\tc0,2.968,1.012,2.496,2.496,4.048s2.159,2.564,4.115,3.373c1.956,0.81,2.901,0.675,4.655,1.822s5.397,0.945,5.397,0.945\r\n\t\tc1.619,0.54,3.171,0,3.171,0c3.913,0,2.294-1.349,0.877-3.171c-1.417-1.822-4.25-0.27-5.532-1.147\r\n\t\tc-1.282-0.877-4.453-2.226-6.072-3.171s0-2.631,0-4.183s1.214-2.766,1.214-2.766h6.274c0,0,4.857-0.337,6.139,2.294\r\n\t\tc1.282,2.631,3.238,3.171,3.306,4.588c0.068,1.417-1.147,1.552-1.147,1.552c-2.699-0.742-2.766,3.576-2.766,3.576\r\n\t\tc3.306,4.385,9.715-1.822,9.715-1.822c7.421-0.675,6.881-11.604,6.881-11.604c1.484-1.079,3.846-3.913,5.397-6.477\r\n\t\tc1.552-2.564,5.937-4.52,9.85-2.631c3.913,1.889,4.588-1.282,4.588-1.282c1.349,0.202,1.754-1.552,1.754-1.552\r\n\t\tc1.754-1.956-1.349-2.429-1.417-7.286s-4.115-5.735-3.913-7.151c0.202-1.417,4.318-5.937,3.306-5.532\r\n\t\tc-0.883,0.353-4.593,2.197-5.522,2.66c-0.031-0.122-0.092-0.296-0.213-0.568c-0.54-1.214-6.477,2.631-6.477,2.631\r\n\t\ts-9.411,5.566-11.233,5.971c-1.822,0.405-1.619-0.81-3.845-0.607c-2.226,0.202-3.34,0.405-13.358-3.846\r\n\t\tc-10.019-4.25-28.266,2.585-28.266,2.585S35.98,53.349,48.123,43.331c12.143-10.018-4.098-18.366-8.045,3.491\r\n\t\tS45.794,80.026,44.647,84.748z"], 
null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "content", "content", 15833224), null], null), "\r\n"], null)], null)], null)], null);
clui_om.svg.brittle_icons.kitty_icon = clui_om.svg.icons.auto_icon.call(null, clui_om.svg.brittle_icons.kitty_svg);
goog.provide("markdown.transformers");
goog.require("cljs.core");
goog.require("clojure.string");
markdown.transformers.heading_QMARK_ = function heading_QMARK_(text, type) {
  if (cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [" ", null], null), null), cljs.core.take.call(null, 4, text))) {
    return null;
  } else {
    var trimmed = cljs.core.truth_(text) ? clojure.string.trim.call(null, text) : null;
    var and__3616__auto__ = cljs.core.not_empty.call(null, trimmed);
    if (cljs.core.truth_(and__3616__auto__)) {
      return cljs.core.every_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([type], true), trimmed);
    } else {
      return and__3616__auto__;
    }
  }
};
markdown.transformers.h1_QMARK_ = function h1_QMARK_(text) {
  return markdown.transformers.heading_QMARK_.call(null, text, "\x3d");
};
markdown.transformers.h2_QMARK_ = function h2_QMARK_(text) {
  return markdown.transformers.heading_QMARK_.call(null, text, "-");
};
markdown.transformers.empty_line = function empty_line(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
    var or__3628__auto__ = markdown.transformers.h1_QMARK_.call(null, text);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return markdown.transformers.h2_QMARK_.call(null, text);
    }
  }()) ? "" : text, cljs.core.truth_(clojure.string.blank_QMARK_.call(null, text)) ? cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "hr", "hr", 1377740067), new cljs.core.Keyword(null, "heading", "heading", -1312171873)) : state], null);
};
markdown.transformers.escape_code = function escape_code(s) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, s, /&/, "\x26amp;"), /\*/, "\x26#42;"), /\^/, "\x26#94;"), /\_/, "\x26#95;"), /\~/, 
  "\x26#126;"), /\</, "\x26lt;"), /\>/, "\x26gt;"), /\[/, "\x26#91;"), /\]/, "\x26#93;"), /\(/, "\x26#40;"), /\)/, "\x26#41;"), /\"/, "\x26quot;");
};
markdown.transformers.escape_link = function() {
  var escape_link__delegate = function(xs) {
    return cljs.core.seq.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.join.call(null, cljs.core.apply.call(null, cljs.core.concat, xs)), /\*/, "\x26#42;"), /\^/, "\x26#94;"), /\_/, "\x26#95;"), /\~/, "\x26#126;"));
  };
  var escape_link = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return escape_link__delegate.call(this, xs);
  };
  escape_link.cljs$lang$maxFixedArity = 0;
  escape_link.cljs$lang$applyTo = function(arglist__28259) {
    var xs = cljs.core.seq(arglist__28259);
    return escape_link__delegate(xs);
  };
  escape_link.cljs$core$IFn$_invoke$arity$variadic = escape_link__delegate;
  return escape_link;
}();
markdown.transformers.escaped_chars = function escaped_chars(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
    var or__3628__auto__ = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }()) ? text : clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, 
  text, /\\\\/, "\x26#92;"), /\\`/, "\x26#8216;"), /\\\*/, "\x26#42;"), /\\_/, "\x26#95;"), /\\\{/, "\x26#123;"), /\\\}/, "\x26#125;"), /\\\[/, "\x26#91;"), /\\\]/, "\x26#93;"), /\\\(/, "\x26#40;"), /\\\)/, "\x26#41;"), /\\#/, "\x26#35;"), /\\\+/, "\x26#43;"), /\\-/, "\x26#45;"), /\\\./, "\x26#46;"), /\\!/, "\x26#33;"), state], null);
};
markdown.transformers.separator = function separator(escape_QMARK_, text, open, close, separator__$1, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var out = cljs.core.PersistentVector.EMPTY;
    var buf = cljs.core.PersistentVector.EMPTY;
    var tokens = cljs.core.partition_by.call(null, cljs.core.partial.call(null, cljs.core._EQ_, cljs.core.first.call(null, separator__$1)), cljs.core.seq.call(null, text));
    var cur_state = cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), false);
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, tokens)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, cljs.core.into.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "found-token", "found-token", 113525576)).cljs$core$IFn$_invoke$arity$1(cur_state)) ? cljs.core.into.call(null, out, separator__$1) : out, buf)), cljs.core.dissoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576))], null);
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "found-token", "found-token", 113525576)).cljs$core$IFn$_invoke$arity$1(cur_state))) {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, tokens), separator__$1)) {
            var G__28260 = cljs.core.vec.call(null, cljs.core.concat.call(null, out, cljs.core.seq.call(null, open), cljs.core.truth_(escape_QMARK_) ? cljs.core.seq.call(null, markdown.transformers.escape_code.call(null, clojure.string.join.call(null, buf))) : buf, cljs.core.seq.call(null, close)));
            var G__28261 = cljs.core.PersistentVector.EMPTY;
            var G__28262 = cljs.core.rest.call(null, tokens);
            var G__28263 = cljs.core.assoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), false);
            out = G__28260;
            buf = G__28261;
            tokens = G__28262;
            cur_state = G__28263;
            continue;
          } else {
            var G__28264 = out;
            var G__28265 = cljs.core.into.call(null, buf, cljs.core.first.call(null, tokens));
            var G__28266 = cljs.core.rest.call(null, tokens);
            var G__28267 = cur_state;
            out = G__28264;
            buf = G__28265;
            tokens = G__28266;
            cur_state = G__28267;
            continue;
          }
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, tokens), separator__$1)) {
            var G__28268 = out;
            var G__28269 = buf;
            var G__28270 = cljs.core.rest.call(null, tokens);
            var G__28271 = cljs.core.assoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), true);
            out = G__28268;
            buf = G__28269;
            tokens = G__28270;
            cur_state = G__28271;
            continue;
          } else {
            var G__28272 = cljs.core.into.call(null, out, cljs.core.first.call(null, tokens));
            var G__28273 = buf;
            var G__28274 = cljs.core.rest.call(null, tokens);
            var G__28275 = cur_state;
            out = G__28272;
            buf = G__28273;
            tokens = G__28274;
            cur_state = G__28275;
            continue;
          }
        }
      }
      break;
    }
  }
};
markdown.transformers.strong = function strong(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cstrong\x3e", "\x3c/strong\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["*", "*"], null), state);
};
markdown.transformers.bold = function bold(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cb\x3e", "\x3c/b\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["_", "_"], null), state);
};
markdown.transformers.em = function em(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cem\x3e", "\x3c/em\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["*"], null), state);
};
markdown.transformers.italics = function italics(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3ci\x3e", "\x3c/i\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["_"], null), state);
};
markdown.transformers.inline_code = function inline_code(text, state) {
  return markdown.transformers.separator.call(null, true, text, "\x3ccode\x3e", "\x3c/code\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`"], null), state);
};
markdown.transformers.strikethrough = function strikethrough(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cdel\x3e", "\x3c/del\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["~", "~"], null), state);
};
markdown.transformers.superscript = function superscript(text, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var tokens = cljs.core.partition_by.call(null, cljs.core.partial.call(null, cljs.core.contains_QMARK_, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "^", null], null), null)), text);
    var buf = cljs.core.PersistentVector.EMPTY;
    var remaining = tokens;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, remaining)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, buf), state], null);
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.first.call(null, remaining), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["^"], null))) {
          var G__28276 = cljs.core.into.call(null, buf, cljs.core.concat.call(null, cljs.core.seq.call(null, "\x3csup\x3e"), cljs.core.second.call(null, remaining), cljs.core.seq.call(null, "\x3c/sup\x3e")));
          var G__28277 = cljs.core.drop.call(null, 2, remaining);
          buf = G__28276;
          remaining = G__28277;
          continue;
        } else {
          var G__28278 = cljs.core.into.call(null, buf, cljs.core.first.call(null, remaining));
          var G__28279 = cljs.core.rest.call(null, remaining);
          buf = G__28278;
          remaining = G__28279;
          continue;
        }
      }
      break;
    }
  }
};
markdown.transformers.heading_text = function heading_text(heading, text) {
  return clojure.string.trim.call(null, clojure.string.join.call(null, cljs.core.drop_while.call(null, function(p1__28280_SHARP_) {
    return cljs.core._EQ_.call(null, "#", p1__28280_SHARP_) || cljs.core._EQ_.call(null, " ", p1__28280_SHARP_);
  }, text)));
};
markdown.transformers.heading_level = function heading_level(text) {
  var num_hashes = cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__28281_SHARP_) {
    return cljs.core.not_EQ_.call(null, " ", p1__28281_SHARP_);
  }, cljs.core.take_while.call(null, function(p1__28282_SHARP_) {
    return cljs.core._EQ_.call(null, "#", p1__28282_SHARP_) || cljs.core._EQ_.call(null, " ", p1__28282_SHARP_);
  }, cljs.core.seq.call(null, text))));
  if (num_hashes > 0) {
    return num_hashes;
  } else {
    return null;
  }
};
markdown.transformers.make_heading = function make_heading(text, heading_anchors) {
  var temp__4124__auto__ = markdown.transformers.heading_level.call(null, text);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var heading = temp__4124__auto__;
    var text__$1 = markdown.transformers.heading_text.call(null, heading, text);
    return[cljs.core.str("\x3ch"), cljs.core.str(heading), cljs.core.str("\x3e"), cljs.core.str(cljs.core.truth_(heading_anchors) ? [cljs.core.str('\x3ca name\x3d"'), cljs.core.str(clojure.string.replace.call(null, clojure.string.lower_case.call(null, text__$1), " ", "\x26#95;")), cljs.core.str('"\x3e\x3c/a\x3e')].join("") : null), cljs.core.str(text__$1), cljs.core.str("\x3c/h"), cljs.core.str(heading), cljs.core.str("\x3e")].join("");
  } else {
    return null;
  }
};
markdown.transformers.heading = function heading(text, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(markdown.transformers.h1_QMARK_.call(null, markdown.transformers._STAR_next_line_STAR_))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3ch1\x3e"), cljs.core.str(text), cljs.core.str("\x3c/h1\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
    } else {
      if (cljs.core.truth_(markdown.transformers.h2_QMARK_.call(null, markdown.transformers._STAR_next_line_STAR_))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3ch2\x3e"), cljs.core.str(text), cljs.core.str("\x3c/h2\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
      } else {
        var temp__4124__auto__ = markdown.transformers.make_heading.call(null, text, (new cljs.core.Keyword(null, "heading-anchors", "heading-anchors", 1713527866)).cljs$core$IFn$_invoke$arity$1(state));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var heading__$1 = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [heading__$1, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.br = function br(text, p__28283) {
  var map__28285 = p__28283;
  var map__28285__$1 = cljs.core.seq_QMARK_.call(null, map__28285) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28285) : map__28285;
  var state = map__28285__$1;
  var lists = cljs.core.get.call(null, map__28285__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var code = cljs.core.get.call(null, map__28285__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", " "], null), cljs.core.take_last.call(null, 2, text)) && cljs.core.not.call(null, function() {
    var or__3628__auto__ = code;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return lists;
    }
  }()) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.drop_last.call(null, 2, text))), cljs.core.str("\x3cbr /\x3e")].join("") : text, state], null);
};
markdown.transformers.autourl_transformer = function autourl_transformer(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state)) ? text : clojure.string.replace.call(null, text, /<https?:\/\/[-A-Za-z0-9+&@#\/%?=~_()|!:,.;]*[-A-Za-z0-9+&@#\/%=~_()|]>/, function(p1__28286_SHARP_) {
    var url = cljs.core.subs.call(null, p1__28286_SHARP_, 1, cljs.core.count.call(null, p1__28286_SHARP_) - 1);
    return[cljs.core.str('\x3ca href\x3d"'), cljs.core.str(url), cljs.core.str('"\x3e'), cljs.core.str(url), cljs.core.str("\x3c/a\x3e")].join("");
  }), state], null);
};
markdown.transformers.autoemail_transformer = function autoemail_transformer(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
    var or__3628__auto__ = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }()) ? text : clojure.string.replace.call(null, text, /<[\w._%+-]+@[\w.-]+\.[\w]{2,4}>/, function(p1__28287_SHARP_) {
    var encoded = cljs.core.truth_((new cljs.core.Keyword(null, "clojurescript", "clojurescript", -299769403)).cljs$core$IFn$_invoke$arity$1(state)) ? cljs.core.subs.call(null, p1__28287_SHARP_, 1, cljs.core.count.call(null, p1__28287_SHARP_) - 1) : cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(c) {
      if (cljs.core.rand.call(null) > .5) {
        return markdown.transformers.formatter.call(null, "\x26#x%02x;", c | 0);
      } else {
        return c;
      }
    }, cljs.core.subs.call(null, p1__28287_SHARP_, 1, cljs.core.count.call(null, p1__28287_SHARP_) - 1)));
    return[cljs.core.str('\x3ca href\x3d"mailto:'), cljs.core.str(encoded), cljs.core.str('"\x3e'), cljs.core.str(encoded), cljs.core.str("\x3c/a\x3e")].join("");
  }), state], null);
};
markdown.transformers.paragraph_text = function paragraph_text(last_line_empty_QMARK_, text) {
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = cljs.core.not.call(null, last_line_empty_QMARK_);
    if (and__3616__auto__) {
      return cljs.core.not_empty.call(null, text);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return[cljs.core.str(" "), cljs.core.str(text)].join("");
  } else {
    return text;
  }
};
markdown.transformers.paragraph = function paragraph(text, p__28288) {
  var map__28290 = p__28288;
  var map__28290__$1 = cljs.core.seq_QMARK_.call(null, map__28290) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28290) : map__28290;
  var state = map__28290__$1;
  var last_line_empty_QMARK_ = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527));
  var paragraph_QMARK_ = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "paragraph?", "paragraph?", -1478391066));
  var blockquote = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190));
  var lists = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var code = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var hr = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "hr", "hr", 1377740067));
  var heading = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "heading", "heading", -1312171873));
  var eof = cljs.core.get.call(null, map__28290__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = heading;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      var or__3628__auto____$1 = hr;
      if (cljs.core.truth_(or__3628__auto____$1)) {
        return or__3628__auto____$1;
      } else {
        var or__3628__auto____$2 = code;
        if (cljs.core.truth_(or__3628__auto____$2)) {
          return or__3628__auto____$2;
        } else {
          var or__3628__auto____$3 = lists;
          if (cljs.core.truth_(or__3628__auto____$3)) {
            return or__3628__auto____$3;
          } else {
            return blockquote;
          }
        }
      }
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(paragraph_QMARK_)) {
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = eof;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return cljs.core.empty_QMARK_.call(null, clojure.string.trim.call(null, text));
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.paragraph_text.call(null, last_line_empty_QMARK_, text)), cljs.core.str("\x3c/p\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "paragraph?", "paragraph?", -1478391066), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.paragraph_text.call(null, last_line_empty_QMARK_, text), state], null);
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = cljs.core.not.call(null, eof);
        if (and__3616__auto__) {
          return last_line_empty_QMARK_;
        } else {
          return and__3616__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cp\x3e"), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "paragraph?", "paragraph?", -1478391066), true, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    }
  }
};
markdown.transformers.code = function code(text, p__28291) {
  var map__28293 = p__28291;
  var map__28293__$1 = cljs.core.seq_QMARK_.call(null, map__28293) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28293) : map__28293;
  var state = map__28293__$1;
  var codeblock = cljs.core.get.call(null, map__28293__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code__$1 = cljs.core.get.call(null, map__28293__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var lists = cljs.core.get.call(null, map__28293__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var eof = cljs.core.get.call(null, map__28293__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = lists;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return codeblock;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(code__$1)) {
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = eof;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, "    ", clojure.string.join.call(null, cljs.core.take.call(null, 4, text)));
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n\x3c/pre\x3e"), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n"), cljs.core.str(markdown.transformers.escape_code.call(null, clojure.string.replace_first.call(null, text, /    /, "")))].join(""), state], null);
      }
    } else {
      if (cljs.core.empty_QMARK_.call(null, clojure.string.trim.call(null, text))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      } else {
        var num_spaces = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
        if (num_spaces > 3) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cpre\x3e\n"), cljs.core.str(markdown.transformers.escape_code.call(null, clojure.string.replace_first.call(null, text, /    /, "")))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), true)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.codeblock = function codeblock(text, state) {
  var trimmed = clojure.string.trim.call(null, text);
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take.call(null, 3, trimmed));
    if (and__3616__auto__) {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n\x3c/pre\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.drop.call(null, 3, trimmed)))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
  } else {
    if (cljs.core.truth_(function() {
      var and__3616__auto__ = cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take_last.call(null, 3, trimmed));
      if (and__3616__auto__) {
        return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
      } else {
        return and__3616__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n\x3c/pre\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.drop_last.call(null, 3, trimmed)))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take.call(null, 3, trimmed))) {
        var vec__28295 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), cljs.core.drop.call(null, 3, trimmed));
        var lang = cljs.core.nth.call(null, vec__28295, 0, null);
        var code = cljs.core.nth.call(null, vec__28295, 1, null);
        var s = cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, code));
        var formatter = (new cljs.core.Keyword(null, "code-style", "code-style", -2144009586)).cljs$core$IFn$_invoke$arity$1(state);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cpre"), cljs.core.str(cljs.core.truth_(cljs.core.not_empty.call(null, lang)) ? [cljs.core.str(" "), cljs.core.str(cljs.core.truth_(formatter) ? formatter.call(null, clojure.string.join.call(null, lang)) : [cljs.core.str('class\x3d"brush: '), cljs.core.str(clojure.string.join.call(null, lang)), cljs.core.str('"')].join(""))].join("") : null), cljs.core.str("\x3e"), cljs.core.str(markdown.transformers.escape_code.call(null, 
        cljs.core.empty_QMARK_.call(null, s) ? s : [cljs.core.str("\n"), cljs.core.str(s)].join("")))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), true, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), true)], null);
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n"), cljs.core.str(markdown.transformers.escape_code.call(null, text))].join(""), state], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.hr = function hr(text, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if ((cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "*", null], null), null), text)) || cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "-", null], null), null), text)) || cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, 
    new cljs.core.PersistentArrayMap(null, 2, [" ", null, "_", null], null), null), text))) && cljs.core.count.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [" ", null], null), null), text)) > 2) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3chr/\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "hr", "hr", 1377740067), true)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
    }
  }
};
markdown.transformers.blockquote = function blockquote(text, p__28296) {
  var map__28298 = p__28296;
  var map__28298__$1 = cljs.core.seq_QMARK_.call(null, map__28298) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28298) : map__28298;
  var state = map__28298__$1;
  var lists = cljs.core.get.call(null, map__28298__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var codeblock = cljs.core.get.call(null, map__28298__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__28298__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var eof = cljs.core.get.call(null, map__28298__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = code;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      var or__3628__auto____$1 = codeblock;
      if (cljs.core.truth_(or__3628__auto____$1)) {
        return or__3628__auto____$1;
      } else {
        return lists;
      }
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190)).cljs$core$IFn$_invoke$arity$1(state))) {
      if (cljs.core.truth_(function() {
        var or__3628__auto__ = eof;
        if (cljs.core.truth_(or__3628__auto__)) {
          return or__3628__auto__;
        } else {
          return cljs.core.empty_QMARK_.call(null, clojure.string.trim.call(null, text));
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\x3c/p\x3e\x3c/blockquote\x3e", cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), false)], null);
      } else {
        if (cljs.core.truth_(text.startsWith("\x3e-"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/p\x3e\x3cfooter\x3e"), cljs.core.str(text.substring(2)), cljs.core.str("\x3c/footer\x3e\x3cp\x3e")].join(""), state], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(text), cljs.core.str(" ")].join(""), state], null);
        }
      }
    } else {
      if (cljs.core._EQ_.call(null, "\x3e", cljs.core.first.call(null, text))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cblockquote\x3e\x3cp\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.rest.call(null, text))), cljs.core.str(" ")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), true)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    }
  }
};
markdown.transformers.href = function href(title, link) {
  return markdown.transformers.escape_link.call(null, cljs.core.seq.call(null, "\x3ca href\x3d'"), link, cljs.core.seq.call(null, "'\x3e"), title, cljs.core.seq.call(null, "\x3c/a\x3e"));
};
markdown.transformers.img = function() {
  var img__delegate = function(alt, url, p__28299) {
    var vec__28301 = p__28299;
    var title = cljs.core.nth.call(null, vec__28301, 0, null);
    return markdown.transformers.escape_link.call(null, cljs.core.seq.call(null, '\x3cimg src\x3d"'), url, cljs.core.seq.call(null, '" alt\x3d"'), alt, cljs.core.truth_(cljs.core.not_empty.call(null, title)) ? cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.str, '" title\x3d', clojure.string.join.call(null, title), " /\x3e")) : cljs.core.seq.call(null, '" /\x3e'));
  };
  var img = function(alt, url, var_args) {
    var p__28299 = null;
    if (arguments.length > 2) {
      p__28299 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return img__delegate.call(this, alt, url, p__28299);
  };
  img.cljs$lang$maxFixedArity = 2;
  img.cljs$lang$applyTo = function(arglist__28302) {
    var alt = cljs.core.first(arglist__28302);
    arglist__28302 = cljs.core.next(arglist__28302);
    var url = cljs.core.first(arglist__28302);
    var p__28299 = cljs.core.rest(arglist__28302);
    return img__delegate(alt, url, p__28299);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
markdown.transformers.handle_img_link = function handle_img_link(xs) {
  if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "!", "["], null), cljs.core.take.call(null, 3, xs))) {
    var xs__$1 = cljs.core.drop.call(null, 3, xs);
    var vec__28306 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "]"), xs__$1);
    var alt = cljs.core.nth.call(null, vec__28306, 0, null);
    var xy = cljs.core.nth.call(null, vec__28306, 1, null);
    var vec__28307 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, ")"), cljs.core.drop.call(null, 2, xy));
    var url_title = cljs.core.nth.call(null, vec__28307, 0, null);
    var zy = cljs.core.nth.call(null, vec__28307, 1, null);
    var vec__28308 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), url_title);
    var url = cljs.core.nth.call(null, vec__28308, 0, null);
    var title = cljs.core.nth.call(null, vec__28308, 1, null);
    return cljs.core.concat.call(null, "[", markdown.transformers.img.call(null, alt, url, cljs.core.not_empty.call(null, title)), cljs.core.rest.call(null, zy));
  } else {
    return xs;
  }
};
markdown.transformers.link = function link(text, p__28309) {
  var map__28316 = p__28309;
  var map__28316__$1 = cljs.core.seq_QMARK_.call(null, map__28316) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28316) : map__28316;
  var state = map__28316__$1;
  var codeblock = cljs.core.get.call(null, map__28316__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__28316__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  if (cljs.core.truth_(function() {
    var or__3628__auto__ = code;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return codeblock;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var out = cljs.core.PersistentVector.EMPTY;
    var tokens = cljs.core.seq.call(null, text);
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, tokens)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, out), state], null);
      } else {
        var vec__28317 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "["), tokens);
        var head = cljs.core.nth.call(null, vec__28317, 0, null);
        var xs = cljs.core.nth.call(null, vec__28317, 1, null);
        var xs__$1 = markdown.transformers.handle_img_link.call(null, xs);
        var vec__28318 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "]"), xs__$1);
        var title = cljs.core.nth.call(null, vec__28318, 0, null);
        var ys = cljs.core.nth.call(null, vec__28318, 1, null);
        var vec__28319 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "("), ys);
        var dud = cljs.core.nth.call(null, vec__28319, 0, null);
        var zs = cljs.core.nth.call(null, vec__28319, 1, null);
        var vec__28320 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, ")"), zs);
        var link__$1 = cljs.core.nth.call(null, vec__28320, 0, null);
        var tail = cljs.core.nth.call(null, vec__28320, 1, null);
        if (cljs.core.count.call(null, link__$1) < 2 || cljs.core.count.call(null, tail) < 1 || cljs.core.count.call(null, dud) > 1) {
          var G__28322 = cljs.core.concat.call(null, out, head, title, dud, link__$1);
          var G__28323 = tail;
          out = G__28322;
          tokens = G__28323;
          continue;
        } else {
          var G__28324 = cljs.core.into.call(null, out, cljs.core._EQ_.call(null, cljs.core.last.call(null, head), "!") ? function() {
            var alt = cljs.core.rest.call(null, title);
            var vec__28321 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), cljs.core.rest.call(null, link__$1));
            var url = cljs.core.nth.call(null, vec__28321, 0, null);
            var title__$1 = cljs.core.nth.call(null, vec__28321, 1, null);
            var title__$2 = clojure.string.join.call(null, cljs.core.rest.call(null, title__$1));
            return cljs.core.concat.call(null, cljs.core.butlast.call(null, head), markdown.transformers.img.call(null, alt, url, title__$2));
          }() : cljs.core.concat.call(null, head, markdown.transformers.href.call(null, cljs.core.rest.call(null, title), cljs.core.rest.call(null, link__$1))));
          var G__28325 = cljs.core.rest.call(null, tail);
          out = G__28324;
          tokens = G__28325;
          continue;
        }
      }
      break;
    }
  }
};
markdown.transformers.close_lists = function close_lists(lists) {
  return clojure.string.join.call(null, function() {
    var iter__4384__auto__ = function iter__28334(s__28335) {
      return new cljs.core.LazySeq(null, function() {
        var s__28335__$1 = s__28335;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__28335__$1);
          if (temp__4126__auto__) {
            var s__28335__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28335__$2)) {
              var c__4382__auto__ = cljs.core.chunk_first.call(null, s__28335__$2);
              var size__4383__auto__ = cljs.core.count.call(null, c__4382__auto__);
              var b__28337 = cljs.core.chunk_buffer.call(null, size__4383__auto__);
              if (function() {
                var i__28336 = 0;
                while (true) {
                  if (i__28336 < size__4383__auto__) {
                    var vec__28340 = cljs.core._nth.call(null, c__4382__auto__, i__28336);
                    var list_type = cljs.core.nth.call(null, vec__28340, 0, null);
                    cljs.core.chunk_append.call(null, b__28337, [cljs.core.str("\x3c/li\x3e\x3c/"), cljs.core.str(cljs.core.name.call(null, list_type)), cljs.core.str("\x3e")].join(""));
                    var G__28342 = i__28336 + 1;
                    i__28336 = G__28342;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28337), iter__28334.call(null, cljs.core.chunk_rest.call(null, s__28335__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28337), null);
              }
            } else {
              var vec__28341 = cljs.core.first.call(null, s__28335__$2);
              var list_type = cljs.core.nth.call(null, vec__28341, 0, null);
              return cljs.core.cons.call(null, [cljs.core.str("\x3c/li\x3e\x3c/"), cljs.core.str(cljs.core.name.call(null, list_type)), cljs.core.str("\x3e")].join(""), iter__28334.call(null, cljs.core.rest.call(null, s__28335__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4384__auto__.call(null, lists);
  }());
};
markdown.transformers.add_row = function add_row(row_type, list_type, num_indents, indents, content, state) {
  if (cljs.core.truth_(list_type)) {
    if (num_indents < indents) {
      var lists_to_close = cljs.core.take_while.call(null, function(p1__28343_SHARP_) {
        return cljs.core.second.call(null, p1__28343_SHARP_) > num_indents;
      }, cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state)));
      var remaining_lists = cljs.core.vec.call(null, cljs.core.drop_last.call(null, cljs.core.count.call(null, lists_to_close), (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state)));
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.str, markdown.transformers.close_lists.call(null, lists_to_close), "\x3c/li\x3e\x3cli\x3e", content), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), num_indents > cljs.core.second.call(null, cljs.core.last.call(null, remaining_lists)) ? cljs.core.conj.call(null, remaining_lists, new cljs.core.PersistentVector(null, 2, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [row_type, num_indents], null)) : remaining_lists)], null);
    } else {
      if (num_indents > indents) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, row_type)), cljs.core.str("\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lists", "lists", -884730684)], null), cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [row_type, num_indents], null))], null);
      } else {
        if (cljs.core._EQ_.call(null, num_indents, indents)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/li\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), state], null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, row_type)), cljs.core.str("\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row_type, 
    num_indents], null)], null))], null);
  }
};
markdown.transformers.ul = function ul(text, state) {
  var vec__28345 = cljs.core.last.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state));
  var list_type = cljs.core.nth.call(null, vec__28345, 0, null);
  var indents = cljs.core.nth.call(null, vec__28345, 1, null);
  var num_indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
  var content = clojure.string.trim.call(null, markdown.transformers._STAR_substring_STAR_.call(null, text, num_indents + 1));
  return markdown.transformers.add_row.call(null, new cljs.core.Keyword(null, "ul", "ul", -1349521403), list_type, num_indents, indents, function() {
    var or__3628__auto__ = markdown.transformers.make_heading.call(null, content, false);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return content;
    }
  }(), state);
};
markdown.transformers.ol = function ol(text, state) {
  var vec__28347 = cljs.core.last.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state));
  var list_type = cljs.core.nth.call(null, vec__28347, 0, null);
  var indents = cljs.core.nth.call(null, vec__28347, 1, null);
  var num_indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
  var content = clojure.string.trim.call(null, clojure.string.join.call(null, cljs.core.drop_while.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), clojure.string.trim.call(null, text))));
  return markdown.transformers.add_row.call(null, new cljs.core.Keyword(null, "ol", "ol", 932524051), list_type, num_indents, indents, function() {
    var or__3628__auto__ = markdown.transformers.make_heading.call(null, content, false);
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return content;
    }
  }(), state);
};
markdown.transformers.li = function li(text, p__28348) {
  var map__28350 = p__28348;
  var map__28350__$1 = cljs.core.seq_QMARK_.call(null, map__28350) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28350) : map__28350;
  var state = map__28350__$1;
  var lists = cljs.core.get.call(null, map__28350__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var eof = cljs.core.get.call(null, map__28350__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var last_line_empty_QMARK_ = cljs.core.get.call(null, map__28350__$1, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527));
  var codeblock = cljs.core.get.call(null, map__28350__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__28350__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = last_line_empty_QMARK_;
    if (cljs.core.truth_(and__3616__auto__)) {
      return clojure.string.blank_QMARK_.call(null, text);
    } else {
      return and__3616__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists))), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
  } else {
    if (cljs.core.truth_(function() {
      var or__3628__auto__ = code;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return codeblock;
      }
    }())) {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = lists;
        if (cljs.core.truth_(and__3616__auto__)) {
          var or__3628__auto__ = last_line_empty_QMARK_;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return eof;
          }
        } else {
          return and__3616__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists))), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__3616__auto__ = cljs.core.not.call(null, eof);
        if (and__3616__auto__) {
          var and__3616__auto____$1 = lists;
          if (cljs.core.truth_(and__3616__auto____$1)) {
            return clojure.string.blank_QMARK_.call(null, text);
          } else {
            return and__3616__auto____$1;
          }
        } else {
          return and__3616__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), true)], null);
      } else {
        var indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
        var trimmed = clojure.string.trim.call(null, text);
        if (cljs.core.truth_(cljs.core.re_find.call(null, /^[\*\+-] /, trimmed))) {
          return markdown.transformers.ul.call(null, text, state);
        } else {
          if (cljs.core.truth_(cljs.core.re_find.call(null, /^[0-9]+\./, trimmed))) {
            return markdown.transformers.ol.call(null, text, state);
          } else {
            if (indents > 0) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
            } else {
              if (cljs.core.truth_(function() {
                var and__3616__auto__ = function() {
                  var or__3628__auto__ = eof;
                  if (cljs.core.truth_(or__3628__auto__)) {
                    return or__3628__auto__;
                  } else {
                    return last_line_empty_QMARK_;
                  }
                }();
                if (cljs.core.truth_(and__3616__auto__)) {
                  return cljs.core.not_empty.call(null, lists);
                } else {
                  return and__3616__auto__;
                }
              }())) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists)), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "buf", "buf", -213913340), text)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
              }
            }
          }
        }
      }
    }
  }
};
markdown.transformers.transformer_vector = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.empty_line, markdown.transformers.codeblock, markdown.transformers.code, markdown.transformers.escaped_chars, markdown.transformers.inline_code, markdown.transformers.autoemail_transformer, markdown.transformers.autourl_transformer, markdown.transformers.link, markdown.transformers.hr, markdown.transformers.li, markdown.transformers.heading, markdown.transformers.italics, 
markdown.transformers.em, markdown.transformers.strong, markdown.transformers.bold, markdown.transformers.strikethrough, markdown.transformers.superscript, markdown.transformers.blockquote, markdown.transformers.paragraph, markdown.transformers.br], null);
goog.provide("clui_om.page_delta");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("cljs.core.async");
goog.require("clojure.string");
clui_om.page_delta.colors = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "red", "red", -969428204), "#FF0000", new cljs.core.Keyword(null, "green", "green", -945526839), "#00FF00", new cljs.core.Keyword(null, "blue", "blue", -622100620), "#0000FF", new cljs.core.Keyword(null, "orange", "orange", 73816386), "#CC6600", new cljs.core.Keyword(null, "yellow", "yellow", -881035449), "#CCCC00", new cljs.core.Keyword(null, "purple", "purple", -876021126), "#CC00CC"], null);
clui_om.page_delta.glyphs = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "tree", "tree", -196312028), new cljs.core.Keyword(null, "bars", "bars", -586907130), new cljs.core.Keyword(null, "phone", "phone", -763596057), new cljs.core.Keyword(null, "tower", "tower", 1202578472), new cljs.core.Keyword(null, "cloud", "cloud", -1976521303), new cljs.core.Keyword(null, "flag", "flag", 1088647881), new cljs.core.Keyword(null, "book", "book", -918152214), new cljs.core.Keyword(null, 
"magnet", "magnet", 585093324), new cljs.core.Keyword(null, "leaf", "leaf", 1306118732), new cljs.core.Keyword(null, "glass", "glass", 1652756718), new cljs.core.Keyword(null, "cog", "cog", 1782475608), new cljs.core.Keyword(null, "tag", "tag", -1290361223)], ["tree-conifer", "stats", "phone-alt", "tower", "cloud", "flag", "book", "magnet", "leaf", "glass", "cog", "tag"]);
clui_om.page_delta.sizes = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "small", "small", 2133478704), .8, new cljs.core.Keyword(null, "medium", "medium", -1864319384), 1, new cljs.core.Keyword(null, "large", "large", -196820544), 1.5, new cljs.core.Keyword(null, "jumbo", "jumbo", -96576959), 2], null);
clui_om.page_delta.random_icon = function random_icon() {
  var rand_color = cljs.core.rand_nth.call(null, cljs.core.keys.call(null, clui_om.page_delta.colors));
  var rand_size = cljs.core.rand_nth.call(null, cljs.core.keys.call(null, clui_om.page_delta.sizes));
  var rand_glyph = cljs.core.rand_nth.call(null, cljs.core.keys.call(null, clui_om.page_delta.glyphs));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), rand_color, new cljs.core.Keyword(null, "size", "size", 1098693007), rand_size, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117), rand_glyph, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), false, new cljs.core.Keyword(null, "entering", "entering", -413471949), true], null);
};
clui_om.page_delta.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "greeting", "greeting", 462222107), "Hello Delta!", new cljs.core.Keyword(null, "sizes", "sizes", -273528126), clui_om.page_delta.sizes, new cljs.core.Keyword(null, "size", "size", 1098693007), cljs.core.first.call(null, cljs.core.keys.call(null, clui_om.page_delta.sizes)), new cljs.core.Keyword(null, "colors", "colors", 1157174732), clui_om.page_delta.colors, new cljs.core.Keyword(null, 
"color", "color", 1011675173), cljs.core.first.call(null, cljs.core.keys.call(null, clui_om.page_delta.colors)), new cljs.core.Keyword(null, "glyphs", "glyphs", -533936706), clui_om.page_delta.glyphs, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117), cljs.core.first.call(null, cljs.core.keys.call(null, clui_om.page_delta.glyphs)), new cljs.core.Keyword(null, "icons", "icons", -297140977), cljs.core.vec.call(null, cljs.core.take.call(null, 20, cljs.core.repeatedly.call(null, clui_om.page_delta.random_icon)))], 
null));
clui_om.page_delta.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.page_delta.icon_outer_props = function icon_outer_props(p__17638, state) {
  var map__17640 = p__17638;
  var map__17640__$1 = cljs.core.seq_QMARK_.call(null, map__17640) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17640) : map__17640;
  var exiting = cljs.core.get.call(null, map__17640__$1, new cljs.core.Keyword(null, "exiting", "exiting", 1968554212));
  var entering = cljs.core.get.call(null, map__17640__$1, new cljs.core.Keyword(null, "entering", "entering", -413471949));
  var enter = cljs.core.truth_(entering) ? " enterLeft" : null;
  var exit = cljs.core.truth_(exiting) ? " exitLeft" : null;
  var stable = cljs.core.not.call(null, entering) && cljs.core.not.call(null, exiting) ? " onStage" : null;
  return cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), [cljs.core.str("iconOuter"), cljs.core.str(enter), cljs.core.str(exit), cljs.core.str(stable)].join("")], null));
};
clui_om.page_delta.icon_inner_style = function icon_inner_style(p__17641, state) {
  var map__17643 = p__17641;
  var map__17643__$1 = cljs.core.seq_QMARK_.call(null, map__17643) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17643) : map__17643;
  var pinned = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339));
  var color = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var size = cljs.core.get.call(null, map__17643__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  var hovering = state.call(null, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
  var htmlcolor = color.call(null, clui_om.page_delta.colors);
  var startsize = size.call(null, clui_om.page_delta.sizes);
  var final_size = cljs.core.truth_(function() {
    var or__3628__auto__ = pinned;
    if (cljs.core.truth_(or__3628__auto__)) {
      return or__3628__auto__;
    } else {
      return hovering;
    }
  }()) ? 3 * startsize : startsize;
  var final_background = cljs.core.truth_(pinned) ? htmlcolor : "transparent";
  var final_color = cljs.core.truth_(pinned) ? "#000000" : htmlcolor;
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "border", "border", 1444987323), [cljs.core.str(final_size), cljs.core.str("px solid "), cljs.core.str(final_color)].join(""), new cljs.core.Keyword(null, "backgroundColor", "backgroundColor", 1738438491), final_background], null);
};
clui_om.page_delta.icon_style = function icon_style(p__17644, state) {
  var map__17646 = p__17644;
  var map__17646__$1 = cljs.core.seq_QMARK_.call(null, map__17646) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17646) : map__17646;
  var pinned = cljs.core.get.call(null, map__17646__$1, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339));
  var color = cljs.core.get.call(null, map__17646__$1, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var size = cljs.core.get.call(null, map__17646__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  var hovering = state.call(null, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
  var htmlcolor = color.call(null, clui_om.page_delta.colors);
  var fontsize = size.call(null, clui_om.page_delta.sizes);
  var final_color = cljs.core.truth_(pinned) ? "#000000" : htmlcolor;
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), final_color, new cljs.core.Keyword(null, "fontSize", "fontSize", 919623033), [cljs.core.str(fontsize), cljs.core.str("em")].join("")], null);
};
clui_om.page_delta.icon_classes = function icon_classes(p__17647, state) {
  var map__17649 = p__17647;
  var map__17649__$1 = cljs.core.seq_QMARK_.call(null, map__17649) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17649) : map__17649;
  var glyph = cljs.core.get.call(null, map__17649__$1, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117));
  var hovering = state.call(null, new cljs.core.Keyword(null, "hovering", "hovering", -571536091));
  var final_glyph = clui_om.page_delta.glyphs.call(null, glyph);
  var final_anim = cljs.core.truth_(hovering) ? "pulse" : "bigEntrance";
  return[cljs.core.str("glyphicon glyphicon-"), cljs.core.str(final_glyph), cljs.core.str(" "), cljs.core.str(final_anim)].join("");
};
clui_om.page_delta.sprite_dims = function sprite_dims(x, y, w, h) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", -384071477), w, new cljs.core.Keyword(null, "minWidth", "minWidth", -204293526), w, new cljs.core.Keyword(null, "height", "height", 1025178622), h, new cljs.core.Keyword(null, "minHeight", "minHeight", -1635998980), h, new cljs.core.Keyword(null, "left", "left", -399115937), x, new cljs.core.Keyword(null, "top", "top", -1856271961), y, new cljs.core.Keyword(null, "position", "position", -2011731912), 
  "absolute"], null);
};
clui_om.page_delta.generate_new_icon = function generate_new_icon(app) {
  var new_color = (new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(app);
  var new_size = (new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(app);
  var new_glyph = (new cljs.core.Keyword(null, "glyph", "glyph", 2119448117)).cljs$core$IFn$_invoke$arity$1(app);
  var msg = [cljs.core.str("(new-icon):: using "), cljs.core.str(new_color), cljs.core.str(", "), cljs.core.str(new_glyph), cljs.core.str(", "), cljs.core.str(new_size)].join("");
  console.log(msg);
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), new_color, new cljs.core.Keyword(null, "size", "size", 1098693007), new_size, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117), new_glyph, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), false, new cljs.core.Keyword(null, "entering", "entering", -413471949), true], null);
};
clui_om.page_delta.update_pinned = function update_pinned(icons, kw, new$) {
  return cljs.core.mapv.call(null, function(p1__17650_SHARP_) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "pinned", "pinned", -1216085339)).cljs$core$IFn$_invoke$arity$1(p1__17650_SHARP_))) {
      return cljs.core.assoc.call(null, p1__17650_SHARP_, kw, new$);
    } else {
      return p1__17650_SHARP_;
    }
  }, icons);
};
clui_om.page_delta.icon = function icon(cursor, owner, opts) {
  if (typeof clui_om.page_delta.t17722 !== "undefined") {
  } else {
    clui_om.page_delta.t17722 = function(opts, owner, cursor, icon, meta17723) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.icon = icon;
      this.meta17723 = meta17723;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_delta.t17722.prototype.om$core$IRenderState$ = true;
    clui_om.page_delta.t17722.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__17725) {
      var self__ = this;
      var map__17726 = p__17725;
      var map__17726__$1 = cljs.core.seq_QMARK_.call(null, map__17726) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17726) : map__17726;
      var state = map__17726__$1;
      var out = cljs.core.get.call(null, map__17726__$1, new cljs.core.Keyword(null, "out", "out", -910545517));
      var over = cljs.core.get.call(null, map__17726__$1, new cljs.core.Keyword(null, "over", "over", 192553051));
      var clicks = cljs.core.get.call(null, map__17726__$1, new cljs.core.Keyword(null, "clicks", "clicks", 673274951));
      var ___$1 = this;
      return React.DOM.div(clui_om.page_delta.icon_outer_props.call(null, self__.cursor, state), React.DOM.div(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "className", "className", -1983287057), "iconInner", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(___$1, map__17726, map__17726__$1, state, out, over, clicks) {
        return function(p1__17651_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, clicks, p1__17651_SHARP_);
        };
      }(___$1, map__17726, map__17726__$1, state, out, over, clicks), new cljs.core.Keyword(null, "onMouseOver", "onMouseOver", 1787360977), function(___$1, map__17726, map__17726__$1, state, out, over, clicks) {
        return function(p1__17652_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, over, p1__17652_SHARP_);
        };
      }(___$1, map__17726, map__17726__$1, state, out, over, clicks), new cljs.core.Keyword(null, "onMouseOut", "onMouseOut", 1953812864), function(___$1, map__17726, map__17726__$1, state, out, over, clicks) {
        return function(p1__17653_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, out, p1__17653_SHARP_);
        };
      }(___$1, map__17726, map__17726__$1, state, out, over, clicks), new cljs.core.Keyword(null, "style", "style", -496642736), clui_om.page_delta.icon_inner_style.call(null, self__.cursor, state)], null)), React.DOM.div({"className":"iconCell"}, React.DOM.span(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), clui_om.page_delta.icon_classes.call(null, self__.cursor, state), new cljs.core.Keyword(null, "style", 
      "style", -496642736), clui_om.page_delta.icon_style.call(null, self__.cursor, state)], null))))));
    };
    clui_om.page_delta.t17722.prototype.om$core$IWillMount$ = true;
    clui_om.page_delta.t17722.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var clicks = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "clicks", "clicks", 673274951));
      var over = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "over", "over", 192553051));
      var out = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "out", "out", -910545517));
      var c__6508__auto___17790 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___17790, clicks, over, out, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___17790, clicks, over, out, ___$1) {
              return function(state_17738) {
                var state_val_17739 = state_17738[1];
                if (state_val_17739 === 4) {
                  var inst_17729 = state_17738[2];
                  var inst_17730 = cljs.core.deref.call(null, self__.cursor);
                  var inst_17731 = (new cljs.core.Keyword(null, "pinned", "pinned", -1216085339)).cljs$core$IFn$_invoke$arity$1(inst_17730);
                  var inst_17732 = cljs.core.not.call(null, inst_17731);
                  var inst_17733 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), inst_17732);
                  var state_17738__$1 = function() {
                    var statearr_17740 = state_17738;
                    statearr_17740[7] = inst_17729;
                    statearr_17740[8] = inst_17733;
                    return statearr_17740;
                  }();
                  var statearr_17741_17791 = state_17738__$1;
                  statearr_17741_17791[2] = null;
                  statearr_17741_17791[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17739 === 3) {
                    var inst_17736 = state_17738[2];
                    var state_17738__$1 = state_17738;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17738__$1, inst_17736);
                  } else {
                    if (state_val_17739 === 2) {
                      var state_17738__$1 = state_17738;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17738__$1, 4, clicks);
                    } else {
                      if (state_val_17739 === 1) {
                        var state_17738__$1 = state_17738;
                        var statearr_17742_17792 = state_17738__$1;
                        statearr_17742_17792[2] = null;
                        statearr_17742_17792[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___17790, clicks, over, out, ___$1);
            return function(switch__6493__auto__, c__6508__auto___17790, clicks, over, out, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_17746 = [null, null, null, null, null, null, null, null, null];
                  statearr_17746[0] = state_machine__6494__auto__;
                  statearr_17746[1] = 1;
                  return statearr_17746;
                };
                var state_machine__6494__auto____1 = function(state_17738) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_17738);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e17747) {
                        if (e17747 instanceof Object) {
                          var ex__6497__auto__ = e17747;
                          var statearr_17748_17793 = state_17738;
                          statearr_17748_17793[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17738);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e17747;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__17794 = state_17738;
                      state_17738 = G__17794;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_17738) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_17738);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___17790, clicks, over, out, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_17749 = f__6509__auto__.call(null);
            statearr_17749[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___17790;
            return statearr_17749;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___17790, clicks, over, out, ___$1));
      var c__6508__auto___17795 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___17795, clicks, over, out, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___17795, clicks, over, out, ___$1) {
              return function(state_17758) {
                var state_val_17759 = state_17758[1];
                if (state_val_17759 === 4) {
                  var inst_17752 = state_17758[2];
                  var inst_17753 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), true);
                  var state_17758__$1 = function() {
                    var statearr_17760 = state_17758;
                    statearr_17760[7] = inst_17752;
                    statearr_17760[8] = inst_17753;
                    return statearr_17760;
                  }();
                  var statearr_17761_17796 = state_17758__$1;
                  statearr_17761_17796[2] = null;
                  statearr_17761_17796[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17759 === 3) {
                    var inst_17756 = state_17758[2];
                    var state_17758__$1 = state_17758;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17758__$1, inst_17756);
                  } else {
                    if (state_val_17759 === 2) {
                      var state_17758__$1 = state_17758;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17758__$1, 4, over);
                    } else {
                      if (state_val_17759 === 1) {
                        var state_17758__$1 = state_17758;
                        var statearr_17762_17797 = state_17758__$1;
                        statearr_17762_17797[2] = null;
                        statearr_17762_17797[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___17795, clicks, over, out, ___$1);
            return function(switch__6493__auto__, c__6508__auto___17795, clicks, over, out, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_17766 = [null, null, null, null, null, null, null, null, null];
                  statearr_17766[0] = state_machine__6494__auto__;
                  statearr_17766[1] = 1;
                  return statearr_17766;
                };
                var state_machine__6494__auto____1 = function(state_17758) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_17758);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e17767) {
                        if (e17767 instanceof Object) {
                          var ex__6497__auto__ = e17767;
                          var statearr_17768_17798 = state_17758;
                          statearr_17768_17798[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17758);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e17767;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__17799 = state_17758;
                      state_17758 = G__17799;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_17758) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_17758);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___17795, clicks, over, out, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_17769 = f__6509__auto__.call(null);
            statearr_17769[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___17795;
            return statearr_17769;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___17795, clicks, over, out, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, clicks, over, out, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, clicks, over, out, ___$1) {
              return function(state_17778) {
                var state_val_17779 = state_17778[1];
                if (state_val_17779 === 4) {
                  var inst_17772 = state_17778[2];
                  var inst_17773 = om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false);
                  var state_17778__$1 = function() {
                    var statearr_17780 = state_17778;
                    statearr_17780[7] = inst_17772;
                    statearr_17780[8] = inst_17773;
                    return statearr_17780;
                  }();
                  var statearr_17781_17800 = state_17778__$1;
                  statearr_17781_17800[2] = null;
                  statearr_17781_17800[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17779 === 3) {
                    var inst_17776 = state_17778[2];
                    var state_17778__$1 = state_17778;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17778__$1, inst_17776);
                  } else {
                    if (state_val_17779 === 2) {
                      var state_17778__$1 = state_17778;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17778__$1, 4, out);
                    } else {
                      if (state_val_17779 === 1) {
                        var state_17778__$1 = state_17778;
                        var statearr_17782_17801 = state_17778__$1;
                        statearr_17782_17801[2] = null;
                        statearr_17782_17801[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, clicks, over, out, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, clicks, over, out, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_17786 = [null, null, null, null, null, null, null, null, null];
                  statearr_17786[0] = state_machine__6494__auto__;
                  statearr_17786[1] = 1;
                  return statearr_17786;
                };
                var state_machine__6494__auto____1 = function(state_17778) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_17778);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e17787) {
                        if (e17787 instanceof Object) {
                          var ex__6497__auto__ = e17787;
                          var statearr_17788_17802 = state_17778;
                          statearr_17788_17802[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17778);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e17787;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__17803 = state_17778;
                      state_17778 = G__17803;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_17778) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_17778);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, clicks, over, out, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_17789 = f__6509__auto__.call(null);
            statearr_17789[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_17789;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, clicks, over, out, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_delta.t17722.prototype.om$core$IInitState$ = true;
    clui_om.page_delta.t17722.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "hovering", "hovering", -571536091), false, new cljs.core.Keyword(null, "clicks", "clicks", 673274951), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "over", "over", 192553051), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "out", "out", -910545517), cljs.core.async.chan.call(null)], null);
    };
    clui_om.page_delta.t17722.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17724) {
      var self__ = this;
      var _17724__$1 = this;
      return self__.meta17723;
    };
    clui_om.page_delta.t17722.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17724, meta17723__$1) {
      var self__ = this;
      var _17724__$1 = this;
      return new clui_om.page_delta.t17722(self__.opts, self__.owner, self__.cursor, self__.icon, meta17723__$1);
    };
    clui_om.page_delta.t17722.cljs$lang$type = true;
    clui_om.page_delta.t17722.cljs$lang$ctorStr = "clui-om.page-delta/t17722";
    clui_om.page_delta.t17722.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-delta/t17722");
    };
    clui_om.page_delta.__GT_t17722 = function __GT_t17722(opts__$1, owner__$1, cursor__$1, icon__$1, meta17723) {
      return new clui_om.page_delta.t17722(opts__$1, owner__$1, cursor__$1, icon__$1, meta17723);
    };
  }
  return new clui_om.page_delta.t17722(opts, owner, cursor, icon, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 94, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 176, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 138, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_delta.cljs"], 
  null));
};
clui_om.page_delta.parse_choice = function parse_choice(e, channel) {
  var choice = e.target.value;
  var kw = cljs.core.keyword.call(null, choice);
  console.log([cljs.core.str("(fn parse-choice):: "), cljs.core.str(kw)].join(""));
  return cljs.core.async.put_BANG_.call(null, channel, kw);
};
clui_om.page_delta.chooser = function chooser(choices, owner, p__17806) {
  var map__17811 = p__17806;
  var map__17811__$1 = cljs.core.seq_QMARK_.call(null, map__17811) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17811) : map__17811;
  var channel = cljs.core.get.call(null, map__17811__$1, new cljs.core.Keyword(null, "channel", "channel", 734187692));
  if (typeof clui_om.page_delta.t17812 !== "undefined") {
  } else {
    clui_om.page_delta.t17812 = function(channel, map__17811, p__17806, owner, choices, chooser, meta17813) {
      this.channel = channel;
      this.map__17811 = map__17811;
      this.p__17806 = p__17806;
      this.owner = owner;
      this.choices = choices;
      this.chooser = chooser;
      this.meta17813 = meta17813;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_delta.t17812.prototype.om$core$IRender$ = true;
    clui_om.page_delta.t17812.prototype.om$core$IRender$render$arity$1 = function(map__17811, map__17811__$1, channel) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.apply.call(null, om.dom.select, {"onChange":function(___$1, map__17811, map__17811__$1, channel) {
          return function(p1__17804_SHARP_) {
            return clui_om.page_delta.parse_choice.call(null, p1__17804_SHARP_, self__.channel);
          };
        }(___$1, map__17811, map__17811__$1, channel)}, cljs.core.map.call(null, function(___$1, map__17811, map__17811__$1, channel) {
          return function(p1__17805_SHARP_) {
            return om.dom.option.call(null, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.name.call(null, p1__17805_SHARP_)], null)), clojure.string.capitalize.call(null, cljs.core.name.call(null, p1__17805_SHARP_)));
          };
        }(___$1, map__17811, map__17811__$1, channel), cljs.core.keys.call(null, self__.choices)));
      };
    }(map__17811, map__17811__$1, channel);
    clui_om.page_delta.t17812.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17811, map__17811__$1, channel) {
      return function(_17814) {
        var self__ = this;
        var _17814__$1 = this;
        return self__.meta17813;
      };
    }(map__17811, map__17811__$1, channel);
    clui_om.page_delta.t17812.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17811, map__17811__$1, channel) {
      return function(_17814, meta17813__$1) {
        var self__ = this;
        var _17814__$1 = this;
        return new clui_om.page_delta.t17812(self__.channel, self__.map__17811, self__.p__17806, self__.owner, self__.choices, self__.chooser, meta17813__$1);
      };
    }(map__17811, map__17811__$1, channel);
    clui_om.page_delta.t17812.cljs$lang$type = true;
    clui_om.page_delta.t17812.cljs$lang$ctorStr = "clui-om.page-delta/t17812";
    clui_om.page_delta.t17812.cljs$lang$ctorPrWriter = function(map__17811, map__17811__$1, channel) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-delta/t17812");
      };
    }(map__17811, map__17811__$1, channel);
    clui_om.page_delta.__GT_t17812 = function(map__17811, map__17811__$1, channel) {
      return function __GT_t17812(channel__$1, map__17811__$2, p__17806__$1, owner__$1, choices__$1, chooser__$1, meta17813) {
        return new clui_om.page_delta.t17812(channel__$1, map__17811__$2, p__17806__$1, owner__$1, choices__$1, chooser__$1, meta17813);
      };
    }(map__17811, map__17811__$1, channel);
  }
  return new clui_om.page_delta.t17812(channel, map__17811__$1, p__17806, owner, choices, chooser, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 37, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 196, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 190, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_delta.cljs"], 
  null));
};
clui_om.page_delta.toolbar = function toolbar(cursor, owner, opts) {
  if (typeof clui_om.page_delta.t18026 !== "undefined") {
  } else {
    clui_om.page_delta.t18026 = function(opts, owner, cursor, toolbar, meta18027) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.toolbar = toolbar;
      this.meta18027 = meta18027;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_delta.t18026.prototype.om$core$IRenderState$ = true;
    clui_om.page_delta.t18026.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__18029) {
      var self__ = this;
      var map__18030 = p__18029;
      var map__18030__$1 = cljs.core.seq_QMARK_.call(null, map__18030) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18030) : map__18030;
      var none_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "none-chan", "none-chan", -1282466006));
      var all_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "all-chan", "all-chan", -875476141));
      var del_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "del-chan", "del-chan", -1918627367));
      var add_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "add-chan", "add-chan", -2024929221));
      var rand_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "rand-chan", "rand-chan", 1192373235));
      var size_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "size-chan", "size-chan", -406343470));
      var color_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "color-chan", "color-chan", -232607946));
      var glyph_chan = cljs.core.get.call(null, map__18030__$1, new cljs.core.Keyword(null, "glyph-chan", "glyph-chan", 1397449693));
      var ___$1 = this;
      return React.DOM.div({"className":"toolbar"}, om.core.build.call(null, clui_om.page_delta.chooser, (new cljs.core.Keyword(null, "glyphs", "glyphs", -533936706)).cljs$core$IFn$_invoke$arity$1(self__.cursor), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "channel", "channel", 734187692), glyph_chan], null)], null)), om.core.build.call(null, clui_om.page_delta.chooser, (new cljs.core.Keyword(null, 
      "colors", "colors", 1157174732)).cljs$core$IFn$_invoke$arity$1(self__.cursor), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "channel", "channel", 734187692), color_chan], null)], null)), om.core.build.call(null, clui_om.page_delta.chooser, (new cljs.core.Keyword(null, "sizes", "sizes", -273528126)).cljs$core$IFn$_invoke$arity$1(self__.cursor), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "channel", "channel", 734187692), size_chan], null)], null)), React.DOM.button({"onClick":function(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan) {
        return function(p1__17824_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, add_chan, p1__17824_SHARP_);
        };
      }(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan)}, "Add"), React.DOM.button({"onClick":function(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan) {
        return function(p1__17825_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, rand_chan, p1__17825_SHARP_);
        };
      }(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan)}, "Rand"), React.DOM.button(function() {
        var disabled = cljs.core._EQ_.call(null, 0, cljs.core.count.call(null, cljs.core.filter.call(null, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), (new cljs.core.Keyword(null, "icons", "icons", -297140977)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
        var base = disabled ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), true, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#CCCCCC"], null)], null) : null;
        return cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, base, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(disabled, base, ___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan) {
          return function(p1__17826_SHARP_) {
            return cljs.core.async.put_BANG_.call(null, del_chan, p1__17826_SHARP_);
          };
        }(disabled, base, ___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan)], null)));
      }(), "Delete"), React.DOM.button({"onClick":function(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan) {
        return function(p1__17827_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, all_chan, p1__17827_SHARP_);
        };
      }(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan)}, "All"), React.DOM.button({"onClick":function(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan) {
        return function(p1__17828_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, none_chan, p1__17828_SHARP_);
        };
      }(___$1, map__18030, map__18030__$1, none_chan, all_chan, del_chan, add_chan, rand_chan, size_chan, color_chan, glyph_chan)}, "None"));
    };
    clui_om.page_delta.t18026.prototype.om$core$IWillMount$ = true;
    clui_om.page_delta.t18026.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var map__18031 = om.core.get_state.call(null, self__.owner);
      var map__18031__$1 = cljs.core.seq_QMARK_.call(null, map__18031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18031) : map__18031;
      var none_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "none-chan", "none-chan", -1282466006));
      var all_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "all-chan", "all-chan", -875476141));
      var del_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "del-chan", "del-chan", -1918627367));
      var rand_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "rand-chan", "rand-chan", 1192373235));
      var add_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "add-chan", "add-chan", -2024929221));
      var size_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "size-chan", "size-chan", -406343470));
      var color_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "color-chan", "color-chan", -232607946));
      var glyph_chan = cljs.core.get.call(null, map__18031__$1, new cljs.core.Keyword(null, "glyph-chan", "glyph-chan", 1397449693));
      var c__6508__auto___18223 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18044) {
                var state_val_18045 = state_18044[1];
                if (state_val_18045 === 4) {
                  var inst_18034 = state_18044[2];
                  var inst_18035 = [cljs.core.str(inst_18034)].join("");
                  var inst_18036 = console.log("(toolbar):: glyph choice: ", inst_18035);
                  var inst_18037 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117), inst_18034);
                  var inst_18038 = function() {
                    var choice = inst_18034;
                    return function(choice, inst_18034, inst_18035, inst_18036, inst_18037, state_val_18045, c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17815_SHARP_) {
                        return clui_om.page_delta.update_pinned.call(null, p1__17815_SHARP_, new cljs.core.Keyword(null, "glyph", "glyph", 2119448117), choice);
                      };
                    }(choice, inst_18034, inst_18035, inst_18036, inst_18037, state_val_18045, c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18039 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18038);
                  var state_18044__$1 = function() {
                    var statearr_18046 = state_18044;
                    statearr_18046[7] = inst_18037;
                    statearr_18046[8] = inst_18039;
                    statearr_18046[9] = inst_18036;
                    return statearr_18046;
                  }();
                  var statearr_18047_18224 = state_18044__$1;
                  statearr_18047_18224[2] = null;
                  statearr_18047_18224[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18045 === 3) {
                    var inst_18042 = state_18044[2];
                    var state_18044__$1 = state_18044;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18044__$1, inst_18042);
                  } else {
                    if (state_val_18045 === 2) {
                      var state_18044__$1 = state_18044;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18044__$1, 4, glyph_chan);
                    } else {
                      if (state_val_18045 === 1) {
                        var state_18044__$1 = state_18044;
                        var statearr_18048_18225 = state_18044__$1;
                        statearr_18048_18225[2] = null;
                        statearr_18048_18225[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18052 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_18052[0] = state_machine__6494__auto__;
                  statearr_18052[1] = 1;
                  return statearr_18052;
                };
                var state_machine__6494__auto____1 = function(state_18044) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18044);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18053) {
                        if (e18053 instanceof Object) {
                          var ex__6497__auto__ = e18053;
                          var statearr_18054_18226 = state_18044;
                          statearr_18054_18226[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18044);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18053;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18227 = state_18044;
                      state_18044 = G__18227;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18044) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18044);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18055 = f__6509__auto__.call(null);
            statearr_18055[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18223;
            return statearr_18055;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18223, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18228 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18068) {
                var state_val_18069 = state_18068[1];
                if (state_val_18069 === 4) {
                  var inst_18058 = state_18068[2];
                  var inst_18059 = [cljs.core.str(inst_18058)].join("");
                  var inst_18060 = console.log("(toolbar):: color choice: ", inst_18059);
                  var inst_18061 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "color", "color", 1011675173), inst_18058);
                  var inst_18062 = function() {
                    var choice = inst_18058;
                    return function(choice, inst_18058, inst_18059, inst_18060, inst_18061, state_val_18069, c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17816_SHARP_) {
                        return clui_om.page_delta.update_pinned.call(null, p1__17816_SHARP_, new cljs.core.Keyword(null, "color", "color", 1011675173), choice);
                      };
                    }(choice, inst_18058, inst_18059, inst_18060, inst_18061, state_val_18069, c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18063 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18062);
                  var state_18068__$1 = function() {
                    var statearr_18070 = state_18068;
                    statearr_18070[7] = inst_18063;
                    statearr_18070[8] = inst_18061;
                    statearr_18070[9] = inst_18060;
                    return statearr_18070;
                  }();
                  var statearr_18071_18229 = state_18068__$1;
                  statearr_18071_18229[2] = null;
                  statearr_18071_18229[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18069 === 3) {
                    var inst_18066 = state_18068[2];
                    var state_18068__$1 = state_18068;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18068__$1, inst_18066);
                  } else {
                    if (state_val_18069 === 2) {
                      var state_18068__$1 = state_18068;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18068__$1, 4, color_chan);
                    } else {
                      if (state_val_18069 === 1) {
                        var state_18068__$1 = state_18068;
                        var statearr_18072_18230 = state_18068__$1;
                        statearr_18072_18230[2] = null;
                        statearr_18072_18230[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18076 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_18076[0] = state_machine__6494__auto__;
                  statearr_18076[1] = 1;
                  return statearr_18076;
                };
                var state_machine__6494__auto____1 = function(state_18068) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18068);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18077) {
                        if (e18077 instanceof Object) {
                          var ex__6497__auto__ = e18077;
                          var statearr_18078_18231 = state_18068;
                          statearr_18078_18231[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18068);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18077;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18232 = state_18068;
                      state_18068 = G__18232;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18068) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18068);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18079 = f__6509__auto__.call(null);
            statearr_18079[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18228;
            return statearr_18079;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18228, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18233 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18092) {
                var state_val_18093 = state_18092[1];
                if (state_val_18093 === 4) {
                  var inst_18082 = state_18092[2];
                  var inst_18083 = [cljs.core.str(inst_18082)].join("");
                  var inst_18084 = console.log("(toolbar):: size choice: ", inst_18083);
                  var inst_18085 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "size", "size", 1098693007), inst_18082);
                  var inst_18086 = function() {
                    var choice = inst_18082;
                    return function(choice, inst_18082, inst_18083, inst_18084, inst_18085, state_val_18093, c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17817_SHARP_) {
                        return clui_om.page_delta.update_pinned.call(null, p1__17817_SHARP_, new cljs.core.Keyword(null, "size", "size", 1098693007), choice);
                      };
                    }(choice, inst_18082, inst_18083, inst_18084, inst_18085, state_val_18093, c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18087 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18086);
                  var state_18092__$1 = function() {
                    var statearr_18094 = state_18092;
                    statearr_18094[7] = inst_18087;
                    statearr_18094[8] = inst_18084;
                    statearr_18094[9] = inst_18085;
                    return statearr_18094;
                  }();
                  var statearr_18095_18234 = state_18092__$1;
                  statearr_18095_18234[2] = null;
                  statearr_18095_18234[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18093 === 3) {
                    var inst_18090 = state_18092[2];
                    var state_18092__$1 = state_18092;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18092__$1, inst_18090);
                  } else {
                    if (state_val_18093 === 2) {
                      var state_18092__$1 = state_18092;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18092__$1, 4, size_chan);
                    } else {
                      if (state_val_18093 === 1) {
                        var state_18092__$1 = state_18092;
                        var statearr_18096_18235 = state_18092__$1;
                        statearr_18096_18235[2] = null;
                        statearr_18096_18235[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18100 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_18100[0] = state_machine__6494__auto__;
                  statearr_18100[1] = 1;
                  return statearr_18100;
                };
                var state_machine__6494__auto____1 = function(state_18092) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18092);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18101) {
                        if (e18101 instanceof Object) {
                          var ex__6497__auto__ = e18101;
                          var statearr_18102_18236 = state_18092;
                          statearr_18102_18236[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18092);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18101;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18237 = state_18092;
                      state_18092 = G__18237;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18092) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18092);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18103 = f__6509__auto__.call(null);
            statearr_18103[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18233;
            return statearr_18103;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18233, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18238 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18116) {
                var state_val_18117 = state_18116[1];
                if (state_val_18117 === 4) {
                  var inst_18106 = state_18116[2];
                  var inst_18107 = cljs.core.deref.call(null, self__.cursor);
                  var inst_18108 = clui_om.page_delta.generate_new_icon.call(null, inst_18107);
                  var inst_18109 = console.log("(toolbar):: user clicked add");
                  var inst_18110 = function() {
                    var new_icon = inst_18108;
                    var ___$2 = inst_18106;
                    return function(new_icon, ___$2, inst_18106, inst_18107, inst_18108, inst_18109, state_val_18117, c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17818_SHARP_) {
                        return cljs.core.conj.call(null, p1__17818_SHARP_, new_icon);
                      };
                    }(new_icon, ___$2, inst_18106, inst_18107, inst_18108, inst_18109, state_val_18117, c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18111 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18110);
                  var state_18116__$1 = function() {
                    var statearr_18118 = state_18116;
                    statearr_18118[7] = inst_18111;
                    statearr_18118[8] = inst_18109;
                    return statearr_18118;
                  }();
                  var statearr_18119_18239 = state_18116__$1;
                  statearr_18119_18239[2] = null;
                  statearr_18119_18239[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18117 === 3) {
                    var inst_18114 = state_18116[2];
                    var state_18116__$1 = state_18116;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18116__$1, inst_18114);
                  } else {
                    if (state_val_18117 === 2) {
                      var state_18116__$1 = state_18116;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18116__$1, 4, add_chan);
                    } else {
                      if (state_val_18117 === 1) {
                        var state_18116__$1 = state_18116;
                        var statearr_18120_18240 = state_18116__$1;
                        statearr_18120_18240[2] = null;
                        statearr_18120_18240[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18124 = [null, null, null, null, null, null, null, null, null];
                  statearr_18124[0] = state_machine__6494__auto__;
                  statearr_18124[1] = 1;
                  return statearr_18124;
                };
                var state_machine__6494__auto____1 = function(state_18116) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18116);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18125) {
                        if (e18125 instanceof Object) {
                          var ex__6497__auto__ = e18125;
                          var statearr_18126_18241 = state_18116;
                          statearr_18126_18241[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18116);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18125;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18242 = state_18116;
                      state_18116 = G__18242;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18116) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18116);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18127 = f__6509__auto__.call(null);
            statearr_18127[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18238;
            return statearr_18127;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18238, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18243 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18139) {
                var state_val_18140 = state_18139[1];
                if (state_val_18140 === 4) {
                  var inst_18130 = state_18139[2];
                  var inst_18131 = clui_om.page_delta.random_icon.call(null);
                  var inst_18132 = console.log("(toolbar):: user clicked random");
                  var inst_18133 = function() {
                    var new_icon = inst_18131;
                    var ___$2 = inst_18130;
                    return function(new_icon, ___$2, inst_18130, inst_18131, inst_18132, state_val_18140, c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17819_SHARP_) {
                        return cljs.core.conj.call(null, p1__17819_SHARP_, new_icon);
                      };
                    }(new_icon, ___$2, inst_18130, inst_18131, inst_18132, state_val_18140, c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18134 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18133);
                  var state_18139__$1 = function() {
                    var statearr_18141 = state_18139;
                    statearr_18141[7] = inst_18134;
                    statearr_18141[8] = inst_18132;
                    return statearr_18141;
                  }();
                  var statearr_18142_18244 = state_18139__$1;
                  statearr_18142_18244[2] = null;
                  statearr_18142_18244[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18140 === 3) {
                    var inst_18137 = state_18139[2];
                    var state_18139__$1 = state_18139;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18139__$1, inst_18137);
                  } else {
                    if (state_val_18140 === 2) {
                      var state_18139__$1 = state_18139;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18139__$1, 4, rand_chan);
                    } else {
                      if (state_val_18140 === 1) {
                        var state_18139__$1 = state_18139;
                        var statearr_18143_18245 = state_18139__$1;
                        statearr_18143_18245[2] = null;
                        statearr_18143_18245[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18147 = [null, null, null, null, null, null, null, null, null];
                  statearr_18147[0] = state_machine__6494__auto__;
                  statearr_18147[1] = 1;
                  return statearr_18147;
                };
                var state_machine__6494__auto____1 = function(state_18139) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18139);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18148) {
                        if (e18148 instanceof Object) {
                          var ex__6497__auto__ = e18148;
                          var statearr_18149_18246 = state_18139;
                          statearr_18149_18246[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18139);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18148;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18247 = state_18139;
                      state_18139 = G__18247;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18139) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18139);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18150 = f__6509__auto__.call(null);
            statearr_18150[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18243;
            return statearr_18150;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18243, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18248 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18166) {
                var state_val_18167 = state_18166[1];
                if (state_val_18167 === 5) {
                  var inst_18153 = state_18166[7];
                  var inst_18159 = state_18166[2];
                  var inst_18160 = function() {
                    var ___$2 = inst_18153;
                    return function(___$2, inst_18153, inst_18159, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(p1__17821_SHARP_) {
                        return cljs.core.filterv.call(null, cljs.core.complement.call(null, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339)), p1__17821_SHARP_);
                      };
                    }(___$2, inst_18153, inst_18159, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18161 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18160);
                  var state_18166__$1 = function() {
                    var statearr_18168 = state_18166;
                    statearr_18168[8] = inst_18159;
                    statearr_18168[9] = inst_18161;
                    return statearr_18168;
                  }();
                  var statearr_18169_18249 = state_18166__$1;
                  statearr_18169_18249[2] = null;
                  statearr_18169_18249[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18167 === 4) {
                    var inst_18153 = state_18166[7];
                    var inst_18153__$1 = state_18166[2];
                    var inst_18154 = console.log("(toolbar):: user clicked del");
                    var inst_18155 = function() {
                      var ___$2 = inst_18153__$1;
                      return function(___$2, inst_18153, inst_18153__$1, inst_18154, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                        return function(icons) {
                          return cljs.core.mapv.call(null, function(___$2, inst_18153, inst_18153__$1, inst_18154, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                            return function(p1__17820_SHARP_) {
                              if (cljs.core.truth_((new cljs.core.Keyword(null, "pinned", "pinned", -1216085339)).cljs$core$IFn$_invoke$arity$1(p1__17820_SHARP_))) {
                                return cljs.core.merge.call(null, p1__17820_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "exiting", "exiting", 1968554212), true, new cljs.core.Keyword(null, "entering", "entering", -413471949), false], null));
                              } else {
                                return cljs.core.merge.call(null, p1__17820_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "exiting", "exiting", 1968554212), false, new cljs.core.Keyword(null, "entering", "entering", -413471949), false], null));
                              }
                            };
                          }(___$2, inst_18153, inst_18153__$1, inst_18154, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1), icons);
                        };
                      }(___$2, inst_18153, inst_18153__$1, inst_18154, state_val_18167, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                    }();
                    var inst_18156 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18155);
                    var inst_18157 = cljs.core.async.timeout.call(null, 900);
                    var state_18166__$1 = function() {
                      var statearr_18170 = state_18166;
                      statearr_18170[10] = inst_18156;
                      statearr_18170[11] = inst_18154;
                      statearr_18170[7] = inst_18153__$1;
                      return statearr_18170;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18166__$1, 5, inst_18157);
                  } else {
                    if (state_val_18167 === 3) {
                      var inst_18164 = state_18166[2];
                      var state_18166__$1 = state_18166;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18166__$1, inst_18164);
                    } else {
                      if (state_val_18167 === 2) {
                        var state_18166__$1 = state_18166;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18166__$1, 4, del_chan);
                      } else {
                        if (state_val_18167 === 1) {
                          var state_18166__$1 = state_18166;
                          var statearr_18171_18250 = state_18166__$1;
                          statearr_18171_18250[2] = null;
                          statearr_18171_18250[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18175 = [null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_18175[0] = state_machine__6494__auto__;
                  statearr_18175[1] = 1;
                  return statearr_18175;
                };
                var state_machine__6494__auto____1 = function(state_18166) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18166);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18176) {
                        if (e18176 instanceof Object) {
                          var ex__6497__auto__ = e18176;
                          var statearr_18177_18251 = state_18166;
                          statearr_18177_18251[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18166);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18176;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18252 = state_18166;
                      state_18166 = G__18252;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18166) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18166);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18178 = f__6509__auto__.call(null);
            statearr_18178[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18248;
            return statearr_18178;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18248, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto___18253 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18189) {
                var state_val_18190 = state_18189[1];
                if (state_val_18190 === 4) {
                  var inst_18181 = state_18189[2];
                  var inst_18182 = console.log("(toolbar):: user clicked all");
                  var inst_18183 = function() {
                    var ___$2 = inst_18181;
                    return function(___$2, inst_18181, inst_18182, state_val_18190, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(icons) {
                        return cljs.core.mapv.call(null, function(___$2, inst_18181, inst_18182, state_val_18190, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                          return function(p1__17822_SHARP_) {
                            return cljs.core.assoc.call(null, p1__17822_SHARP_, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), true);
                          };
                        }(___$2, inst_18181, inst_18182, state_val_18190, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1), icons);
                      };
                    }(___$2, inst_18181, inst_18182, state_val_18190, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18184 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18183);
                  var state_18189__$1 = function() {
                    var statearr_18191 = state_18189;
                    statearr_18191[7] = inst_18182;
                    statearr_18191[8] = inst_18184;
                    return statearr_18191;
                  }();
                  var statearr_18192_18254 = state_18189__$1;
                  statearr_18192_18254[2] = null;
                  statearr_18192_18254[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18190 === 3) {
                    var inst_18187 = state_18189[2];
                    var state_18189__$1 = state_18189;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18189__$1, inst_18187);
                  } else {
                    if (state_val_18190 === 2) {
                      var state_18189__$1 = state_18189;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18189__$1, 4, all_chan);
                    } else {
                      if (state_val_18190 === 1) {
                        var state_18189__$1 = state_18189;
                        var statearr_18193_18255 = state_18189__$1;
                        statearr_18193_18255[2] = null;
                        statearr_18193_18255[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18197 = [null, null, null, null, null, null, null, null, null];
                  statearr_18197[0] = state_machine__6494__auto__;
                  statearr_18197[1] = 1;
                  return statearr_18197;
                };
                var state_machine__6494__auto____1 = function(state_18189) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18189);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18198) {
                        if (e18198 instanceof Object) {
                          var ex__6497__auto__ = e18198;
                          var statearr_18199_18256 = state_18189;
                          statearr_18199_18256[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18189);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18198;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18257 = state_18189;
                      state_18189 = G__18257;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18189) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18189);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18200 = f__6509__auto__.call(null);
            statearr_18200[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___18253;
            return statearr_18200;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___18253, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function(state_18211) {
                var state_val_18212 = state_18211[1];
                if (state_val_18212 === 4) {
                  var inst_18203 = state_18211[2];
                  var inst_18204 = console.log("(toolbar):: user clicked none");
                  var inst_18205 = function() {
                    var ___$2 = inst_18203;
                    return function(___$2, inst_18203, inst_18204, state_val_18212, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                      return function(icons) {
                        return cljs.core.mapv.call(null, function(___$2, inst_18203, inst_18204, state_val_18212, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
                          return function(p1__17823_SHARP_) {
                            return cljs.core.assoc.call(null, p1__17823_SHARP_, new cljs.core.Keyword(null, "pinned", "pinned", -1216085339), false);
                          };
                        }(___$2, inst_18203, inst_18204, state_val_18212, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1), icons);
                      };
                    }(___$2, inst_18203, inst_18204, state_val_18212, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
                  }();
                  var inst_18206 = om.core.transact_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "icons", "icons", -297140977), inst_18205);
                  var state_18211__$1 = function() {
                    var statearr_18213 = state_18211;
                    statearr_18213[7] = inst_18204;
                    statearr_18213[8] = inst_18206;
                    return statearr_18213;
                  }();
                  var statearr_18214_18258 = state_18211__$1;
                  statearr_18214_18258[2] = null;
                  statearr_18214_18258[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18212 === 3) {
                    var inst_18209 = state_18211[2];
                    var state_18211__$1 = state_18211;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18211__$1, inst_18209);
                  } else {
                    if (state_val_18212 === 2) {
                      var state_18211__$1 = state_18211;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18211__$1, 4, none_chan);
                    } else {
                      if (state_val_18212 === 1) {
                        var state_18211__$1 = state_18211;
                        var statearr_18215_18259 = state_18211__$1;
                        statearr_18215_18259[2] = null;
                        statearr_18215_18259[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_18219 = [null, null, null, null, null, null, null, null, null];
                  statearr_18219[0] = state_machine__6494__auto__;
                  statearr_18219[1] = 1;
                  return statearr_18219;
                };
                var state_machine__6494__auto____1 = function(state_18211) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_18211);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e18220) {
                        if (e18220 instanceof Object) {
                          var ex__6497__auto__ = e18220;
                          var statearr_18221_18260 = state_18211;
                          statearr_18221_18260[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18211);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e18220;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__18261 = state_18211;
                      state_18211 = G__18261;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_18211) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_18211);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_18222 = f__6509__auto__.call(null);
            statearr_18222[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_18222;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, map__18031, map__18031__$1, none_chan, all_chan, del_chan, rand_chan, add_chan, size_chan, color_chan, glyph_chan, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_delta.t18026.prototype.om$core$IInitState$ = true;
    clui_om.page_delta.t18026.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "glyph-chan", "glyph-chan", 1397449693), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "color-chan", "color-chan", -232607946), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "size-chan", "size-chan", -406343470), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "add-chan", "add-chan", -2024929221), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "del-chan", "del-chan", 
      -1918627367), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "all-chan", "all-chan", -875476141), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "none-chan", "none-chan", -1282466006), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "rand-chan", "rand-chan", 1192373235), cljs.core.async.chan.call(null)], null);
    };
    clui_om.page_delta.t18026.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18028) {
      var self__ = this;
      var _18028__$1 = this;
      return self__.meta18027;
    };
    clui_om.page_delta.t18026.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18028, meta18027__$1) {
      var self__ = this;
      var _18028__$1 = this;
      return new clui_om.page_delta.t18026(self__.opts, self__.owner, self__.cursor, self__.toolbar, meta18027__$1);
    };
    clui_om.page_delta.t18026.cljs$lang$type = true;
    clui_om.page_delta.t18026.cljs$lang$ctorStr = "clui-om.page-delta/t18026";
    clui_om.page_delta.t18026.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-delta/t18026");
    };
    clui_om.page_delta.__GT_t18026 = function __GT_t18026(opts__$1, owner__$1, cursor__$1, toolbar__$1, meta18027) {
      return new clui_om.page_delta.t18026(opts__$1, owner__$1, cursor__$1, toolbar__$1, meta18027);
    };
  }
  return new clui_om.page_delta.t18026(opts, owner, cursor, toolbar, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 73, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 295, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 208, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_delta.cljs"], 
  null));
};
clui_om.page_delta.iconbox = function iconbox(cursor, owner, opts) {
  if (typeof clui_om.page_delta.t18265 !== "undefined") {
  } else {
    clui_om.page_delta.t18265 = function(opts, owner, cursor, iconbox, meta18266) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.iconbox = iconbox;
      this.meta18266 = meta18266;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_delta.t18265.prototype.om$core$IRender$ = true;
    clui_om.page_delta.t18265.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, om.dom.div, {"className":"iconbox"}, om.core.build_all.call(null, clui_om.page_delta.icon, (new cljs.core.Keyword(null, "icons", "icons", -297140977)).cljs$core$IFn$_invoke$arity$1(self__.cursor)));
    };
    clui_om.page_delta.t18265.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18267) {
      var self__ = this;
      var _18267__$1 = this;
      return self__.meta18266;
    };
    clui_om.page_delta.t18265.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18267, meta18266__$1) {
      var self__ = this;
      var _18267__$1 = this;
      return new clui_om.page_delta.t18265(self__.opts, self__.owner, self__.cursor, self__.iconbox, meta18266__$1);
    };
    clui_om.page_delta.t18265.cljs$lang$type = true;
    clui_om.page_delta.t18265.cljs$lang$ctorStr = "clui-om.page-delta/t18265";
    clui_om.page_delta.t18265.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-delta/t18265");
    };
    clui_om.page_delta.__GT_t18265 = function __GT_t18265(opts__$1, owner__$1, cursor__$1, iconbox__$1, meta18266) {
      return new clui_om.page_delta.t18265(opts__$1, owner__$1, cursor__$1, iconbox__$1, meta18266);
    };
  }
  return new clui_om.page_delta.t18265(opts, owner, cursor, iconbox, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 304, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 300, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_delta.cljs"], 
  null));
};
clui_om.page_delta.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_delta.t18271 !== "undefined") {
  } else {
    clui_om.page_delta.t18271 = function(opts, owner, app, main_widget, meta18272) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta18272 = meta18272;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_delta.t18271.prototype.om$core$IRender$ = true;
    clui_om.page_delta.t18271.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"main-widget"}, om.core.build.call(null, clui_om.page_delta.toolbar, self__.app), om.core.build.call(null, clui_om.page_delta.iconbox, self__.app));
    };
    clui_om.page_delta.t18271.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18273) {
      var self__ = this;
      var _18273__$1 = this;
      return self__.meta18272;
    };
    clui_om.page_delta.t18271.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18273, meta18272__$1) {
      var self__ = this;
      var _18273__$1 = this;
      return new clui_om.page_delta.t18271(self__.opts, self__.owner, self__.app, self__.main_widget, meta18272__$1);
    };
    clui_om.page_delta.t18271.cljs$lang$type = true;
    clui_om.page_delta.t18271.cljs$lang$ctorStr = "clui-om.page-delta/t18271";
    clui_om.page_delta.t18271.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-delta/t18271");
    };
    clui_om.page_delta.__GT_t18271 = function __GT_t18271(opts__$1, owner__$1, app__$1, main_widget__$1, meta18272) {
      return new clui_om.page_delta.t18271(opts__$1, owner__$1, app__$1, main_widget__$1, meta18272);
    };
  }
  return new clui_om.page_delta.t18271(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 41, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 314, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 309, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_delta.cljs"], 
  null));
};
clui_om.page_delta.main = function main() {
  var msg = "main():: initializing page-delta.cljs";
  console.log(msg);
  return om.core.root.call(null, clui_om.page_delta.main_widget, clui_om.page_delta.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_delta.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_delta.main", clui_om.page_delta.main);
goog.provide("clui_om.page_alpha");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clui_om.widgets.palettes");
goog.require("clui_om.widgets.tiles");
goog.require("cljs.core.async");
clui_om.page_alpha.get_tiles = function get_tiles(palette) {
  var colors = cljs.core.vals.call(null, palette);
  return cljs.core.vec.call(null, cljs.core.take.call(null, 360, cljs.core.repeatedly.call(null, function(colors) {
    return function() {
      return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "settings", "settings", 1556144875), new cljs.core.Keyword(null, "color", "color", 1011675173)], [clui_om.widgets.tiles.DEFAULTS, cljs.core.nth.call(null, colors, cljs.core.rand_int.call(null, cljs.core.count.call(null, colors)))]);
    };
  }(colors))));
};
clui_om.page_alpha.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334), [cljs.core.str("Using palette "), cljs.core.str(clui_om.widgets.palettes.DEFAULT_PALETTE)].join(""), new cljs.core.Keyword(null, "tiles", "tiles", 178505240), clui_om.page_alpha.get_tiles.call(null, clui_om.widgets.palettes.DEFAULT_PALETTE), new cljs.core.Keyword(null, "palette", "palette", -456203511), clui_om.widgets.palettes.DEFAULT_PALETTE, 
new cljs.core.Keyword(null, "poll-interval", "poll-interval", 345867570), 500], null));
clui_om.page_alpha.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.page_alpha.BETA_ROOT = document.getElementById("beta-div");
clui_om.page_alpha.report = function report(e, cursor) {
  return console.log((new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cursor)));
};
clui_om.page_alpha.color_choice = function color_choice(palette, cursor) {
  var msg = [cljs.core.str("Using palette: "), cljs.core.str(palette)].join("");
  om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "palette", "palette", -456203511)], null), palette);
  om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334)], null), msg);
  return om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tiles", "tiles", 178505240)], null), clui_om.page_alpha.get_tiles.call(null, palette));
};
clui_om.page_alpha.shuffle_colors = function shuffle_colors(cursor) {
  return om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tiles", "tiles", 178505240)], null), clui_om.page_alpha.get_tiles.call(null, (new cljs.core.Keyword(null, "palette", "palette", -456203511)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cursor))));
};
clui_om.page_alpha.top_level_widget = function top_level_widget(app, owner, opts) {
  var echo = function(p1__17427_SHARP_) {
    return clui_om.page_alpha.report.call(null, p1__17427_SHARP_, app);
  };
  if (typeof clui_om.page_alpha.t17462 !== "undefined") {
  } else {
    clui_om.page_alpha.t17462 = function(echo, opts, owner, app, top_level_widget, meta17463) {
      this.echo = echo;
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.top_level_widget = top_level_widget;
      this.meta17463 = meta17463;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_alpha.t17462.prototype.om$core$IRender$ = true;
    clui_om.page_alpha.t17462.prototype.om$core$IRender$render$arity$1 = function(echo) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return React.DOM.div({"className":"outerbox"}, React.DOM.p({"className":"alert alert-info"}, (new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334)).cljs$core$IFn$_invoke$arity$1(self__.app)), om.core.build.call(null, clui_om.widgets.palettes.palette_chooser, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "callback", "callback", 
        -705136228), function(___$1, echo) {
          return function(p1__17428_SHARP_) {
            return clui_om.page_alpha.color_choice.call(null, p1__17428_SHARP_, self__.app);
          };
        }(___$1, echo)], null)], null)), cljs.core.apply.call(null, om.dom.div, null, om.core.build_all.call(null, clui_om.widgets.tiles.color_tile, (new cljs.core.Keyword(null, "tiles", "tiles", 178505240)).cljs$core$IFn$_invoke$arity$1(self__.app))));
      };
    }(echo);
    clui_om.page_alpha.t17462.prototype.om$core$IWillMount$ = true;
    clui_om.page_alpha.t17462.prototype.om$core$IWillMount$will_mount$arity$1 = function(echo) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var poll_interval = cljs.core.deref.call(null, clui_om.page_alpha.app_state).call(null, new cljs.core.Keyword(null, "poll-interval", "poll-interval", 345867570));
        var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, poll_interval, ___$1, echo) {
          return function() {
            var f__6509__auto__ = function() {
              var switch__6493__auto__ = function(c__6508__auto__, poll_interval, ___$1, echo) {
                return function(state_17478) {
                  var state_val_17479 = state_17478[1];
                  if (state_val_17479 === 7) {
                    var inst_17470 = state_17478[2];
                    var state_17478__$1 = function() {
                      var statearr_17480 = state_17478;
                      statearr_17480[7] = inst_17470;
                      return statearr_17480;
                    }();
                    var statearr_17481_17495 = state_17478__$1;
                    statearr_17481_17495[2] = null;
                    statearr_17481_17495[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17479 === 6) {
                      var inst_17474 = state_17478[2];
                      var state_17478__$1 = state_17478;
                      var statearr_17482_17496 = state_17478__$1;
                      statearr_17482_17496[2] = inst_17474;
                      statearr_17482_17496[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17479 === 5) {
                        var state_17478__$1 = state_17478;
                        var statearr_17483_17497 = state_17478__$1;
                        statearr_17483_17497[2] = null;
                        statearr_17483_17497[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17479 === 4) {
                          var inst_17467 = clui_om.page_alpha.shuffle_colors.call(null, self__.app);
                          var inst_17468 = cljs.core.async.timeout.call(null, poll_interval);
                          var state_17478__$1 = function() {
                            var statearr_17484 = state_17478;
                            statearr_17484[8] = inst_17467;
                            return statearr_17484;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17478__$1, 7, inst_17468);
                        } else {
                          if (state_val_17479 === 3) {
                            var inst_17476 = state_17478[2];
                            var state_17478__$1 = state_17478;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17478__$1, inst_17476);
                          } else {
                            if (state_val_17479 === 2) {
                              var state_17478__$1 = state_17478;
                              var statearr_17485_17498 = state_17478__$1;
                              statearr_17485_17498[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17479 === 1) {
                                var state_17478__$1 = state_17478;
                                var statearr_17487_17499 = state_17478__$1;
                                statearr_17487_17499[2] = null;
                                statearr_17487_17499[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                };
              }(c__6508__auto__, poll_interval, ___$1, echo);
              return function(switch__6493__auto__, c__6508__auto__, poll_interval, ___$1, echo) {
                return function() {
                  var state_machine__6494__auto__ = null;
                  var state_machine__6494__auto____0 = function() {
                    var statearr_17491 = [null, null, null, null, null, null, null, null, null];
                    statearr_17491[0] = state_machine__6494__auto__;
                    statearr_17491[1] = 1;
                    return statearr_17491;
                  };
                  var state_machine__6494__auto____1 = function(state_17478) {
                    while (true) {
                      var ret_value__6495__auto__ = function() {
                        try {
                          while (true) {
                            var result__6496__auto__ = switch__6493__auto__.call(null, state_17478);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6496__auto__;
                            }
                            break;
                          }
                        } catch (e17492) {
                          if (e17492 instanceof Object) {
                            var ex__6497__auto__ = e17492;
                            var statearr_17493_17500 = state_17478;
                            statearr_17493_17500[5] = ex__6497__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17478);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e17492;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__17501 = state_17478;
                        state_17478 = G__17501;
                        continue;
                      } else {
                        return ret_value__6495__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6494__auto__ = function(state_17478) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6494__auto____0.call(this);
                      case 1:
                        return state_machine__6494__auto____1.call(this, state_17478);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                  return state_machine__6494__auto__;
                }();
              }(switch__6493__auto__, c__6508__auto__, poll_interval, ___$1, echo);
            }();
            var state__6510__auto__ = function() {
              var statearr_17494 = f__6509__auto__.call(null);
              statearr_17494[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
              return statearr_17494;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
          };
        }(c__6508__auto__, poll_interval, ___$1, echo));
        return c__6508__auto__;
      };
    }(echo);
    clui_om.page_alpha.t17462.prototype.cljs$core$IMeta$_meta$arity$1 = function(echo) {
      return function(_17464) {
        var self__ = this;
        var _17464__$1 = this;
        return self__.meta17463;
      };
    }(echo);
    clui_om.page_alpha.t17462.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(echo) {
      return function(_17464, meta17463__$1) {
        var self__ = this;
        var _17464__$1 = this;
        return new clui_om.page_alpha.t17462(self__.echo, self__.opts, self__.owner, self__.app, self__.top_level_widget, meta17463__$1);
      };
    }(echo);
    clui_om.page_alpha.t17462.cljs$lang$type = true;
    clui_om.page_alpha.t17462.cljs$lang$ctorStr = "clui-om.page-alpha/t17462";
    clui_om.page_alpha.t17462.cljs$lang$ctorPrWriter = function(echo) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-alpha/t17462");
      };
    }(echo);
    clui_om.page_alpha.__GT_t17462 = function(echo) {
      return function __GT_t17462(echo__$1, opts__$1, owner__$1, app__$1, top_level_widget__$1, meta17463) {
        return new clui_om.page_alpha.t17462(echo__$1, opts__$1, owner__$1, app__$1, top_level_widget__$1, meta17463);
      };
    }(echo);
  }
  return new clui_om.page_alpha.t17462(echo, opts, owner, app, top_level_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 70, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 57, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 43, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_alpha.cljs"], 
  null));
};
clui_om.page_alpha.main = function main() {
  var msg = "main():: initializing page-alpha.cljs";
  console.log(msg);
  return om.core.root.call(null, clui_om.page_alpha.top_level_widget, clui_om.page_alpha.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_alpha.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_alpha.main", clui_om.page_alpha.main);
goog.provide("clui_om.bootstrap_demo");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("om_bootstrap.button");
goog.require("cljs.core.async");
clui_om.bootstrap_demo.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334), "Nothing yet"], null));
clui_om.bootstrap_demo.APP_ROOT = document.getElementById("bs-app-div");
clui_om.bootstrap_demo.ALT_ROOT = document.getElementById("bs-alt-div");
clui_om.bootstrap_demo.report_activity = function report_activity(e, app) {
  var target = e.target;
  var elt = target.nodeName;
  var text = target.textContent;
  var msg = [cljs.core.str("User interacted with "), cljs.core.str(elt), cljs.core.str(" labeled "), cljs.core.str(text)].join("");
  console.log(msg);
  return om.core.transact_BANG_.call(null, app, function(target, elt, text, msg) {
    return function(p1__15260_SHARP_) {
      return cljs.core.assoc.call(null, p1__15260_SHARP_, new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334), msg);
    };
  }(target, elt, text, msg));
};
clui_om.bootstrap_demo.top_level_widget = function top_level_widget(app, owner, opts) {
  var echo = function(p1__15261_SHARP_) {
    return clui_om.bootstrap_demo.report_activity.call(null, p1__15261_SHARP_, app);
  };
  if (typeof clui_om.bootstrap_demo.t15265 !== "undefined") {
  } else {
    clui_om.bootstrap_demo.t15265 = function(echo, opts, owner, app, top_level_widget, meta15266) {
      this.echo = echo;
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.top_level_widget = top_level_widget;
      this.meta15266 = meta15266;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.bootstrap_demo.t15265.prototype.om$core$IRender$ = true;
    clui_om.bootstrap_demo.t15265.prototype.om$core$IRender$render$arity$1 = function(echo) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return React.DOM.div({"className":"outerbox"}, React.DOM.p({"className":"alert alert-info"}, (new cljs.core.Keyword(null, "most-recent-activity", "most-recent-activity", 355781334)).cljs$core$IFn$_invoke$arity$1(self__.app)), React.DOM.p({"onClick":self__.echo, "classname":"alert alert-success"}, "Click me!"), om_bootstrap.button.toolbar.call(null, cljs.core.PersistentArrayMap.EMPTY, om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
        "on-click", "on-click", 1632826543), self__.echo], null), "Default"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "primary", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), self__.echo], null), "Primary"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "success", new cljs.core.Keyword(null, 
        "on-click", "on-click", 1632826543), self__.echo], null), "Success"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "info", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), self__.echo], null), "Info"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "warning", new cljs.core.Keyword(null, 
        "on-click", "on-click", 1632826543), self__.echo], null), "Warning"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "danger", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), self__.echo], null), "Danger"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "link", new cljs.core.Keyword(null, 
        "on-click", "on-click", 1632826543), self__.echo], null), "Link")), om_bootstrap.button.dropdown.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "info", new cljs.core.Keyword(null, "title", "title", 636505583), "More..."], null), om_bootstrap.button.menu_item.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "on-click", "on-click", 
        1632826543), self__.echo], null), "Action"), om_bootstrap.button.menu_item.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 2, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), self__.echo], null), "Another action"), om_bootstrap.button.menu_item.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 3, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), 
        self__.echo], null), "Something else here"), om_bootstrap.button.menu_item.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "divider?", "divider?", 1882560157), true], null)), om_bootstrap.button.menu_item.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 4, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), self__.echo], null), "Separated link")));
      };
    }(echo);
    clui_om.bootstrap_demo.t15265.prototype.cljs$core$IMeta$_meta$arity$1 = function(echo) {
      return function(_15267) {
        var self__ = this;
        var _15267__$1 = this;
        return self__.meta15266;
      };
    }(echo);
    clui_om.bootstrap_demo.t15265.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(echo) {
      return function(_15267, meta15266__$1) {
        var self__ = this;
        var _15267__$1 = this;
        return new clui_om.bootstrap_demo.t15265(self__.echo, self__.opts, self__.owner, self__.app, self__.top_level_widget, meta15266__$1);
      };
    }(echo);
    clui_om.bootstrap_demo.t15265.cljs$lang$type = true;
    clui_om.bootstrap_demo.t15265.cljs$lang$ctorStr = "clui-om.bootstrap-demo/t15265";
    clui_om.bootstrap_demo.t15265.cljs$lang$ctorPrWriter = function(echo) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.bootstrap-demo/t15265");
      };
    }(echo);
    clui_om.bootstrap_demo.__GT_t15265 = function(echo) {
      return function __GT_t15265(echo__$1, opts__$1, owner__$1, app__$1, top_level_widget__$1, meta15266) {
        return new clui_om.bootstrap_demo.t15265(echo__$1, opts__$1, owner__$1, app__$1, top_level_widget__$1, meta15266);
      };
    }(echo);
  }
  return new clui_om.bootstrap_demo.t15265(echo, opts, owner, app, top_level_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 82, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 44, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 25, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/bootstrap-demo.cljs"], 
  null));
};
clui_om.bootstrap_demo.main = function main() {
  var msg = "main():: initializing bootstrap-demo.cljs";
  console.log(msg);
  return om.core.root.call(null, clui_om.bootstrap_demo.top_level_widget, clui_om.bootstrap_demo.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.bootstrap_demo.APP_ROOT], null));
};
goog.exportSymbol("clui_om.bootstrap_demo.main", clui_om.bootstrap_demo.main);
goog.provide("clui_om.draggable_demo");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("draggable.core");
goog.require("cljs.core.async");
clui_om.draggable_demo.mouse_move_ch = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
clui_om.draggable_demo.mouse_down_ch = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
clui_om.draggable_demo.mouse_up_ch = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
clui_om.draggable_demo.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "grid", "grid", 402978600), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "rows", "rows", 850049680), 20, new cljs.core.Keyword(null, "columns", "columns", 1998437288), 20, new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287), 250], null), new cljs.core.Keyword(null, "snap-threshold", "snap-threshold", -846190465), 25, new cljs.core.Keyword(null, 
"colors", "colors", 1157174732), cljs.core.take.call(null, 40, cljs.core.cycle.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["green", "blue", "purple", "red", "yellow", "black"], null))), new cljs.core.Keyword(null, "block-sizes", "block-sizes", 1354908873), cljs.core.repeatedly.call(null, 40, function() {
  return 25 + cljs.core.rand_int.call(null, 75);
}), new cljs.core.Keyword(null, "comms", "comms", 460172477), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mouse-move", "mouse-move", -1993061223), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ch", "ch", -554717905), clui_om.draggable_demo.mouse_move_ch, new cljs.core.Keyword(null, "mult", "mult", 1466794774), cljs.core.async.mult.call(null, clui_om.draggable_demo.mouse_move_ch)], null), new cljs.core.Keyword(null, "mouse-up", "mouse-up", 999952135), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ch", "ch", -554717905), clui_om.draggable_demo.mouse_up_ch, new cljs.core.Keyword(null, "mult", "mult", 1466794774), cljs.core.async.mult.call(null, clui_om.draggable_demo.mouse_up_ch)], null), new cljs.core.Keyword(null, "mouse-down", "mouse-down", 647107567), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ch", "ch", -554717905), clui_om.draggable_demo.mouse_down_ch, new cljs.core.Keyword(null, "mult", 
"mult", 1466794774), cljs.core.async.mult.call(null, clui_om.draggable_demo.mouse_down_ch)], null)], null)], null));
clui_om.draggable_demo.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.draggable_demo.grid = function grid(data, owner, opts) {
  if (typeof clui_om.draggable_demo.t15490 !== "undefined") {
  } else {
    clui_om.draggable_demo.t15490 = function(opts, owner, data, grid, meta15491) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.grid = grid;
      this.meta15491 = meta15491;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.draggable_demo.t15490.prototype.om$core$IRender$ = true;
    clui_om.draggable_demo.t15490.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, om.dom.div, {"className":"grid"}, cljs.core.doall.call(null, cljs.core.mapcat.call(null, function(___$1) {
        return function(p1__15486_SHARP_) {
          return cljs.core.map.call(null, function(___$1) {
            return function(x) {
              return React.DOM.div({"style":{"border-style":"solid", "border-left-width":1, "top":p1__15486_SHARP_, "width":(new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data), "border-right-width":0, "border-bottom-width":1, "border-top-width":0, "border-color":"#ccc", "position":"fixed", "height":(new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data), "left":x}});
            };
          }(___$1), cljs.core.range.call(null, 0, (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(self__.data) * (new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data), (new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data)));
        };
      }(___$1), cljs.core.range.call(null, 0, (new cljs.core.Keyword(null, "rows", "rows", 850049680)).cljs$core$IFn$_invoke$arity$1(self__.data) * (new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data), (new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)).cljs$core$IFn$_invoke$arity$1(self__.data)))));
    };
    clui_om.draggable_demo.t15490.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15492) {
      var self__ = this;
      var _15492__$1 = this;
      return self__.meta15491;
    };
    clui_om.draggable_demo.t15490.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15492, meta15491__$1) {
      var self__ = this;
      var _15492__$1 = this;
      return new clui_om.draggable_demo.t15490(self__.opts, self__.owner, self__.data, self__.grid, meta15491__$1);
    };
    clui_om.draggable_demo.t15490.cljs$lang$type = true;
    clui_om.draggable_demo.t15490.cljs$lang$ctorStr = "clui-om.draggable-demo/t15490";
    clui_om.draggable_demo.t15490.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.draggable-demo/t15490");
    };
    clui_om.draggable_demo.__GT_t15490 = function __GT_t15490(opts__$1, owner__$1, data__$1, grid__$1, meta15491) {
      return new clui_om.draggable_demo.t15490(opts__$1, owner__$1, data__$1, grid__$1, meta15491);
    };
  }
  return new clui_om.draggable_demo.t15490(opts, owner, data, grid, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 89, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 101, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 81, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/draggable_demo.cljs"], 
  null));
};
clui_om.draggable_demo.block = function block(data, owner, opts) {
  if (typeof clui_om.draggable_demo.t15496 !== "undefined") {
  } else {
    clui_om.draggable_demo.t15496 = function(opts, owner, data, block, meta15497) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.block = block;
      this.meta15497 = meta15497;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.draggable_demo.t15496.prototype.om$core$IRender$ = true;
    clui_om.draggable_demo.t15496.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"style":{"opacity":.5, "borderRadius":200, "background-color":(new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(self__.data), "height":(new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(self__.data), "width":(new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(self__.data)}}, (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(self__.data));
    };
    clui_om.draggable_demo.t15496.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15498) {
      var self__ = this;
      var _15498__$1 = this;
      return self__.meta15497;
    };
    clui_om.draggable_demo.t15496.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15498, meta15497__$1) {
      var self__ = this;
      var _15498__$1 = this;
      return new clui_om.draggable_demo.t15496(self__.opts, self__.owner, self__.data, self__.block, meta15497__$1);
    };
    clui_om.draggable_demo.t15496.cljs$lang$type = true;
    clui_om.draggable_demo.t15496.cljs$lang$ctorStr = "clui-om.draggable-demo/t15496";
    clui_om.draggable_demo.t15496.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.draggable-demo/t15496");
    };
    clui_om.draggable_demo.__GT_t15496 = function __GT_t15496(opts__$1, owner__$1, data__$1, block__$1, meta15497) {
      return new clui_om.draggable_demo.t15496(opts__$1, owner__$1, data__$1, block__$1, meta15497);
    };
  }
  return new clui_om.draggable_demo.t15496(opts, owner, data, block, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 112, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 104, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/draggable_demo.cljs"], 
  null));
};
clui_om.draggable_demo.make_guideline = function() {
  var make_guideline__delegate = function(p__15499) {
    var vec__15502 = p__15499;
    var x = cljs.core.nth.call(null, vec__15502, 0, null);
    var y = cljs.core.nth.call(null, vec__15502, 1, null);
    var ow = cljs.core.nth.call(null, vec__15502, 2, null);
    var oh = cljs.core.nth.call(null, vec__15502, 3, null);
    var longer = 300 + cljs.core.rand_int.call(null, 600);
    var shorter = 2;
    var left = cljs.core.rand_int.call(null, 600);
    var top = cljs.core.rand_int.call(null, 600);
    var vec__15503 = cljs.core.rand_int.call(null, 2) > 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [longer, shorter], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [shorter, longer], null);
    var w = cljs.core.nth.call(null, vec__15503, 0, null);
    var h = cljs.core.nth.call(null, vec__15503, 1, null);
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "width", "width", -384071477), function() {
      var or__3628__auto__ = ow;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return w;
      }
    }(), new cljs.core.Keyword(null, "height", "height", 1025178622), function() {
      var or__3628__auto__ = oh;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return h;
      }
    }(), new cljs.core.Keyword(null, "top", "top", -1856271961), function() {
      var or__3628__auto__ = y;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return top;
      }
    }(), new cljs.core.Keyword(null, "left", "left", -399115937), function() {
      var or__3628__auto__ = x;
      if (cljs.core.truth_(or__3628__auto__)) {
        return or__3628__auto__;
      } else {
        return left;
      }
    }()], null);
  };
  var make_guideline = function(var_args) {
    var p__15499 = null;
    if (arguments.length > 0) {
      p__15499 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return make_guideline__delegate.call(this, p__15499);
  };
  make_guideline.cljs$lang$maxFixedArity = 0;
  make_guideline.cljs$lang$applyTo = function(arglist__15504) {
    var p__15499 = cljs.core.seq(arglist__15504);
    return make_guideline__delegate(p__15499);
  };
  make_guideline.cljs$core$IFn$_invoke$arity$variadic = make_guideline__delegate;
  return make_guideline;
}();
clui_om.draggable_demo.guidelines = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clui_om.draggable_demo.make_guideline.call(null, 50, 50, 2, 500)], null);
clui_om.draggable_demo.guideline = function guideline(data, owner, opts) {
  if (typeof clui_om.draggable_demo.t15508 !== "undefined") {
  } else {
    clui_om.draggable_demo.t15508 = function(opts, owner, data, guideline, meta15509) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.guideline = guideline;
      this.meta15509 = meta15509;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.draggable_demo.t15508.prototype.om$core$IRender$ = true;
    clui_om.draggable_demo.t15508.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var guideline__$1 = (new cljs.core.Keyword(null, "guideline", "guideline", -1368974099)).cljs$core$IFn$_invoke$arity$1(self__.data);
      return React.DOM.div({"style":{"opacity":.8, "background-color":"black", "position":"absolute", "left":(new cljs.core.Keyword(null, "left", "left", -399115937)).cljs$core$IFn$_invoke$arity$1(guideline__$1), "top":(new cljs.core.Keyword(null, "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(guideline__$1), "height":(new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(guideline__$1), "width":(new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(guideline__$1)}});
    };
    clui_om.draggable_demo.t15508.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15510) {
      var self__ = this;
      var _15510__$1 = this;
      return self__.meta15509;
    };
    clui_om.draggable_demo.t15508.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15510, meta15509__$1) {
      var self__ = this;
      var _15510__$1 = this;
      return new clui_om.draggable_demo.t15508(self__.opts, self__.owner, self__.data, self__.guideline, meta15509__$1);
    };
    clui_om.draggable_demo.t15508.cljs$lang$type = true;
    clui_om.draggable_demo.t15508.cljs$lang$ctorStr = "clui-om.draggable-demo/t15508";
    clui_om.draggable_demo.t15508.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.draggable-demo/t15508");
    };
    clui_om.draggable_demo.__GT_t15508 = function __GT_t15508(opts__$1, owner__$1, data__$1, guideline__$1, meta15509) {
      return new clui_om.draggable_demo.t15508(opts__$1, owner__$1, data__$1, guideline__$1, meta15509);
    };
  }
  return new clui_om.draggable_demo.t15508(opts, owner, data, guideline, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 53, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 142, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 132, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/draggable_demo.cljs"], 
  null));
};
clui_om.draggable_demo.drag_app = function drag_app(app, owner, opts) {
  if (typeof clui_om.draggable_demo.t15521 !== "undefined") {
  } else {
    clui_om.draggable_demo.t15521 = function(opts, owner, app, drag_app, meta15522) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.drag_app = drag_app;
      this.meta15522 = meta15522;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.draggable_demo.t15521.prototype.om$core$IRender$ = true;
    clui_om.draggable_demo.t15521.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div(null, om.core.build.call(null, clui_om.draggable_demo.grid, (new cljs.core.Keyword(null, "grid", "grid", 402978600)).cljs$core$IFn$_invoke$arity$1(self__.app), self__.opts), cljs.core.apply.call(null, om.dom.div, {"className":"guidelines"}, cljs.core.map.call(null, function(___$1) {
        return function(p1__15511_SHARP_) {
          return om.core.build.call(null, clui_om.draggable_demo.guideline, cljs.core.assoc.call(null, self__.app, new cljs.core.Keyword(null, "guideline", "guideline", -1368974099), p1__15511_SHARP_));
        };
      }(___$1), clui_om.draggable_demo.guidelines)), cljs.core.apply.call(null, om.dom.div, {"id":"free-drag"}, cljs.core.map.call(null, function(___$1) {
        return function(p1__15512_SHARP_, p2__15513_SHARP_) {
          return om.core.build.call(null, draggable.core.draggable, cljs.core.assoc.call(null, self__.app, new cljs.core.Keyword(null, "top", "top", -1856271961), cljs.core.rand_int.call(null, 20) + 50, new cljs.core.Keyword(null, "left", "left", -399115937), cljs.core.rand_int.call(null, 20) + 70, new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15512_SHARP_, new cljs.core.Keyword(null, "sub-com", "sub-com", -129419304), clui_om.draggable_demo.block, new cljs.core.Keyword(null, "sub-com-data", 
          "sub-com-data", 468328296), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15512_SHARP_, new cljs.core.Keyword(null, "size", "size", 1098693007), p2__15513_SHARP_], null)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dragger-fn", "dragger-fn", 456240575), function(___$1) {
            return function(owner__$1) {
              return draggable.core.free_drag.call(null, owner__$1);
            };
          }(___$1)], null)], null));
        };
      }(___$1), (new cljs.core.Keyword(null, "colors", "colors", 1157174732)).cljs$core$IFn$_invoke$arity$1(self__.app), (new cljs.core.Keyword(null, "block-sizes", "block-sizes", 1354908873)).cljs$core$IFn$_invoke$arity$1(self__.app))), cljs.core.apply.call(null, om.dom.div, {"id":"grid-snap-drag"}, cljs.core.map.call(null, function(___$1) {
        return function(p1__15514_SHARP_, p2__15515_SHARP_) {
          return om.core.build.call(null, draggable.core.draggable, cljs.core.assoc.call(null, self__.app, new cljs.core.Keyword(null, "top", "top", -1856271961), cljs.core.rand_int.call(null, 20) + 50, new cljs.core.Keyword(null, "left", "left", -399115937), cljs.core.rand_int.call(null, 20) + 700, new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15514_SHARP_, new cljs.core.Keyword(null, "sub-com", "sub-com", -129419304), clui_om.draggable_demo.block, new cljs.core.Keyword(null, "sub-com-data", 
          "sub-com-data", 468328296), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15514_SHARP_, new cljs.core.Keyword(null, "size", "size", 1098693007), p2__15515_SHARP_], null)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dragger-fn", "dragger-fn", 456240575), function(___$1) {
            return function(owner__$1, ___$2) {
              return draggable.core.grid_snap_drag.call(null, owner__$1, cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "grid", "grid", 402978600), new cljs.core.Keyword(null, "cell-size", "cell-size", -1745492287)], null)), (new cljs.core.Keyword(null, "snap-threshold", "snap-threshold", -846190465)).cljs$core$IFn$_invoke$arity$1(self__.app));
            };
          }(___$1)], null)], null));
        };
      }(___$1), (new cljs.core.Keyword(null, "colors", "colors", 1157174732)).cljs$core$IFn$_invoke$arity$1(self__.app), (new cljs.core.Keyword(null, "block-sizes", "block-sizes", 1354908873)).cljs$core$IFn$_invoke$arity$1(self__.app))), cljs.core.apply.call(null, om.dom.div, {"id":"grid-snap-container"}, cljs.core.map.call(null, function(___$1) {
        return function(p1__15516_SHARP_, p2__15517_SHARP_) {
          return om.core.build.call(null, draggable.core.draggable, cljs.core.assoc.call(null, self__.app, new cljs.core.Keyword(null, "top", "top", -1856271961), cljs.core.rand_int.call(null, 20) + 500, new cljs.core.Keyword(null, "left", "left", -399115937), cljs.core.rand_int.call(null, 20) + 700, new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15516_SHARP_, new cljs.core.Keyword(null, "sub-com", "sub-com", -129419304), clui_om.draggable_demo.block, new cljs.core.Keyword(null, "sub-com-data", 
          "sub-com-data", 468328296), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), p1__15516_SHARP_, new cljs.core.Keyword(null, "size", "size", 1098693007), p2__15517_SHARP_], null)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dragger-fn", "dragger-fn", 456240575), function(___$1) {
            return function(owner__$1, ___$2) {
              return draggable.core.guideline_snap_drag.call(null, owner__$1, (new cljs.core.Keyword(null, "snap-threshold", "snap-threshold", -846190465)).cljs$core$IFn$_invoke$arity$1(self__.app));
            };
          }(___$1)], null)], null));
        };
      }(___$1), (new cljs.core.Keyword(null, "colors", "colors", 1157174732)).cljs$core$IFn$_invoke$arity$1(self__.app), (new cljs.core.Keyword(null, "block-sizes", "block-sizes", 1354908873)).cljs$core$IFn$_invoke$arity$1(self__.app))));
    };
    clui_om.draggable_demo.t15521.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15523) {
      var self__ = this;
      var _15523__$1 = this;
      return self__.meta15522;
    };
    clui_om.draggable_demo.t15521.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15523, meta15522__$1) {
      var self__ = this;
      var _15523__$1 = this;
      return new clui_om.draggable_demo.t15521(self__.opts, self__.owner, self__.app, self__.drag_app, meta15522__$1);
    };
    clui_om.draggable_demo.t15521.cljs$lang$type = true;
    clui_om.draggable_demo.t15521.cljs$lang$ctorStr = "clui-om.draggable-demo/t15521";
    clui_om.draggable_demo.t15521.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.draggable-demo/t15521");
    };
    clui_om.draggable_demo.__GT_t15521 = function __GT_t15521(opts__$1, owner__$1, app__$1, drag_app__$1, meta15522) {
      return new clui_om.draggable_demo.t15521(opts__$1, owner__$1, app__$1, drag_app__$1, meta15522);
    };
  }
  return new clui_om.draggable_demo.t15521(opts, owner, app, drag_app, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 47, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 195, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/draggable_demo.cljs"], 
  null));
};
clui_om.draggable_demo.main = function main() {
  var msg = "main():: initializing draggable-demo.cljs";
  console.log(msg);
  window.addEventListener("mousedown", function(msg) {
    return function(p1__15524_SHARP_) {
      return cljs.core.async.put_BANG_.call(null, clui_om.draggable_demo.mouse_down_ch, p1__15524_SHARP_);
    };
  }(msg));
  window.addEventListener("mouseup", function(msg) {
    return function(p1__15525_SHARP_) {
      return cljs.core.async.put_BANG_.call(null, clui_om.draggable_demo.mouse_up_ch, p1__15525_SHARP_);
    };
  }(msg));
  window.addEventListener("mousemove", function(msg) {
    return function(p1__15526_SHARP_) {
      return cljs.core.async.put_BANG_.call(null, clui_om.draggable_demo.mouse_move_ch, p1__15526_SHARP_);
    };
  }(msg));
  return om.core.root.call(null, clui_om.draggable_demo.drag_app, clui_om.draggable_demo.app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.draggable_demo.ALPHA_ROOT, new cljs.core.Keyword(null, "shared", "shared", -384145993), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "guidelines", "guidelines", 91215231), clui_om.draggable_demo.guidelines], null)], null));
};
goog.exportSymbol("clui_om.draggable_demo.main", clui_om.draggable_demo.main);
goog.provide("markdown.core");
goog.require("cljs.core");
goog.require("markdown.transformers");
markdown.core.init_transformer = function init_transformer(p__28219) {
  var map__28225 = p__28219;
  var map__28225__$1 = cljs.core.seq_QMARK_.call(null, map__28225) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28225) : map__28225;
  var custom_transformers = cljs.core.get.call(null, map__28225__$1, new cljs.core.Keyword(null, "custom-transformers", "custom-transformers", 1440601790));
  var replacement_transformers = cljs.core.get.call(null, map__28225__$1, new cljs.core.Keyword(null, "replacement-transformers", "replacement-transformers", -2028552897));
  return function(map__28225, map__28225__$1, custom_transformers, replacement_transformers) {
    return function(html, line, next_line, state) {
      var _STAR_next_line_STAR_28226 = markdown.transformers._STAR_next_line_STAR_;
      try {
        markdown.transformers._STAR_next_line_STAR_ = next_line;
        var vec__28227 = cljs.core.reduce.call(null, function(_STAR_next_line_STAR_28226, map__28225, map__28225__$1, custom_transformers, replacement_transformers) {
          return function(p__28228, transformer) {
            var vec__28229 = p__28228;
            var text = cljs.core.nth.call(null, vec__28229, 0, null);
            var state__$1 = cljs.core.nth.call(null, vec__28229, 1, null);
            return transformer.call(null, text, state__$1);
          };
        }(_STAR_next_line_STAR_28226, map__28225, map__28225__$1, custom_transformers, replacement_transformers), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [line, state], null), function() {
          var or__3628__auto__ = replacement_transformers;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return cljs.core.into.call(null, markdown.transformers.transformer_vector, custom_transformers);
          }
        }());
        var text = cljs.core.nth.call(null, vec__28227, 0, null);
        var new_state = cljs.core.nth.call(null, vec__28227, 1, null);
        html.append(text);
        return new_state;
      } finally {
        markdown.transformers._STAR_next_line_STAR_ = _STAR_next_line_STAR_28226;
      }
    };
  }(map__28225, map__28225__$1, custom_transformers, replacement_transformers);
};
markdown.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__28230) {
    var fmt = cljs.core.first(arglist__28230);
    var args = cljs.core.rest(arglist__28230);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
markdown.core.md__GT_html = function() {
  var md__GT_html__delegate = function(text, params) {
    var _STAR_substring_STAR_28237 = markdown.transformers._STAR_substring_STAR_;
    var formatter28238 = markdown.transformers.formatter;
    try {
      markdown.transformers._STAR_substring_STAR_ = function(_STAR_substring_STAR_28237, formatter28238) {
        return function(s, n) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.drop.call(null, n, s));
        };
      }(_STAR_substring_STAR_28237, formatter28238);
      markdown.transformers.formatter = markdown.core.format;
      var transformer = markdown.core.init_transformer.call(null, params);
      var html = new goog.string.StringBuffer("");
      var G__28240_28243 = text.split("\n");
      var vec__28241_28244 = G__28240_28243;
      var line_28245 = cljs.core.nth.call(null, vec__28241_28244, 0, null);
      var more_28246 = cljs.core.nthnext.call(null, vec__28241_28244, 1);
      var state_28247 = cljs.core.apply.call(null, cljs.core.partial.call(null, cljs.core.assoc, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clojurescript", "clojurescript", -299769403), true], null), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false), params);
      var G__28240_28248__$1 = G__28240_28243;
      var state_28249__$1 = state_28247;
      while (true) {
        var vec__28242_28250 = G__28240_28248__$1;
        var line_28251__$1 = cljs.core.nth.call(null, vec__28242_28250, 0, null);
        var more_28252__$1 = cljs.core.nthnext.call(null, vec__28242_28250, 1);
        var state_28253__$2 = state_28249__$1;
        var state_28254__$3 = cljs.core.truth_((new cljs.core.Keyword(null, "buf", "buf", -213913340)).cljs$core$IFn$_invoke$arity$1(state_28253__$2)) ? transformer.call(null, html, (new cljs.core.Keyword(null, "buf", "buf", -213913340)).cljs$core$IFn$_invoke$arity$1(state_28253__$2), cljs.core.first.call(null, more_28252__$1), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state_28253__$2, new cljs.core.Keyword(null, "buf", "buf", -213913340), new cljs.core.Keyword(null, "lists", "lists", 
        -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), true)) : state_28253__$2;
        if (cljs.core.truth_(cljs.core.first.call(null, more_28252__$1))) {
          var G__28255 = more_28252__$1;
          var G__28256 = cljs.core.assoc.call(null, transformer.call(null, html, line_28251__$1, cljs.core.first.call(null, more_28252__$1), state_28254__$3), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), cljs.core.empty_QMARK_.call(null, line_28251__$1));
          G__28240_28248__$1 = G__28255;
          state_28249__$1 = G__28256;
          continue;
        } else {
          transformer.call(null, html, line_28251__$1, "", cljs.core.assoc.call(null, state_28254__$3, new cljs.core.Keyword(null, "eof", "eof", -489063237), true));
        }
        break;
      }
      return html.toString();
    } finally {
      markdown.transformers.formatter = formatter28238;
      markdown.transformers._STAR_substring_STAR_ = _STAR_substring_STAR_28237;
    }
  };
  var md__GT_html = function(text, var_args) {
    var params = null;
    if (arguments.length > 1) {
      params = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return md__GT_html__delegate.call(this, text, params);
  };
  md__GT_html.cljs$lang$maxFixedArity = 1;
  md__GT_html.cljs$lang$applyTo = function(arglist__28257) {
    var text = cljs.core.first(arglist__28257);
    var params = cljs.core.rest(arglist__28257);
    return md__GT_html__delegate(text, params);
  };
  md__GT_html.cljs$core$IFn$_invoke$arity$variadic = md__GT_html__delegate;
  return md__GT_html;
}();
markdown.core.mdToHtml = function() {
  var mdToHtml__delegate = function(params) {
    return cljs.core.apply.call(null, markdown.core.md__GT_html, params);
  };
  var mdToHtml = function(var_args) {
    var params = null;
    if (arguments.length > 0) {
      params = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mdToHtml__delegate.call(this, params);
  };
  mdToHtml.cljs$lang$maxFixedArity = 0;
  mdToHtml.cljs$lang$applyTo = function(arglist__28258) {
    var params = cljs.core.seq(arglist__28258);
    return mdToHtml__delegate(params);
  };
  mdToHtml.cljs$core$IFn$_invoke$arity$variadic = mdToHtml__delegate;
  return mdToHtml;
}();
goog.exportSymbol("markdown.core.mdToHtml", markdown.core.mdToHtml);
goog.provide("clui_om.react_om_tut");
goog.require("cljs.core");
goog.require("markdown.core");
goog.require("clui_om.utils");
goog.require("om.dom");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
goog.require("om.core");
clui_om.react_om_tut.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comments", "comments", -293346423), cljs.core.PersistentVector.EMPTY], null));
clui_om.react_om_tut.APP_ROOT = document.getElementById("app-main-div");
clui_om.react_om_tut.fetch_comments = function fetch_comments(cursor, p__20363) {
  var map__20426 = p__20363;
  var map__20426__$1 = cljs.core.seq_QMARK_.call(null, map__20426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20426) : map__20426;
  var url = cljs.core.get.call(null, map__20426__$1, new cljs.core.Keyword(null, "url", "url", 276297046));
  var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, map__20426, map__20426__$1, url) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto__, map__20426, map__20426__$1, url) {
          return function(state_20467) {
            var state_val_20468 = state_20467[1];
            if (state_val_20468 === 8) {
              var inst_20438 = state_20467[7];
              var inst_20436 = state_20467[8];
              var inst_20440 = state_20467[9];
              var inst_20439 = state_20467[10];
              var inst_20437 = state_20467[11];
              var inst_20441 = state_20467[12];
              var inst_20442 = state_20467[13];
              var inst_20463 = state_20467[2];
              var inst_20464 = function() {
                var numbered_comments = inst_20442;
                var cts = inst_20441;
                var msg = inst_20440;
                var status = inst_20439;
                var body = inst_20438;
                var headers = inst_20437;
                var all = inst_20436;
                var map__20427 = inst_20436;
                return function(numbered_comments, cts, msg, status, body, headers, all, map__20427, inst_20438, inst_20436, inst_20440, inst_20439, inst_20437, inst_20441, inst_20442, inst_20463, state_val_20468, c__6508__auto__, map__20426, map__20426__$1, url) {
                  return function(p1__20362_SHARP_) {
                    return cljs.core.assoc.call(null, p1__20362_SHARP_, new cljs.core.Keyword(null, "comments", "comments", -293346423), numbered_comments);
                  };
                }(numbered_comments, cts, msg, status, body, headers, all, map__20427, inst_20438, inst_20436, inst_20440, inst_20439, inst_20437, inst_20441, inst_20442, inst_20463, state_val_20468, c__6508__auto__, map__20426, map__20426__$1, url);
              }();
              var inst_20465 = om.core.transact_BANG_.call(null, cursor, inst_20464);
              var state_20467__$1 = function() {
                var statearr_20469 = state_20467;
                statearr_20469[14] = inst_20463;
                return statearr_20469;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20467__$1, inst_20465);
            } else {
              if (state_val_20468 === 7) {
                var inst_20438 = state_20467[7];
                var inst_20440 = state_20467[9];
                var inst_20439 = state_20467[10];
                var inst_20437 = state_20467[11];
                var inst_20442 = state_20467[13];
                var inst_20452 = [cljs.core.str("Message: "), cljs.core.str(inst_20440)].join("");
                var inst_20453 = console.log(inst_20452);
                var inst_20454 = [cljs.core.str("Status: "), cljs.core.str(inst_20439)].join("");
                var inst_20455 = console.log(inst_20454);
                var inst_20456 = [cljs.core.str("Body: "), cljs.core.str(inst_20438)].join("");
                var inst_20457 = console.log(inst_20456);
                var inst_20458 = [cljs.core.str("Headers: "), cljs.core.str(inst_20437)].join("");
                var inst_20459 = console.log(inst_20458);
                var inst_20460 = [cljs.core.str("Comments: "), cljs.core.str(inst_20442)].join("");
                var inst_20461 = console.log(inst_20460);
                var state_20467__$1 = function() {
                  var statearr_20470 = state_20467;
                  statearr_20470[15] = inst_20453;
                  statearr_20470[16] = inst_20459;
                  statearr_20470[17] = inst_20455;
                  statearr_20470[18] = inst_20457;
                  return statearr_20470;
                }();
                var statearr_20471_20488 = state_20467__$1;
                statearr_20471_20488[2] = inst_20461;
                statearr_20471_20488[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20468 === 6) {
                  var inst_20449 = [cljs.core.str("No change in comments.")].join("");
                  var inst_20450 = console.log(inst_20449);
                  var state_20467__$1 = state_20467;
                  var statearr_20472_20489 = state_20467__$1;
                  statearr_20472_20489[2] = inst_20450;
                  statearr_20472_20489[1] = 8;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20468 === 5) {
                    var inst_20438 = state_20467[7];
                    var inst_20436 = state_20467[8];
                    var inst_20441 = state_20467[12];
                    var inst_20442 = state_20467[13];
                    var inst_20436__$1 = state_20467[2];
                    var inst_20437 = cljs.core.get.call(null, inst_20436__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
                    var inst_20438__$1 = cljs.core.get.call(null, inst_20436__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
                    var inst_20439 = cljs.core.get.call(null, inst_20436__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
                    var inst_20440 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(inst_20438__$1);
                    var inst_20441__$1 = (new cljs.core.Keyword(null, "comments", "comments", -293346423)).cljs$core$IFn$_invoke$arity$1(inst_20438__$1);
                    var inst_20442__$1 = cljs.core.mapv.call(null, clui_om.utils.with_id, inst_20441__$1);
                    var inst_20443 = cljs.core.deref.call(null, clui_om.react_om_tut.app_state);
                    var inst_20444 = inst_20443.call(null, new cljs.core.Keyword(null, "comments", "comments", -293346423));
                    var inst_20445 = cljs.core.count.call(null, inst_20444);
                    var inst_20446 = cljs.core.count.call(null, inst_20442__$1);
                    var inst_20447 = cljs.core._EQ_.call(null, inst_20445, inst_20446);
                    var state_20467__$1 = function() {
                      var statearr_20473 = state_20467;
                      statearr_20473[7] = inst_20438__$1;
                      statearr_20473[8] = inst_20436__$1;
                      statearr_20473[9] = inst_20440;
                      statearr_20473[10] = inst_20439;
                      statearr_20473[11] = inst_20437;
                      statearr_20473[12] = inst_20441__$1;
                      statearr_20473[13] = inst_20442__$1;
                      return statearr_20473;
                    }();
                    if (inst_20447) {
                      var statearr_20474_20490 = state_20467__$1;
                      statearr_20474_20490[1] = 6;
                    } else {
                      var statearr_20475_20491 = state_20467__$1;
                      statearr_20475_20491[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20468 === 4) {
                      var inst_20430 = state_20467[19];
                      var state_20467__$1 = state_20467;
                      var statearr_20476_20492 = state_20467__$1;
                      statearr_20476_20492[2] = inst_20430;
                      statearr_20476_20492[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20468 === 3) {
                        var inst_20430 = state_20467[19];
                        var inst_20433 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20430);
                        var state_20467__$1 = state_20467;
                        var statearr_20477_20493 = state_20467__$1;
                        statearr_20477_20493[2] = inst_20433;
                        statearr_20477_20493[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20468 === 2) {
                          var inst_20430 = state_20467[19];
                          var inst_20430__$1 = state_20467[2];
                          var inst_20431 = cljs.core.seq_QMARK_.call(null, inst_20430__$1);
                          var state_20467__$1 = function() {
                            var statearr_20478 = state_20467;
                            statearr_20478[19] = inst_20430__$1;
                            return statearr_20478;
                          }();
                          if (inst_20431) {
                            var statearr_20479_20494 = state_20467__$1;
                            statearr_20479_20494[1] = 3;
                          } else {
                            var statearr_20480_20495 = state_20467__$1;
                            statearr_20480_20495[1] = 4;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20468 === 1) {
                            var inst_20428 = cljs_http.client.get.call(null, url);
                            var state_20467__$1 = state_20467;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20467__$1, 2, inst_20428);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6508__auto__, map__20426, map__20426__$1, url);
        return function(switch__6493__auto__, c__6508__auto__, map__20426, map__20426__$1, url) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_20484 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20484[0] = state_machine__6494__auto__;
              statearr_20484[1] = 1;
              return statearr_20484;
            };
            var state_machine__6494__auto____1 = function(state_20467) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_20467);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e20485) {
                    if (e20485 instanceof Object) {
                      var ex__6497__auto__ = e20485;
                      var statearr_20486_20496 = state_20467;
                      statearr_20486_20496[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20467);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20485;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20497 = state_20467;
                  state_20467 = G__20497;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_20467) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_20467);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto__, map__20426, map__20426__$1, url);
      }();
      var state__6510__auto__ = function() {
        var statearr_20487 = f__6509__auto__.call(null);
        statearr_20487[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
        return statearr_20487;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto__, map__20426, map__20426__$1, url));
  return c__6508__auto__;
};
clui_om.react_om_tut.save_comment_BANG_ = function save_comment_BANG_(comment, cursor, p__20498) {
  var map__20518 = p__20498;
  var map__20518__$1 = cljs.core.seq_QMARK_.call(null, map__20518) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20518) : map__20518;
  var url = cljs.core.get.call(null, map__20518__$1, new cljs.core.Keyword(null, "url", "url", 276297046));
  om.core.transact_BANG_.call(null, cursor, new cljs.core.Keyword(null, "comments", "comments", -293346423), function(map__20518, map__20518__$1, url) {
    return function(original_comments) {
      console.log([cljs.core.str("Original comments: "), cljs.core.str(original_comments)].join(""));
      console.log([cljs.core.str("New comment: "), cljs.core.str(comment)].join(""));
      return cljs.core.conj.call(null, original_comments, comment);
    };
  }(map__20518, map__20518__$1, url));
  var c__6508__auto___20537 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___20537, map__20518, map__20518__$1, url) {
    return function() {
      var f__6509__auto__ = function() {
        var switch__6493__auto__ = function(c__6508__auto___20537, map__20518, map__20518__$1, url) {
          return function(state_20528) {
            var state_val_20529 = state_20528[1];
            if (state_val_20529 === 2) {
              var inst_20524 = state_20528[2];
              var inst_20525 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(inst_20524);
              var inst_20526 = console.log(inst_20525);
              var state_20528__$1 = state_20528;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20528__$1, inst_20526);
            } else {
              if (state_val_20529 === 1) {
                var inst_20519 = [new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)];
                var inst_20520 = [comment];
                var inst_20521 = cljs.core.PersistentHashMap.fromArrays(inst_20519, inst_20520);
                var inst_20522 = cljs_http.client.post.call(null, url, inst_20521);
                var state_20528__$1 = state_20528;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20528__$1, 2, inst_20522);
              } else {
                return null;
              }
            }
          };
        }(c__6508__auto___20537, map__20518, map__20518__$1, url);
        return function(switch__6493__auto__, c__6508__auto___20537, map__20518, map__20518__$1, url) {
          return function() {
            var state_machine__6494__auto__ = null;
            var state_machine__6494__auto____0 = function() {
              var statearr_20533 = [null, null, null, null, null, null, null];
              statearr_20533[0] = state_machine__6494__auto__;
              statearr_20533[1] = 1;
              return statearr_20533;
            };
            var state_machine__6494__auto____1 = function(state_20528) {
              while (true) {
                var ret_value__6495__auto__ = function() {
                  try {
                    while (true) {
                      var result__6496__auto__ = switch__6493__auto__.call(null, state_20528);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6496__auto__;
                      }
                      break;
                    }
                  } catch (e20534) {
                    if (e20534 instanceof Object) {
                      var ex__6497__auto__ = e20534;
                      var statearr_20535_20538 = state_20528;
                      statearr_20535_20538[5] = ex__6497__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20528);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20534;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20539 = state_20528;
                  state_20528 = G__20539;
                  continue;
                } else {
                  return ret_value__6495__auto__;
                }
                break;
              }
            };
            state_machine__6494__auto__ = function(state_20528) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6494__auto____0.call(this);
                case 1:
                  return state_machine__6494__auto____1.call(this, state_20528);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
            state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
            return state_machine__6494__auto__;
          }();
        }(switch__6493__auto__, c__6508__auto___20537, map__20518, map__20518__$1, url);
      }();
      var state__6510__auto__ = function() {
        var statearr_20536 = f__6509__auto__.call(null);
        statearr_20536[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___20537;
        return statearr_20536;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
    };
  }(c__6508__auto___20537, map__20518, map__20518__$1, url));
  return console.log([cljs.core.str("Optimistic comments: "), cljs.core.str((new cljs.core.Keyword(null, "comments", "comments", -293346423)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clui_om.react_om_tut.app_state)))].join(""));
};
clui_om.react_om_tut.handle_submit = function handle_submit(e, cursor, owner, opts) {
  var vec__20542 = clui_om.utils.value_from_node.call(null, owner, "author");
  var author = cljs.core.nth.call(null, vec__20542, 0, null);
  var author_node = cljs.core.nth.call(null, vec__20542, 1, null);
  var vec__20543 = clui_om.utils.value_from_node.call(null, owner, "text");
  var text = cljs.core.nth.call(null, vec__20543, 0, null);
  var text_node = cljs.core.nth.call(null, vec__20543, 1, null);
  if (cljs.core.truth_(function() {
    var and__3616__auto__ = author;
    if (cljs.core.truth_(and__3616__auto__)) {
      return text;
    } else {
      return and__3616__auto__;
    }
  }())) {
    clui_om.react_om_tut.save_comment_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "author", "author", 2111686192), author, new cljs.core.Keyword(null, "text", "text", -1790561697), text], null), cursor, opts);
    clui_om.utils.clear_nodes_BANG_.call(null, author_node, text_node);
  } else {
  }
  return false;
};
clui_om.react_om_tut.comment = function comment(p__20544, owner, opts) {
  var map__20549 = p__20544;
  var map__20549__$1 = cljs.core.seq_QMARK_.call(null, map__20549) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20549) : map__20549;
  var cursor = map__20549__$1;
  var text = cljs.core.get.call(null, map__20549__$1, new cljs.core.Keyword(null, "text", "text", -1790561697));
  var author = cljs.core.get.call(null, map__20549__$1, new cljs.core.Keyword(null, "author", "author", 2111686192));
  console.log([cljs.core.str("generating single comment from "), cljs.core.str(author)].join(""));
  if (typeof clui_om.react_om_tut.t20550 !== "undefined") {
  } else {
    clui_om.react_om_tut.t20550 = function(author, text, cursor, map__20549, opts, owner, p__20544, comment, meta20551) {
      this.author = author;
      this.text = text;
      this.cursor = cursor;
      this.map__20549 = map__20549;
      this.opts = opts;
      this.owner = owner;
      this.p__20544 = p__20544;
      this.comment = comment;
      this.meta20551 = meta20551;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.react_om_tut.t20550.prototype.om$core$IRender$ = true;
    clui_om.react_om_tut.t20550.prototype.om$core$IRender$render$arity$1 = function(map__20549, map__20549__$1, cursor, text, author) {
      return function(this__5270__auto__) {
        var self__ = this;
        var this__5270__auto____$1 = this;
        var raw_markup = markdown.core.mdToHtml.call(null, function() {
          var or__3628__auto__ = self__.text;
          if (cljs.core.truth_(or__3628__auto__)) {
            return or__3628__auto__;
          } else {
            return "blank comment!";
          }
        }());
        var color = "red";
        return React.DOM.div({"className":"comment"}, React.DOM.h3({"className":"commentAuthor"}, self__.author), React.DOM.span({"dangerouslySetInnerHTML":{"__html":raw_markup}}));
      };
    }(map__20549, map__20549__$1, cursor, text, author);
    clui_om.react_om_tut.t20550.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__20549, map__20549__$1, cursor, text, author) {
      return function(_20552) {
        var self__ = this;
        var _20552__$1 = this;
        return self__.meta20551;
      };
    }(map__20549, map__20549__$1, cursor, text, author);
    clui_om.react_om_tut.t20550.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__20549, map__20549__$1, cursor, text, author) {
      return function(_20552, meta20551__$1) {
        var self__ = this;
        var _20552__$1 = this;
        return new clui_om.react_om_tut.t20550(self__.author, self__.text, self__.cursor, self__.map__20549, self__.opts, self__.owner, self__.p__20544, self__.comment, meta20551__$1);
      };
    }(map__20549, map__20549__$1, cursor, text, author);
    clui_om.react_om_tut.t20550.cljs$lang$type = true;
    clui_om.react_om_tut.t20550.cljs$lang$ctorStr = "clui-om.react-om-tut/t20550";
    clui_om.react_om_tut.t20550.cljs$lang$ctorPrWriter = function(map__20549, map__20549__$1, cursor, text, author) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.react-om-tut/t20550");
      };
    }(map__20549, map__20549__$1, cursor, text, author);
    clui_om.react_om_tut.__GT_t20550 = function(map__20549, map__20549__$1, cursor, text, author) {
      return function __GT_t20550(author__$1, text__$1, cursor__$1, map__20549__$2, opts__$1, owner__$1, p__20544__$1, comment__$1, meta20551) {
        return new clui_om.react_om_tut.t20550(author__$1, text__$1, cursor__$1, map__20549__$2, opts__$1, owner__$1, p__20544__$1, comment__$1, meta20551);
      };
    }(map__20549, map__20549__$1, cursor, text, author);
  }
  return new clui_om.react_om_tut.t20550(author, text, cursor, map__20549__$1, opts, owner, p__20544, comment, null);
};
clui_om.react_om_tut.comment_list = function comment_list(cursor, owner, opts) {
  var cts = (new cljs.core.Keyword(null, "comments", "comments", -293346423)).cljs$core$IFn$_invoke$arity$1(cursor);
  console.log([cljs.core.str("generating comments list from cursor: "), cljs.core.str(cursor)].join(""));
  console.log([cljs.core.str("comments are: "), cljs.core.str(cts)].join(""));
  if (typeof clui_om.react_om_tut.t20556 !== "undefined") {
  } else {
    clui_om.react_om_tut.t20556 = function(cts, opts, owner, cursor, comment_list, meta20557) {
      this.cts = cts;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.comment_list = comment_list;
      this.meta20557 = meta20557;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.react_om_tut.t20556.prototype.om$core$IRender$ = true;
    clui_om.react_om_tut.t20556.prototype.om$core$IRender$render$arity$1 = function(cts) {
      return function(this__5270__auto__) {
        var self__ = this;
        var this__5270__auto____$1 = this;
        return React.DOM.div({"className":"commentList"}, cljs.core.into_array.call(null, om.core.build_all.call(null, clui_om.react_om_tut.comment, self__.cts, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "fn", "fn", -1175266204), cljs.core.identity, new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null))));
      };
    }(cts);
    clui_om.react_om_tut.t20556.prototype.cljs$core$IMeta$_meta$arity$1 = function(cts) {
      return function(_20558) {
        var self__ = this;
        var _20558__$1 = this;
        return self__.meta20557;
      };
    }(cts);
    clui_om.react_om_tut.t20556.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cts) {
      return function(_20558, meta20557__$1) {
        var self__ = this;
        var _20558__$1 = this;
        return new clui_om.react_om_tut.t20556(self__.cts, self__.opts, self__.owner, self__.cursor, self__.comment_list, meta20557__$1);
      };
    }(cts);
    clui_om.react_om_tut.t20556.cljs$lang$type = true;
    clui_om.react_om_tut.t20556.cljs$lang$ctorStr = "clui-om.react-om-tut/t20556";
    clui_om.react_om_tut.t20556.cljs$lang$ctorPrWriter = function(cts) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.react-om-tut/t20556");
      };
    }(cts);
    clui_om.react_om_tut.__GT_t20556 = function(cts) {
      return function __GT_t20556(cts__$1, opts__$1, owner__$1, cursor__$1, comment_list__$1, meta20557) {
        return new clui_om.react_om_tut.t20556(cts__$1, opts__$1, owner__$1, cursor__$1, comment_list__$1, meta20557);
      };
    }(cts);
  }
  return new clui_om.react_om_tut.t20556(cts, opts, owner, cursor, comment_list, null);
};
clui_om.react_om_tut.comment_form = function comment_form(app, owner, opts) {
  if (typeof clui_om.react_om_tut.t20563 !== "undefined") {
  } else {
    clui_om.react_om_tut.t20563 = function(opts, owner, app, comment_form, meta20564) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.comment_form = comment_form;
      this.meta20564 = meta20564;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.react_om_tut.t20563.prototype.om$core$IRender$ = true;
    clui_om.react_om_tut.t20563.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.form({"onSubmit":function(this$__$1) {
        return function(p1__20559_SHARP_) {
          return clui_om.react_om_tut.handle_submit.call(null, p1__20559_SHARP_, self__.app, self__.owner, self__.opts);
        };
      }(this$__$1), "className":"commentForm"}, React.DOM.h3(null, "Add Comment"), om.dom.input.call(null, {"ref":"author", "placeholder":"Your Name", "type":"text"}), om.dom.input.call(null, {"ref":"text", "placeholder":"Say something...", "type":"text"}), om.dom.input.call(null, {"value":"Post", "type":"submit"}));
    };
    clui_om.react_om_tut.t20563.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20565) {
      var self__ = this;
      var _20565__$1 = this;
      return self__.meta20564;
    };
    clui_om.react_om_tut.t20563.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20565, meta20564__$1) {
      var self__ = this;
      var _20565__$1 = this;
      return new clui_om.react_om_tut.t20563(self__.opts, self__.owner, self__.app, self__.comment_form, meta20564__$1);
    };
    clui_om.react_om_tut.t20563.cljs$lang$type = true;
    clui_om.react_om_tut.t20563.cljs$lang$ctorStr = "clui-om.react-om-tut/t20563";
    clui_om.react_om_tut.t20563.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.react-om-tut/t20563");
    };
    clui_om.react_om_tut.__GT_t20563 = function __GT_t20563(opts__$1, owner__$1, app__$1, comment_form__$1, meta20564) {
      return new clui_om.react_om_tut.t20563(opts__$1, owner__$1, app__$1, comment_form__$1, meta20564);
    };
  }
  return new clui_om.react_om_tut.t20563(opts, owner, app, comment_form, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 58, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 114, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 106, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/react_om_tut.cljs"], 
  null));
};
clui_om.react_om_tut.comment_box = function comment_box(cursor, owner, p__20566) {
  var map__20601 = p__20566;
  var map__20601__$1 = cljs.core.seq_QMARK_.call(null, map__20601) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20601) : map__20601;
  var opts = map__20601__$1;
  var poll_interval = cljs.core.get.call(null, map__20601__$1, new cljs.core.Keyword(null, "poll-interval", "poll-interval", 345867570));
  if (typeof clui_om.react_om_tut.t20602 !== "undefined") {
  } else {
    clui_om.react_om_tut.t20602 = function(poll_interval, opts, map__20601, p__20566, owner, cursor, comment_box, meta20603) {
      this.poll_interval = poll_interval;
      this.opts = opts;
      this.map__20601 = map__20601;
      this.p__20566 = p__20566;
      this.owner = owner;
      this.cursor = cursor;
      this.comment_box = comment_box;
      this.meta20603 = meta20603;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.react_om_tut.t20602.prototype.om$core$IRender$ = true;
    clui_om.react_om_tut.t20602.prototype.om$core$IRender$render$arity$1 = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"commentBox"}, React.DOM.h2(null, "Comments"), om.core.build.call(null, clui_om.react_om_tut.comment_list, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null)), React.DOM.hr(null), om.core.build.call(null, clui_om.react_om_tut.comment_form, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null)));
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
    clui_om.react_om_tut.t20602.prototype.om$core$IWillMount$ = true;
    clui_om.react_om_tut.t20602.prototype.om$core$IWillMount$will_mount$arity$1 = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval) {
          return function() {
            var f__6509__auto__ = function() {
              var switch__6493__auto__ = function(c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval) {
                return function(state_20618) {
                  var state_val_20619 = state_20618[1];
                  if (state_val_20619 === 7) {
                    var inst_20610 = state_20618[2];
                    var state_20618__$1 = function() {
                      var statearr_20620 = state_20618;
                      statearr_20620[7] = inst_20610;
                      return statearr_20620;
                    }();
                    var statearr_20621_20635 = state_20618__$1;
                    statearr_20621_20635[2] = null;
                    statearr_20621_20635[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20619 === 6) {
                      var inst_20614 = state_20618[2];
                      var state_20618__$1 = state_20618;
                      var statearr_20622_20636 = state_20618__$1;
                      statearr_20622_20636[2] = inst_20614;
                      statearr_20622_20636[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20619 === 5) {
                        var state_20618__$1 = state_20618;
                        var statearr_20623_20637 = state_20618__$1;
                        statearr_20623_20637[2] = null;
                        statearr_20623_20637[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20619 === 4) {
                          var inst_20607 = clui_om.react_om_tut.fetch_comments.call(null, self__.cursor, self__.opts);
                          var inst_20608 = cljs.core.async.timeout.call(null, self__.poll_interval);
                          var state_20618__$1 = function() {
                            var statearr_20624 = state_20618;
                            statearr_20624[8] = inst_20607;
                            return statearr_20624;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20618__$1, 7, inst_20608);
                        } else {
                          if (state_val_20619 === 3) {
                            var inst_20616 = state_20618[2];
                            var state_20618__$1 = state_20618;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20618__$1, inst_20616);
                          } else {
                            if (state_val_20619 === 2) {
                              var state_20618__$1 = state_20618;
                              var statearr_20625_20638 = state_20618__$1;
                              statearr_20625_20638[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20619 === 1) {
                                var state_20618__$1 = state_20618;
                                var statearr_20627_20639 = state_20618__$1;
                                statearr_20627_20639[2] = null;
                                statearr_20627_20639[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                };
              }(c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval);
              return function(switch__6493__auto__, c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval) {
                return function() {
                  var state_machine__6494__auto__ = null;
                  var state_machine__6494__auto____0 = function() {
                    var statearr_20631 = [null, null, null, null, null, null, null, null, null];
                    statearr_20631[0] = state_machine__6494__auto__;
                    statearr_20631[1] = 1;
                    return statearr_20631;
                  };
                  var state_machine__6494__auto____1 = function(state_20618) {
                    while (true) {
                      var ret_value__6495__auto__ = function() {
                        try {
                          while (true) {
                            var result__6496__auto__ = switch__6493__auto__.call(null, state_20618);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6496__auto__;
                            }
                            break;
                          }
                        } catch (e20632) {
                          if (e20632 instanceof Object) {
                            var ex__6497__auto__ = e20632;
                            var statearr_20633_20640 = state_20618;
                            statearr_20633_20640[5] = ex__6497__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20618);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e20632;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__20641 = state_20618;
                        state_20618 = G__20641;
                        continue;
                      } else {
                        return ret_value__6495__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6494__auto__ = function(state_20618) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6494__auto____0.call(this);
                      case 1:
                        return state_machine__6494__auto____1.call(this, state_20618);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                  state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                  return state_machine__6494__auto__;
                }();
              }(switch__6493__auto__, c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval);
            }();
            var state__6510__auto__ = function() {
              var statearr_20634 = f__6509__auto__.call(null);
              statearr_20634[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
              return statearr_20634;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
          };
        }(c__6508__auto__, this$__$1, map__20601, map__20601__$1, opts, poll_interval));
        return c__6508__auto__;
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
    clui_om.react_om_tut.t20602.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function(_20604) {
        var self__ = this;
        var _20604__$1 = this;
        return self__.meta20603;
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
    clui_om.react_om_tut.t20602.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function(_20604, meta20603__$1) {
        var self__ = this;
        var _20604__$1 = this;
        return new clui_om.react_om_tut.t20602(self__.poll_interval, self__.opts, self__.map__20601, self__.p__20566, self__.owner, self__.cursor, self__.comment_box, meta20603__$1);
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
    clui_om.react_om_tut.t20602.cljs$lang$type = true;
    clui_om.react_om_tut.t20602.cljs$lang$ctorStr = "clui-om.react-om-tut/t20602";
    clui_om.react_om_tut.t20602.cljs$lang$ctorPrWriter = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "clui-om.react-om-tut/t20602");
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
    clui_om.react_om_tut.__GT_t20602 = function(map__20601, map__20601__$1, opts, poll_interval) {
      return function __GT_t20602(poll_interval__$1, opts__$1, map__20601__$2, p__20566__$1, owner__$1, cursor__$1, comment_box__$1, meta20603) {
        return new clui_om.react_om_tut.t20602(poll_interval__$1, opts__$1, map__20601__$2, p__20566__$1, owner__$1, cursor__$1, comment_box__$1, meta20603);
      };
    }(map__20601, map__20601__$1, opts, poll_interval);
  }
  return new clui_om.react_om_tut.t20602(poll_interval, opts, map__20601__$1, p__20566, owner, cursor, comment_box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 136, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 123, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/react_om_tut.cljs"], 
  null));
};
clui_om.react_om_tut.tutorial_app = function tutorial_app(cursor, owner) {
  if (typeof clui_om.react_om_tut.t20645 !== "undefined") {
  } else {
    clui_om.react_om_tut.t20645 = function(owner, cursor, tutorial_app, meta20646) {
      this.owner = owner;
      this.cursor = cursor;
      this.tutorial_app = tutorial_app;
      this.meta20646 = meta20646;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.react_om_tut.t20645.prototype.om$core$IRender$ = true;
    clui_om.react_om_tut.t20645.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.div(null, om.core.build.call(null, clui_om.react_om_tut.comment_box, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "poll-interval", "poll-interval", 345867570), 1E4, new cljs.core.Keyword(null, "url", "url", 276297046), "/react-om-tut/comments"], null)], null)));
    };
    clui_om.react_om_tut.t20645.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20647) {
      var self__ = this;
      var _20647__$1 = this;
      return self__.meta20646;
    };
    clui_om.react_om_tut.t20645.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20647, meta20646__$1) {
      var self__ = this;
      var _20647__$1 = this;
      return new clui_om.react_om_tut.t20645(self__.owner, self__.cursor, self__.tutorial_app, meta20646__$1);
    };
    clui_om.react_om_tut.t20645.cljs$lang$type = true;
    clui_om.react_om_tut.t20645.cljs$lang$ctorStr = "clui-om.react-om-tut/t20645";
    clui_om.react_om_tut.t20645.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.react-om-tut/t20645");
    };
    clui_om.react_om_tut.__GT_t20645 = function __GT_t20645(owner__$1, cursor__$1, tutorial_app__$1, meta20646) {
      return new clui_om.react_om_tut.t20645(owner__$1, cursor__$1, tutorial_app__$1, meta20646);
    };
  }
  return new clui_om.react_om_tut.t20645(owner, cursor, tutorial_app, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 69, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 147, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/react_om_tut.cljs"], 
  null));
};
clui_om.react_om_tut.main = function main() {
  var uid = clui_om.utils.guid.call(null);
  var basemsg = "main():: initializing react-om-tut.cljs with initial guid:  \x3c";
  var msg = cljs.core.apply.call(null, cljs.core.str, basemsg, uid, "\x3e");
  console.log(msg);
  return om.core.root.call(null, clui_om.react_om_tut.tutorial_app, clui_om.react_om_tut.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.react_om_tut.APP_ROOT], null));
};
goog.exportSymbol("clui_om.react_om_tut.main", clui_om.react_om_tut.main);
goog.provide("clui_om.page_svg_om");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("clojure.browser.repl");
goog.require("clui_om.svg.brittle_icons");
goog.require("cljs.core.async");
goog.require("clui_om.svg.icons");
goog.require("om.core");
clui_om.page_svg_om.app_state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
clui_om.page_svg_om.ALPHA_ROOT = document.getElementById("alphaRoot");
clui_om.page_svg_om.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_svg_om.t20263 !== "undefined") {
  } else {
    clui_om.page_svg_om.t20263 = function(opts, owner, app, main_widget, meta20264) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta20264 = meta20264;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_svg_om.t20263.prototype.om$core$IRender$ = true;
    clui_om.page_svg_om.t20263.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"mainWidgetOuter"}, React.DOM.div({"className":"mainWidgetInner"}, React.DOM.p(null, "Page-SVG-Om Stuff Will Go Here."), om.core.build.call(null, clui_om.svg.brittle_icons.brittle_gear_icon, self__.app), om.core.build.call(null, clui_om.svg.brittle_icons.brittle_disc_icon, self__.app), om.core.build.call(null, clui_om.svg.brittle_icons.brittle_medal_icon, self__.app), om.core.build.call(null, clui_om.svg.brittle_icons.robust_heart_icon, self__.app), React.DOM.div({"className":"iconOuter bear"}, 
      om.core.build.call(null, clui_om.svg.brittle_icons.auto_bear_icon, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "myBear"], null)], null)], null))), React.DOM.div({"className":"iconOuter ant"}, om.core.build.call(null, clui_om.svg.brittle_icons.auto_ant_icon, 
      self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "myAnt"], null)], null)], null))), React.DOM.div({"className":"iconOuter flipper"}, om.core.build.call(null, clui_om.svg.brittle_icons.seahorse, self__.app, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "flipper"], null)], null)], null))), React.DOM.div({"className":"iconOuter kitty"}, React.DOM.svg({"viewBox":"0 0 120 120"}, React.DOM.circle({"r":60, "cy":60, "cx":60}), om.core.build.call(null, clui_om.svg.brittle_icons.kitty_icon, 
      self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "y", "y", -1757859776), -5, new cljs.core.Keyword(null, "id", "id", -1388402092), "kitty"], null)], null)], null))))));
    };
    clui_om.page_svg_om.t20263.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20265) {
      var self__ = this;
      var _20265__$1 = this;
      return self__.meta20264;
    };
    clui_om.page_svg_om.t20263.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20265, meta20264__$1) {
      var self__ = this;
      var _20265__$1 = this;
      return new clui_om.page_svg_om.t20263(self__.opts, self__.owner, self__.app, self__.main_widget, meta20264__$1);
    };
    clui_om.page_svg_om.t20263.cljs$lang$type = true;
    clui_om.page_svg_om.t20263.cljs$lang$ctorStr = "clui-om.page-svg-om/t20263";
    clui_om.page_svg_om.t20263.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-svg-om/t20263");
    };
    clui_om.page_svg_om.__GT_t20263 = function __GT_t20263(opts__$1, owner__$1, app__$1, main_widget__$1, meta20264) {
      return new clui_om.page_svg_om.t20263(opts__$1, owner__$1, app__$1, main_widget__$1, meta20264);
    };
  }
  return new clui_om.page_svg_om.t20263(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 92, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 43, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 16, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_svg_om.cljs"], 
  null));
};
clui_om.page_svg_om.main = function main() {
  var msg = "(main):: page_svg_om (main) function...";
  clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
  console.log(msg);
  console.log([cljs.core.str("Brittle-Icons Heart Constant: "), cljs.core.str(clui_om.svg.brittle_icons.heart_svg)].join(""));
  return om.core.root.call(null, clui_om.page_svg_om.main_widget, clui_om.page_svg_om.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_svg_om.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_svg_om.main", clui_om.page_svg_om.main);
goog.provide("clui_om.page_beta");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clui_om.misc.cards");
goog.require("clojure.browser.repl");
goog.require("cljs.core.async");
clui_om.page_beta.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "deck", "deck", 1145325705), clui_om.misc.cards.shuffled_deck.call(null), new cljs.core.Keyword(null, "hand", "hand", 791601933), cljs.core.PersistentVector.EMPTY], null));
clui_om.page_beta.ALPHA_ROOT = document.getElementById("alpha-div");
clui_om.page_beta.draw_BANG_ = function draw_BANG_(app) {
  var hand = cljs.core.deref.call(null, app).call(null, new cljs.core.Keyword(null, "hand", "hand", 791601933));
  var deck = cljs.core.deref.call(null, app).call(null, new cljs.core.Keyword(null, "deck", "deck", 1145325705));
  var temp__4124__auto__ = cljs.core.peek.call(null, deck);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var top_card = temp__4124__auto__;
    om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "hand", "hand", 791601933), function(top_card, temp__4124__auto__, hand, deck) {
      return function(p1__17530_SHARP_) {
        return cljs.core.conj.call(null, p1__17530_SHARP_, top_card);
      };
    }(top_card, temp__4124__auto__, hand, deck));
    console.log([cljs.core.str("Hand is now: "), cljs.core.str(cljs.core.deref.call(null, app).call(null, new cljs.core.Keyword(null, "hand", "hand", 791601933)))].join(""));
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "deck", "deck", 1145325705), cljs.core.pop.call(null, deck));
    return console.log([cljs.core.str("Deck count: "), cljs.core.str(cljs.core.count.call(null, cljs.core.deref.call(null, app).call(null, new cljs.core.Keyword(null, "deck", "deck", 1145325705))))].join(""));
  } else {
    return console.log("You cannot draw from an empty deck... duh.");
  }
};
clui_om.page_beta.shuffle_BANG_ = function shuffle_BANG_(app) {
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "hand", "hand", 791601933), cljs.core.PersistentVector.EMPTY);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "deck", "deck", 1145325705), clui_om.misc.cards.shuffled_deck.call(null));
};
clui_om.page_beta.main_widget = function main_widget(app, owner, opts) {
  if (typeof clui_om.page_beta.t17580 !== "undefined") {
  } else {
    clui_om.page_beta.t17580 = function(opts, owner, app, main_widget, meta17581) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.main_widget = main_widget;
      this.meta17581 = meta17581;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clui_om.page_beta.t17580.prototype.om$core$IRenderState$ = true;
    clui_om.page_beta.t17580.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__17583) {
      var self__ = this;
      var map__17584 = p__17583;
      var map__17584__$1 = cljs.core.seq_QMARK_.call(null, map__17584) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17584) : map__17584;
      var shuffle = cljs.core.get.call(null, map__17584__$1, new cljs.core.Keyword(null, "shuffle", "shuffle", 1261412160));
      var draw = cljs.core.get.call(null, map__17584__$1, new cljs.core.Keyword(null, "draw", "draw", 1358331674));
      var ___$1 = this;
      var top_card = cljs.core.peek.call(null, (new cljs.core.Keyword(null, "deck", "deck", 1145325705)).cljs$core$IFn$_invoke$arity$1(self__.app));
      return React.DOM.div({"className":"mainControls"}, om.core.build.call(null, clui_om.misc.cards.deck_display, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "draw", "draw", 1358331674), draw, new cljs.core.Keyword(null, "shuffle", "shuffle", 1261412160), shuffle], null)], null)), React.DOM.hr(null), cljs.core.truth_(top_card) ? React.DOM.div({"className":"topCard"}, 
      React.DOM.span(null, "Sneak Peek At Top Card: "), om.core.build.call(null, clui_om.misc.cards.card_display_txt, top_card)) : null, React.DOM.hr(null), om.core.build.call(null, clui_om.misc.cards.hand_display, self__.app));
    };
    clui_om.page_beta.t17580.prototype.om$core$IWillMount$ = true;
    clui_om.page_beta.t17580.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var draw = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "draw", "draw", 1358331674));
      var shuffle = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "shuffle", "shuffle", 1261412160));
      var c__6508__auto___17629 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto___17629, draw, shuffle, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto___17629, draw, shuffle, ___$1) {
              return function(state_17595) {
                var state_val_17596 = state_17595[1];
                if (state_val_17596 === 4) {
                  var inst_17587 = state_17595[2];
                  var inst_17588 = [cljs.core.str("(main-widget):: Draw request: "), cljs.core.str(inst_17587)].join("");
                  var inst_17589 = console.log(inst_17588);
                  var inst_17590 = clui_om.page_beta.draw_BANG_.call(null, self__.app);
                  var state_17595__$1 = function() {
                    var statearr_17597 = state_17595;
                    statearr_17597[7] = inst_17589;
                    statearr_17597[8] = inst_17590;
                    return statearr_17597;
                  }();
                  var statearr_17598_17630 = state_17595__$1;
                  statearr_17598_17630[2] = null;
                  statearr_17598_17630[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17596 === 3) {
                    var inst_17593 = state_17595[2];
                    var state_17595__$1 = state_17595;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17595__$1, inst_17593);
                  } else {
                    if (state_val_17596 === 2) {
                      var state_17595__$1 = state_17595;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17595__$1, 4, draw);
                    } else {
                      if (state_val_17596 === 1) {
                        var state_17595__$1 = state_17595;
                        var statearr_17599_17631 = state_17595__$1;
                        statearr_17599_17631[2] = null;
                        statearr_17599_17631[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto___17629, draw, shuffle, ___$1);
            return function(switch__6493__auto__, c__6508__auto___17629, draw, shuffle, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_17603 = [null, null, null, null, null, null, null, null, null];
                  statearr_17603[0] = state_machine__6494__auto__;
                  statearr_17603[1] = 1;
                  return statearr_17603;
                };
                var state_machine__6494__auto____1 = function(state_17595) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_17595);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e17604) {
                        if (e17604 instanceof Object) {
                          var ex__6497__auto__ = e17604;
                          var statearr_17605_17632 = state_17595;
                          statearr_17605_17632[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17595);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e17604;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__17633 = state_17595;
                      state_17595 = G__17633;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_17595) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_17595);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto___17629, draw, shuffle, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_17606 = f__6509__auto__.call(null);
            statearr_17606[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto___17629;
            return statearr_17606;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto___17629, draw, shuffle, ___$1));
      var c__6508__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6508__auto__, draw, shuffle, ___$1) {
        return function() {
          var f__6509__auto__ = function() {
            var switch__6493__auto__ = function(c__6508__auto__, draw, shuffle, ___$1) {
              return function(state_17617) {
                var state_val_17618 = state_17617[1];
                if (state_val_17618 === 4) {
                  var inst_17609 = state_17617[2];
                  var inst_17610 = [cljs.core.str("(main-widget):: Shuffle request: "), cljs.core.str(inst_17609)].join("");
                  var inst_17611 = console.log(inst_17610);
                  var inst_17612 = clui_om.page_beta.shuffle_BANG_.call(null, self__.app);
                  var state_17617__$1 = function() {
                    var statearr_17619 = state_17617;
                    statearr_17619[7] = inst_17612;
                    statearr_17619[8] = inst_17611;
                    return statearr_17619;
                  }();
                  var statearr_17620_17634 = state_17617__$1;
                  statearr_17620_17634[2] = null;
                  statearr_17620_17634[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17618 === 3) {
                    var inst_17615 = state_17617[2];
                    var state_17617__$1 = state_17617;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17617__$1, inst_17615);
                  } else {
                    if (state_val_17618 === 2) {
                      var state_17617__$1 = state_17617;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17617__$1, 4, shuffle);
                    } else {
                      if (state_val_17618 === 1) {
                        var state_17617__$1 = state_17617;
                        var statearr_17621_17635 = state_17617__$1;
                        statearr_17621_17635[2] = null;
                        statearr_17621_17635[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6508__auto__, draw, shuffle, ___$1);
            return function(switch__6493__auto__, c__6508__auto__, draw, shuffle, ___$1) {
              return function() {
                var state_machine__6494__auto__ = null;
                var state_machine__6494__auto____0 = function() {
                  var statearr_17625 = [null, null, null, null, null, null, null, null, null];
                  statearr_17625[0] = state_machine__6494__auto__;
                  statearr_17625[1] = 1;
                  return statearr_17625;
                };
                var state_machine__6494__auto____1 = function(state_17617) {
                  while (true) {
                    var ret_value__6495__auto__ = function() {
                      try {
                        while (true) {
                          var result__6496__auto__ = switch__6493__auto__.call(null, state_17617);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6496__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6496__auto__;
                          }
                          break;
                        }
                      } catch (e17626) {
                        if (e17626 instanceof Object) {
                          var ex__6497__auto__ = e17626;
                          var statearr_17627_17636 = state_17617;
                          statearr_17627_17636[5] = ex__6497__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17617);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e17626;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6495__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__17637 = state_17617;
                      state_17617 = G__17637;
                      continue;
                    } else {
                      return ret_value__6495__auto__;
                    }
                    break;
                  }
                };
                state_machine__6494__auto__ = function(state_17617) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6494__auto____0.call(this);
                    case 1:
                      return state_machine__6494__auto____1.call(this, state_17617);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6494__auto____0;
                state_machine__6494__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6494__auto____1;
                return state_machine__6494__auto__;
              }();
            }(switch__6493__auto__, c__6508__auto__, draw, shuffle, ___$1);
          }();
          var state__6510__auto__ = function() {
            var statearr_17628 = f__6509__auto__.call(null);
            statearr_17628[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6508__auto__;
            return statearr_17628;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6510__auto__);
        };
      }(c__6508__auto__, draw, shuffle, ___$1));
      return c__6508__auto__;
    };
    clui_om.page_beta.t17580.prototype.om$core$IInitState$ = true;
    clui_om.page_beta.t17580.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "draw", "draw", 1358331674), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "shuffle", "shuffle", 1261412160), cljs.core.async.chan.call(null)], null);
    };
    clui_om.page_beta.t17580.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17582) {
      var self__ = this;
      var _17582__$1 = this;
      return self__.meta17581;
    };
    clui_om.page_beta.t17580.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17582, meta17581__$1) {
      var self__ = this;
      var _17582__$1 = this;
      return new clui_om.page_beta.t17580(self__.opts, self__.owner, self__.app, self__.main_widget, meta17581__$1);
    };
    clui_om.page_beta.t17580.cljs$lang$type = true;
    clui_om.page_beta.t17580.cljs$lang$ctorStr = "clui-om.page-beta/t17580";
    clui_om.page_beta.t17580.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clui-om.page-beta/t17580");
    };
    clui_om.page_beta.__GT_t17580 = function __GT_t17580(opts__$1, owner__$1, app__$1, main_widget__$1, meta17581) {
      return new clui_om.page_beta.t17580(opts__$1, owner__$1, app__$1, main_widget__$1, meta17581);
    };
  }
  return new clui_om.page_beta.t17580(opts, owner, app, main_widget, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 51, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 71, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 36, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/scottfitz/code/clj/lab/clui-om/src/cljs/clui_om/page_beta.cljs"], 
  null));
};
clui_om.page_beta.main = function main() {
  var msg = "main():: initializing page-beta.cljs";
  console.log(msg);
  return om.core.root.call(null, clui_om.page_beta.main_widget, clui_om.page_beta.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), clui_om.page_beta.ALPHA_ROOT], null));
};
goog.exportSymbol("clui_om.page_beta.main", clui_om.page_beta.main);
goog.provide("clui_om.page_svg");
goog.require("cljs.core");
clui_om.page_svg.snap_node = "#snapNode";
clui_om.page_svg.snap_beta = "#snapNodeB";
clui_om.page_svg.snap_gamma = "#snapNodeC";
clui_om.page_svg.snap_heart = "#snapNodeHeart";
clui_om.page_svg.om_node = "#omNode";
clui_om.page_svg.snap_raw = function snap_raw() {
  console.log([cljs.core.str("Instantiating Snap on node id: "), cljs.core.str(clui_om.page_svg.snap_node)].join(""));
  var s = Snap(clui_om.page_svg.snap_node);
  var circA = s.circle(150, 150, 100);
  var _ = circA.attr({"strokeWidth":5, "stroke":"#000", "fill":"#bada55"});
  var diskA = s.circle(100, 150, 70);
  var diskB = s.circle(200, 150, 70);
  var disks = s.group(diskA, diskB);
  var ___$1 = disks.attr({"fill":"#fff"});
  var ___$2 = circA.attr({"mask":disks});
  var ___$3 = diskA.animate({"r":40}, 2E3);
  var ___$4 = disks.select("circle:nth-child(2)").animate({"r":40}, 2E3);
  var path1 = s.path("M10-5-10,15M15,0,0,15M0-5-20,15");
  var ___$5 = path1.attr({"strokeWidth":5, "stroke":"#bada55", "fill":"none"});
  var pattern1 = path1.pattern(0, 0, 10, 10);
  var ___$6 = circA.attr({"fill":pattern1});
  var ___$7 = disks.attr({"fill":Snap("#patternAlpha")});
  var ___$8 = disks.attr({"fill":"R(150, 150, 100)#fff-#000"});
  return null;
};
clui_om.page_svg.snap_raw_beta = function snap_raw_beta() {
  console.log([cljs.core.str("Instantiating Snap Beta block on node id: "), cljs.core.str(clui_om.page_svg.snap_beta)].join(""));
  var paper = Snap(clui_om.page_svg.snap_beta);
  var handler = function(paper) {
    return function(frag) {
      var group = frag.select("g");
      var _ = paper.append(group);
      var ___$1 = group.attr({"transform":"T50,50s2,2", "fill":"skyblue"});
      var ___$2 = group.drag();
      return null;
    };
  }(paper);
  return Snap.load("images/gears3.svg", handler);
};
clui_om.page_svg.snap_raw_gamma = function snap_raw_gamma() {
  console.log([cljs.core.str("Instantiated Snap Gamma block on node id: "), cljs.core.str(clui_om.page_svg.snap_gamma)].join(""));
  var paper = Snap(clui_om.page_svg.snap_gamma);
  var bg = paper.rect(0, 0, 80, 80);
  var _ = bg.attr({"fill":"rgba(0,0,0,0)"});
  var nested = paper.svg(0, 0, 80, 80, 0, 0, 200, 200);
  var wrapper = paper.group(bg, nested);
  var handler = function(paper, bg, _, nested, wrapper) {
    return function(frag) {
      var group = frag.select("g");
      var paths = group.selectAll("path");
      nested.append(group);
      paths.attr({"fill":"magenta"});
      bg.hover(function(group, paths, paper, bg, _, nested, wrapper) {
        return function() {
          paths.animate({"fill":"lime"}, 500);
          return bg.animate({"fill":"#CCCCCC"}, 500);
        };
      }(group, paths, paper, bg, _, nested, wrapper), function(group, paths, paper, bg, _, nested, wrapper) {
        return function() {
          paths.animate({"fill":"magenta"}, 500);
          return bg.animate({"fill":"#FFFFFF"}, 500);
        };
      }(group, paths, paper, bg, _, nested, wrapper));
      return wrapper.drag();
    };
  }(paper, bg, _, nested, wrapper);
  return Snap.load("images/bear18.svg", handler);
};
clui_om.page_svg.snap_raw_heart_fu = function snap_raw_heart_fu() {
  var paper = Snap(clui_om.page_svg.snap_heart);
  var bg = paper.rect(0, 0, 100, 100);
  var _ = bg.attr({"fill":"rgba(0,0,0,0)"});
  var nested = paper.svg(0, 0, 100, 100, 0, 0, 30, 30);
  var wrapper = paper.group(bg, nested);
  var handler = function(paper, bg, _, nested, wrapper) {
    return function(frag) {
      var path = frag.select("#heart-icon");
      var dupe = path.clone();
      var ___$1 = dupe.attr({"fill":"#3366FF"});
      var nest2 = paper.svg(150, 0, 100, 100, 0, 0, 30, 30);
      var ___$2 = nest2.append(dupe);
      nested.append(path);
      return path.attr({"fill":"#ff3300"});
    };
  }(paper, bg, _, nested, wrapper);
  return Snap.load("images/heart.svg", handler);
};
clui_om.page_svg.load_phone = function load_phone() {
  var paper = Snap("#phoneNode");
  var nested = paper.svg(0, 0, 100, 100, 0, 0, 272, 272);
  var wrapper = paper.group(nested);
  var handler = function(paper, nested, wrapper) {
    return function(frag) {
      var g = frag.select("g");
      nested.append(g);
      return wrapper.animate({"transform":"T200,0"}, 1E4);
    };
  }(paper, nested, wrapper);
  return Snap.load("images/ringing-phone.svg", handler);
};
clui_om.page_svg.main = function main() {
  var msg = "(main):: page_svg (main) function...";
  console.log(msg);
  clui_om.page_svg.snap_raw.call(null);
  clui_om.page_svg.snap_raw_beta.call(null);
  clui_om.page_svg.snap_raw_gamma.call(null);
  clui_om.page_svg.snap_raw_heart_fu.call(null);
  return clui_om.page_svg.load_phone.call(null);
};
goog.exportSymbol("clui_om.page_svg.main", clui_om.page_svg.main);

//# sourceMappingURL=clui_om.js.map